{
  "language": "cpp",
  "directory": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp",
  "symbols": [
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 161,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Timeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 15
            }
          },
          "preview": "class Timeline;"
        },
        {
          "name": "BoneTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 19
            }
          },
          "preview": "class BoneTimeline;"
        },
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 44,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "Event",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
          "range": {
            "start": {
              "line": 46,
              "character": 0
            },
            "end": {
              "line": 46,
              "character": 12
            }
          },
          "preview": "class Event;"
        },
        {
          "name": "AnimationState",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
          "range": {
            "start": {
              "line": 48,
              "character": 0
            },
            "end": {
              "line": 48,
              "character": 21
            }
          },
          "preview": "class AnimationState;"
        },
        {
          "name": "Animation",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
          "range": {
            "start": {
              "line": 51,
              "character": 0
            },
            "end": {
              "line": 160,
              "character": 2
            }
          },
          "preview": "class SP_API Animation : public SpineObject {",
          "documentation": "Stores a list of timelines to animate a skeleton's pose over time.",
          "children": [
            {
              "name": "Animation",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 78
                }
              },
              "preview": "Animation(const String &name, Vector<Timeline *> &timelines, float duration);"
            },
            {
              "name": "~Animation",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
              "range": {
                "start": {
                  "line": 105,
                  "character": 0
                },
                "end": {
                  "line": 105,
                  "character": 14
                }
              },
              "preview": "~Animation();"
            },
            {
              "name": "getTimelines",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
              "range": {
                "start": {
                  "line": 108,
                  "character": 0
                },
                "end": {
                  "line": 108,
                  "character": 36
                }
              },
              "preview": "Vector<Timeline *> &getTimelines();",
              "documentation": "If the returned array or the timelines it contains are modified, setTimelines() must be called."
            },
            {
              "name": "setTimelines",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
              "range": {
                "start": {
                  "line": 110,
                  "character": 0
                },
                "end": {
                  "line": 110,
                  "character": 50
                }
              },
              "preview": "void setTimelines(Vector<Timeline *> &timelines);"
            },
            {
              "name": "hasTimeline",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
              "range": {
                "start": {
                  "line": 113,
                  "character": 0
                },
                "end": {
                  "line": 113,
                  "character": 43
                }
              },
              "preview": "bool hasTimeline(Vector<PropertyId> &ids);",
              "documentation": "Returns true if this animation contains a timeline with any of the specified property IDs."
            },
            {
              "name": "getDuration",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
              "range": {
                "start": {
                  "line": 117,
                  "character": 0
                },
                "end": {
                  "line": 117,
                  "character": 21
                }
              },
              "preview": "float getDuration();",
              "documentation": "The duration of the animation in seconds, which is usually the highest time of all frames in the timeline. The duration is\nused to know when it has completed and when it should loop back to the start."
            },
            {
              "name": "setDuration",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
              "range": {
                "start": {
                  "line": 119,
                  "character": 0
                },
                "end": {
                  "line": 119,
                  "character": 33
                }
              },
              "preview": "void setDuration(float inValue);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
              "range": {
                "start": {
                  "line": 141,
                  "character": 0
                },
                "end": {
                  "line": 142,
                  "character": 64
                }
              },
              "preview": "void apply(Skeleton &skeleton, float lastTime, float time, bool loop, Vector<Event *> *pEvents, float alpha,",
              "documentation": "Applies the animation's timelines to the specified skeleton.\nSee Timeline::apply().\n@param skeleton The skeleton the animation is being applied to. This provides access to the bones, slots, and other skeleton\ncomponents the timelines may change.\n@param lastTime The last time in seconds this animation was applied. Some timelines trigger only at specific times rather\nthan every frame. Pass -1 the first time an animation is applied to ensure frame 0 is triggered.\n@param time The time in seconds the skeleton is being posed for. Most timelines find the frame before and the frame after\nthis time and interpolate between the frame values. If beyond the getDuration() and loop is\ntrue then the animation will repeat, else the last frame will be applied.\n@param loop If true, the animation repeats after the getDuration().\n@param events If any events are fired, they are added to this list. Can be null to ignore fired events or if no timelines\nfire events.\n@param alpha 0 applies the current or setup values (depending on blend). 1 applies the timeline values. Between\n0 and 1 applies values between the current or setup values and the timeline values. By adjusting\nalpha over time, an animation can be mixed in or out. alpha can also be useful to apply\nanimations on top of each other (layering).\n@param blend Controls how mixing is applied when alpha < 1.\n@param direction Indicates whether the timelines are mixing in or out. Used by timelines which perform instant transitions,\nsuch as DrawOrderTimeline or AttachmentTimeline."
            },
            {
              "name": "getName",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
              "range": {
                "start": {
                  "line": 145,
                  "character": 0
                },
                "end": {
                  "line": 145,
                  "character": 25
                }
              },
              "preview": "const String &getName();",
              "documentation": "The animation's name, which is unique across all animations in the skeleton."
            },
            {
              "name": "getBones",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
              "range": {
                "start": {
                  "line": 148,
                  "character": 0
                },
                "end": {
                  "line": 148,
                  "character": 31
                }
              },
              "preview": "const Vector<int> &getBones();",
              "documentation": "The bone indices affected by this animation."
            },
            {
              "name": "search",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
              "range": {
                "start": {
                  "line": 151,
                  "character": 0
                },
                "end": {
                  "line": 151,
                  "character": 56
                }
              },
              "preview": "static int search(Vector<float> &values, float target);",
              "documentation": "@param target After the first and before the last entry."
            },
            {
              "name": "search",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
              "range": {
                "start": {
                  "line": 153,
                  "character": 0
                },
                "end": {
                  "line": 153,
                  "character": 66
                }
              },
              "preview": "static int search(Vector<float> &values, float target, int step);"
            },
            {
              "name": "_timelines",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
              "range": {
                "start": {
                  "line": 155,
                  "character": 0
                },
                "end": {
                  "line": 155,
                  "character": 31
                }
              },
              "preview": "Vector<Timeline *> _timelines;"
            },
            {
              "name": "_timelineIds",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
              "range": {
                "start": {
                  "line": 156,
                  "character": 0
                },
                "end": {
                  "line": 156,
                  "character": 40
                }
              },
              "preview": "HashMap<PropertyId, bool> _timelineIds;"
            },
            {
              "name": "_bones",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
              "range": {
                "start": {
                  "line": 157,
                  "character": 0
                },
                "end": {
                  "line": 157,
                  "character": 20
                }
              },
              "preview": "Vector<int> _bones;"
            },
            {
              "name": "_duration",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
              "range": {
                "start": {
                  "line": 158,
                  "character": 0
                },
                "end": {
                  "line": 158,
                  "character": 17
                }
              },
              "preview": "float _duration;"
            },
            {
              "name": "_name",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Animation.h",
              "range": {
                "start": {
                  "line": 159,
                  "character": 0
                },
                "end": {
                  "line": 159,
                  "character": 14
                }
              },
              "preview": "String _name;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
      "range": {
        "start": {
          "line": 45,
          "character": 0
        },
        "end": {
          "line": 553,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "EventType",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
          "range": {
            "start": {
              "line": 46,
              "character": 0
            },
            "end": {
              "line": 53,
              "character": 2
            }
          },
          "preview": "enum EventType {",
          "children": [
            {
              "name": "EventType_Start",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 21
                }
              },
              "preview": "EventType_Start = 0,"
            },
            {
              "name": "EventType_Interrupt",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 21
                }
              },
              "preview": "EventType_Interrupt,"
            },
            {
              "name": "EventType_End",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 15
                }
              },
              "preview": "EventType_End,"
            },
            {
              "name": "EventType_Complete",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 20
                }
              },
              "preview": "EventType_Complete,"
            },
            {
              "name": "EventType_Dispose",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 19
                }
              },
              "preview": "EventType_Dispose,"
            },
            {
              "name": "EventType_Event",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 17
                }
              },
              "preview": "EventType_Event"
            }
          ]
        },
        {
          "name": "AnimationState",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
          "range": {
            "start": {
              "line": 55,
              "character": 0
            },
            "end": {
              "line": 55,
              "character": 21
            }
          },
          "preview": "class AnimationState;",
          "supertypes": [
            "SpineObject"
          ]
        },
        {
          "name": "TrackEntry",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
          "range": {
            "start": {
              "line": 57,
              "character": 0
            },
            "end": {
              "line": 57,
              "character": 17
            }
          },
          "preview": "class TrackEntry;",
          "supertypes": [
            "SpineObject"
          ]
        },
        {
          "name": "Animation",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
          "range": {
            "start": {
              "line": 59,
              "character": 0
            },
            "end": {
              "line": 59,
              "character": 16
            }
          },
          "preview": "class Animation;"
        },
        {
          "name": "Event",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
          "range": {
            "start": {
              "line": 61,
              "character": 0
            },
            "end": {
              "line": 61,
              "character": 12
            }
          },
          "preview": "class Event;"
        },
        {
          "name": "AnimationStateData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
          "range": {
            "start": {
              "line": 63,
              "character": 0
            },
            "end": {
              "line": 63,
              "character": 25
            }
          },
          "preview": "class AnimationStateData;"
        },
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
          "range": {
            "start": {
              "line": 65,
              "character": 0
            },
            "end": {
              "line": 65,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "RotateTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
          "range": {
            "start": {
              "line": 67,
              "character": 0
            },
            "end": {
              "line": 67,
              "character": 21
            }
          },
          "preview": "class RotateTimeline;"
        },
        {
          "name": "AttachmentTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
          "range": {
            "start": {
              "line": 69,
              "character": 0
            },
            "end": {
              "line": 69,
              "character": 25
            }
          },
          "preview": "class AttachmentTimeline;"
        },
        {
          "name": "AnimationStateListener",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
          "range": {
            "start": {
              "line": 75,
              "character": 0
            },
            "end": {
              "line": 75,
              "character": 111
            }
          },
          "preview": "typedef void (*AnimationStateListener)(AnimationState *state, EventType type, TrackEntry *entry, Event *event);"
        },
        {
          "name": "AnimationStateListenerObject",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
          "range": {
            "start": {
              "line": 80,
              "character": 0
            },
            "end": {
              "line": 88,
              "character": 2
            }
          },
          "preview": "class SP_API AnimationStateListenerObject {",
          "documentation": "Abstract class to inherit from to create a callback object",
          "children": [
            {
              "name": "AnimationStateListenerObject",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 82,
                  "character": 0
                },
                "end": {
                  "line": 82,
                  "character": 35
                }
              },
              "preview": "AnimationStateListenerObject() {};"
            },
            {
              "name": "~AnimationStateListenerObject",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 44
                }
              },
              "preview": "virtual ~AnimationStateListenerObject() {};"
            },
            {
              "name": "callback",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 99
                }
              },
              "preview": "virtual void callback(AnimationState *state, EventType type, TrackEntry *entry, Event *event) = 0;",
              "documentation": "The callback function to be called"
            }
          ]
        },
        {
          "name": "TrackEntry",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
          "range": {
            "start": {
              "line": 91,
              "character": 0
            },
            "end": {
              "line": 348,
              "character": 2
            }
          },
          "preview": "class SP_API TrackEntry : public SpineObject, public HasRendererObject {",
          "documentation": "State for the playback of an animation",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "TrackEntry",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 97,
                  "character": 0
                },
                "end": {
                  "line": 97,
                  "character": 14
                }
              },
              "preview": "TrackEntry();"
            },
            {
              "name": "~TrackEntry",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 99,
                  "character": 0
                },
                "end": {
                  "line": 99,
                  "character": 23
                }
              },
              "preview": "virtual ~TrackEntry();"
            },
            {
              "name": "getTrackIndex",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 102,
                  "character": 0
                },
                "end": {
                  "line": 102,
                  "character": 21
                }
              },
              "preview": "int getTrackIndex();",
              "documentation": "The index of the track where this entry is either current or queued."
            },
            {
              "name": "getAnimation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 105,
                  "character": 0
                },
                "end": {
                  "line": 105,
                  "character": 27
                }
              },
              "preview": "Animation *getAnimation();",
              "documentation": "The animation to apply for this track entry."
            },
            {
              "name": "setAnimation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 108,
                  "character": 0
                },
                "end": {
                  "line": 108,
                  "character": 41
                }
              },
              "preview": "void setAnimation(Animation* animation);",
              "documentation": "Sets the animation for this track entry."
            },
            {
              "name": "getPrevious",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 110,
                  "character": 0
                },
                "end": {
                  "line": 110,
                  "character": 27
                }
              },
              "preview": "TrackEntry *getPrevious();"
            },
            {
              "name": "getLoop",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 113,
                  "character": 0
                },
                "end": {
                  "line": 113,
                  "character": 16
                }
              },
              "preview": "bool getLoop();",
              "documentation": "If true, the animation will repeat. If false, it will not, instead its last frame is applied if played beyond its duration."
            },
            {
              "name": "setLoop",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 115,
                  "character": 0
                },
                "end": {
                  "line": 115,
                  "character": 28
                }
              },
              "preview": "void setLoop(bool inValue);"
            },
            {
              "name": "getHoldPrevious",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 128,
                  "character": 0
                },
                "end": {
                  "line": 128,
                  "character": 24
                }
              },
              "preview": "bool getHoldPrevious();",
              "documentation": "If true, when mixing from the previous animation to this animation, the previous animation is applied as normal instead\nof being mixed out.\nWhen mixing between animations that key the same property, if a lower track also keys that property then the value will\nbriefly dip toward the lower track value during the mix. This happens because the first animation mixes from 100% to 0%\nwhile the second animation mixes from 0% to 100%. Setting holdPrevious to true applies the first animation\nat 100% during the mix so the lower track value is overwritten. Such dipping does not occur on the lowest track which\nkeys the property, only when a higher track also keys the property.\nSnapping will occur if holdPrevious is true and this animation does not key all the same properties as the\nprevious animation."
            },
            {
              "name": "setHoldPrevious",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 130,
                  "character": 36
                }
              },
              "preview": "void setHoldPrevious(bool inValue);"
            },
            {
              "name": "getReverse",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 132,
                  "character": 0
                },
                "end": {
                  "line": 132,
                  "character": 19
                }
              },
              "preview": "bool getReverse();"
            },
            {
              "name": "setReverse",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 134,
                  "character": 0
                },
                "end": {
                  "line": 134,
                  "character": 31
                }
              },
              "preview": "void setReverse(bool inValue);"
            },
            {
              "name": "getShortestRotation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 136,
                  "character": 0
                },
                "end": {
                  "line": 136,
                  "character": 28
                }
              },
              "preview": "bool getShortestRotation();"
            },
            {
              "name": "setShortestRotation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 138,
                  "character": 0
                },
                "end": {
                  "line": 138,
                  "character": 40
                }
              },
              "preview": "void setShortestRotation(bool inValue);"
            },
            {
              "name": "getDelay",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 151,
                  "character": 0
                },
                "end": {
                  "line": 151,
                  "character": 18
                }
              },
              "preview": "float getDelay();",
              "documentation": "Seconds to postpone playing the animation. Must be >= 0. When this track entry is the current track entry,\ndelay postpones incrementing the getTrackTime(). When this track entry is queued,\ndelay is the time from the start of the previous animation to when this track entry will become the current\ntrack entry (ie when the previous track entry getTrackTime() >= this track entry's\ndelay).\ngetTimeScale() affects the delay.\nWhen passing delay <= 0 to AnimationState::addAnimation(int, Animation, bool, float) this\ndelay is set using a mix duration from AnimationStateData. To change the getMixDuration()\nafterward, use setMixDuration(float, float) so this delay is adjusted."
            },
            {
              "name": "setDelay",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 153,
                  "character": 0
                },
                "end": {
                  "line": 153,
                  "character": 30
                }
              },
              "preview": "void setDelay(float inValue);"
            },
            {
              "name": "getTrackTime",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 158,
                  "character": 0
                },
                "end": {
                  "line": 158,
                  "character": 22
                }
              },
              "preview": "float getTrackTime();",
              "documentation": "Current time in seconds this track entry has been the current track entry. The track time determines\ngetAnimationTime(). The track time can be set to start the animation at a time other than 0, without affecting\nlooping."
            },
            {
              "name": "setTrackTime",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 160,
                  "character": 0
                },
                "end": {
                  "line": 160,
                  "character": 34
                }
              },
              "preview": "void setTrackTime(float inValue);"
            },
            {
              "name": "getTrackEnd",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 169,
                  "character": 0
                },
                "end": {
                  "line": 169,
                  "character": 21
                }
              },
              "preview": "float getTrackEnd();",
              "documentation": "The track time in seconds when this animation will be removed from the track. Defaults to the highest possible float\nvalue, meaning the animation will be applied until a new animation is set or the track is cleared. If the track end time\nis reached, no other animations are queued for playback, and mixing from any previous animations is complete, then the\nproperties keyed by the animation are set to the setup pose and the track is cleared.\nIt may be desired to use AnimationState::addEmptyAnimation(int, float, float) rather than have the animation\nabruptly cease being applied."
            },
            {
              "name": "setTrackEnd",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 171,
                  "character": 0
                },
                "end": {
                  "line": 171,
                  "character": 33
                }
              },
              "preview": "void setTrackEnd(float inValue);"
            },
            {
              "name": "getAnimationStart",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 177,
                  "character": 0
                },
                "end": {
                  "line": 177,
                  "character": 27
                }
              },
              "preview": "float getAnimationStart();",
              "documentation": "Seconds when this animation starts, both initially and after looping. Defaults to 0.\nWhen changing the animation start time, it often makes sense to set TrackEntry.AnimationLast to the same value to\nprevent timeline keys before the start time from triggering."
            },
            {
              "name": "setAnimationStart",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 179,
                  "character": 0
                },
                "end": {
                  "line": 179,
                  "character": 39
                }
              },
              "preview": "void setAnimationStart(float inValue);"
            },
            {
              "name": "getAnimationEnd",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 183,
                  "character": 0
                },
                "end": {
                  "line": 183,
                  "character": 25
                }
              },
              "preview": "float getAnimationEnd();",
              "documentation": "Seconds for the last frame of this animation. Non-looping animations won't play past this time. Looping animations will\nloop back to TrackEntry.AnimationStart at this time. Defaults to the animation duration."
            },
            {
              "name": "setAnimationEnd",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 185,
                  "character": 0
                },
                "end": {
                  "line": 185,
                  "character": 37
                }
              },
              "preview": "void setAnimationEnd(float inValue);"
            },
            {
              "name": "getAnimationLast",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 190,
                  "character": 0
                },
                "end": {
                  "line": 190,
                  "character": 26
                }
              },
              "preview": "float getAnimationLast();",
              "documentation": "The time in seconds this animation was last applied. Some timelines use this for one-time triggers. Eg, when this\nanimation is applied, event timelines will fire all events between the animation last time (exclusive) and animation time\n(inclusive). Defaults to -1 to ensure triggers on frame 0 happen the first time this animation is applied."
            },
            {
              "name": "setAnimationLast",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 192,
                  "character": 0
                },
                "end": {
                  "line": 192,
                  "character": 38
                }
              },
              "preview": "void setAnimationLast(float inValue);"
            },
            {
              "name": "getAnimationTime",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 200,
                  "character": 0
                },
                "end": {
                  "line": 200,
                  "character": 26
                }
              },
              "preview": "float getAnimationTime();",
              "documentation": "Uses getTrackTime() to compute the animationTime. When the trackTime is 0, the\nanimationTime is equal to the animationStart time.\nThe animationTime is between getAnimationStart() and getAnimationEnd(), except if this\ntrack entry is non-looping and getAnimationEnd() is >= to the animation duration, then\nanimationTime continues to increase past getAnimationEnd()."
            },
            {
              "name": "getTimeScale",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 215,
                  "character": 0
                },
                "end": {
                  "line": 215,
                  "character": 22
                }
              },
              "preview": "float getTimeScale();",
              "documentation": "Multiplier for the delta time when this track entry is updated, causing time for this animation to pass slower or\nfaster. Defaults to 1.\nValues < 0 are not supported. To play an animation in reverse, use getReverse().\ngetMixTime() is not affected by track entry time scale, so getMixDuration() may need to be adjusted to\nmatch the animation speed.\nWhen using AnimationState::addAnimation(int, Animation, bool, float) with a delay <= 0, the\ngetDelay() is set using the mix duration from the AnimationStateData, assuming time scale to be 1. If\nthe time scale is not 1, the delay may need to be adjusted.\nSee AnimationState getTimeScale() for affecting all animations."
            },
            {
              "name": "setTimeScale",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 217,
                  "character": 0
                },
                "end": {
                  "line": 217,
                  "character": 34
                }
              },
              "preview": "void setTimeScale(float inValue);"
            },
            {
              "name": "getAlpha",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 224,
                  "character": 0
                },
                "end": {
                  "line": 224,
                  "character": 18
                }
              },
              "preview": "float getAlpha();",
              "documentation": "Values less than 1 mix this animation with the last skeleton pose. Defaults to 1, which overwrites the last skeleton pose with\nthis animation.\nTypically track 0 is used to completely pose the skeleton, then alpha can be used on higher tracks. It doesn't make sense\nto use alpha on track 0 if the skeleton pose is from the last frame render."
            },
            {
              "name": "setAlpha",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 226,
                  "character": 0
                },
                "end": {
                  "line": 226,
                  "character": 30
                }
              },
              "preview": "void setAlpha(float inValue);"
            },
            {
              "name": "getEventThreshold",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 231,
                  "character": 0
                },
                "end": {
                  "line": 231,
                  "character": 27
                }
              },
              "preview": "float getEventThreshold();",
              "documentation": "When the mix percentage (mix time / mix duration) is less than the event threshold, event timelines for the animation\nbeing mixed out will be applied. Defaults to 0, so event timelines are not applied for an animation being mixed out."
            },
            {
              "name": "setEventThreshold",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 233,
                  "character": 0
                },
                "end": {
                  "line": 233,
                  "character": 39
                }
              },
              "preview": "void setEventThreshold(float inValue);"
            },
            {
              "name": "getMixAttachmentThreshold",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 238,
                  "character": 0
                },
                "end": {
                  "line": 238,
                  "character": 35
                }
              },
              "preview": "float getMixAttachmentThreshold();",
              "documentation": "When the mix percentage (mix time / mix duration) is less than the attachment threshold, attachment timelines for the\nanimation being mixed out will be applied. Defaults to 0, so attachment timelines are not applied for an animation being\nmixed out."
            },
            {
              "name": "setMixAttachmentThreshold",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 240,
                  "character": 0
                },
                "end": {
                  "line": 240,
                  "character": 47
                }
              },
              "preview": "void setMixAttachmentThreshold(float inValue);"
            },
            {
              "name": "getAlphaAttachmentThreshold",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 244,
                  "character": 0
                },
                "end": {
                  "line": 244,
                  "character": 43
                }
              },
              "preview": "float getAlphaAttachmentThreshold();",
              "documentation": "When getAlpha() is greater than alphaAttachmentThreshold, attachment timelines are applied.\nDefaults to 0, so attachment timelines are always applied. */"
            },
            {
              "name": "setAlphaAttachmentThreshold",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 246,
                  "character": 0
                },
                "end": {
                  "line": 246,
                  "character": 55
                }
              },
              "preview": "void setAlphaAttachmentThreshold(float inValue);"
            },
            {
              "name": "getMixDrawOrderThreshold",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 251,
                  "character": 0
                },
                "end": {
                  "line": 251,
                  "character": 34
                }
              },
              "preview": "float getMixDrawOrderThreshold();",
              "documentation": "When the mix percentage (mix time / mix duration) is less than the draw order threshold, draw order timelines for the\nanimation being mixed out will be applied. Defaults to 0, so draw order timelines are not applied for an animation being\nmixed out."
            },
            {
              "name": "setMixDrawOrderThreshold",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 253,
                  "character": 0
                },
                "end": {
                  "line": 253,
                  "character": 46
                }
              },
              "preview": "void setMixDrawOrderThreshold(float inValue);"
            },
            {
              "name": "getNext",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 256,
                  "character": 0
                },
                "end": {
                  "line": 256,
                  "character": 23
                }
              },
              "preview": "TrackEntry *getNext();",
              "documentation": "The animation queued to start after this animation, or NULL."
            },
            {
              "name": "isComplete",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 259,
                  "character": 0
                },
                "end": {
                  "line": 259,
                  "character": 19
                }
              },
              "preview": "bool isComplete();",
              "documentation": "Returns true if at least one loop has been completed."
            },
            {
              "name": "getMixTime",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 263,
                  "character": 0
                },
                "end": {
                  "line": 263,
                  "character": 20
                }
              },
              "preview": "float getMixTime();",
              "documentation": "Seconds from 0 to the mix duration when mixing from the previous animation to this animation. May be slightly more than\nTrackEntry.MixDuration when the mix is complete."
            },
            {
              "name": "setMixTime",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 265,
                  "character": 0
                },
                "end": {
                  "line": 265,
                  "character": 32
                }
              },
              "preview": "void setMixTime(float inValue);"
            },
            {
              "name": "getMixDuration",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 275,
                  "character": 0
                },
                "end": {
                  "line": 275,
                  "character": 24
                }
              },
              "preview": "float getMixDuration();",
              "documentation": "Seconds for mixing from the previous animation to this animation. Defaults to the value provided by\nAnimationStateData based on the animation before this animation (if any).\nThe mix duration can be set manually rather than use the value from AnimationStateData.GetMix.\nIn that case, the mixDuration must be set before AnimationState.update(float) is next called.\nWhen using AnimationState::addAnimation(int, Animation, bool, float) with a delay\nless than or equal to 0, note the Delay is set using the mix duration from the AnimationStateData"
            },
            {
              "name": "setMixDuration",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 277,
                  "character": 0
                },
                "end": {
                  "line": 277,
                  "character": 36
                }
              },
              "preview": "void setMixDuration(float inValue);"
            },
            {
              "name": "setMixDuration",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 284,
                  "character": 0
                },
                "end": {
                  "line": 284,
                  "character": 59
                }
              },
              "preview": "void setMixDuration(float mixDuration, float delay);",
              "documentation": "Sets both getMixDuration() and getDelay().\n@param delay If > 0, sets TrackEntry::getDelay(). If <= 0, the delay set is the duration of the previous track\nentry minus the specified mix duration plus the specified delay (ie the mix ends at\n(delay = 0) or before (delay < 0) the previous track entry duration). If the previous\nentry is looping, its next loop completion is used instead of its duration."
            },
            {
              "name": "getMixBlend",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 286,
                  "character": 0
                },
                "end": {
                  "line": 286,
                  "character": 24
                }
              },
              "preview": "MixBlend getMixBlend();"
            },
            {
              "name": "setMixBlend",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 288,
                  "character": 0
                },
                "end": {
                  "line": 288,
                  "character": 34
                }
              },
              "preview": "void setMixBlend(MixBlend blend);"
            },
            {
              "name": "getMixingFrom",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 292,
                  "character": 0
                },
                "end": {
                  "line": 292,
                  "character": 29
                }
              },
              "preview": "TrackEntry *getMixingFrom();",
              "documentation": "The track entry for the previous animation when mixing from the previous animation to this animation, or NULL if no\nmixing is currently occuring. When mixing from multiple animations, MixingFrom makes up a double linked list with MixingTo."
            },
            {
              "name": "getMixingTo",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 296,
                  "character": 0
                },
                "end": {
                  "line": 296,
                  "character": 27
                }
              },
              "preview": "TrackEntry *getMixingTo();",
              "documentation": "The track entry for the next animation when mixing from this animation, or NULL if no mixing is currently occuring.\nWhen mixing from multiple animations, MixingTo makes up a double linked list with MixingFrom."
            },
            {
              "name": "resetRotationDirections",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 305,
                  "character": 0
                },
                "end": {
                  "line": 305,
                  "character": 32
                }
              },
              "preview": "void resetRotationDirections();",
              "documentation": "Resets the rotation directions for mixing this entry's rotate timelines. This can be useful to avoid bones rotating the\nlong way around when using alpha and starting animations on other tracks.\nMixing involves finding a rotation between two others, which has two possible solutions: the short way or the long way around.\nThe two rotations likely change over time, so which direction is the short or long way also changes.\nIf the short way was always chosen, bones would flip to the other side when that direction became the long way.\nTrackEntry chooses the short way the first time it is applied and remembers that direction."
            },
            {
              "name": "getTrackComplete",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 307,
                  "character": 0
                },
                "end": {
                  "line": 307,
                  "character": 26
                }
              },
              "preview": "float getTrackComplete();"
            },
            {
              "name": "setListener",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 309,
                  "character": 0
                },
                "end": {
                  "line": 309,
                  "character": 51
                }
              },
              "preview": "void setListener(AnimationStateListener listener);"
            },
            {
              "name": "setListener",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 311,
                  "character": 0
                },
                "end": {
                  "line": 311,
                  "character": 58
                }
              },
              "preview": "void setListener(AnimationStateListenerObject *listener);"
            },
            {
              "name": "isEmptyAnimation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 314,
                  "character": 0
                },
                "end": {
                  "line": 314,
                  "character": 25
                }
              },
              "preview": "bool isEmptyAnimation();",
              "documentation": "Returns true if this entry is for the empty animation."
            },
            {
              "name": "wasApplied",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 319,
                  "character": 0
                },
                "end": {
                  "line": 319,
                  "character": 25
                }
              },
              "preview": "bool wasApplied();",
              "documentation": "Returns true if this track entry has been applied at least once.\nSee AnimationState::apply(Skeleton)."
            },
            {
              "name": "isNextReady",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 323,
                  "character": 0
                },
                "end": {
                  "line": 325,
                  "character": 9
                }
              },
              "preview": "bool isNextReady () {",
              "documentation": "Returns true if there is a getNext() track entry that is ready to become the current track entry during the\nnext AnimationState::update(float)}"
            },
            {
              "name": "_animation",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 328,
                  "character": 0
                },
                "end": {
                  "line": 328,
                  "character": 23
                }
              },
              "preview": "Animation *_animation;"
            },
            {
              "name": "_previous",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 329,
                  "character": 0
                },
                "end": {
                  "line": 329,
                  "character": 23
                }
              },
              "preview": "TrackEntry *_previous;"
            },
            {
              "name": "_next",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 330,
                  "character": 0
                },
                "end": {
                  "line": 330,
                  "character": 19
                }
              },
              "preview": "TrackEntry *_next;"
            },
            {
              "name": "_mixingFrom",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 331,
                  "character": 0
                },
                "end": {
                  "line": 331,
                  "character": 25
                }
              },
              "preview": "TrackEntry *_mixingFrom;"
            },
            {
              "name": "_mixingTo",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 332,
                  "character": 0
                },
                "end": {
                  "line": 332,
                  "character": 23
                }
              },
              "preview": "TrackEntry *_mixingTo;"
            },
            {
              "name": "_trackIndex",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 333,
                  "character": 0
                },
                "end": {
                  "line": 333,
                  "character": 17
                }
              },
              "preview": "int _trackIndex;"
            },
            {
              "name": "_loop",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 335,
                  "character": 0
                },
                "end": {
                  "line": 335,
                  "character": 12
                }
              },
              "preview": "bool _loop, _holdPrevious, _reverse, _shortestRotation;"
            },
            {
              "name": "_holdPrevious",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 335,
                  "character": 0
                },
                "end": {
                  "line": 335,
                  "character": 27
                }
              },
              "preview": "bool _loop, _holdPrevious, _reverse, _shortestRotation;"
            },
            {
              "name": "_reverse",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 335,
                  "character": 0
                },
                "end": {
                  "line": 335,
                  "character": 37
                }
              },
              "preview": "bool _loop, _holdPrevious, _reverse, _shortestRotation;"
            },
            {
              "name": "_shortestRotation",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 335,
                  "character": 0
                },
                "end": {
                  "line": 335,
                  "character": 56
                }
              },
              "preview": "bool _loop, _holdPrevious, _reverse, _shortestRotation;"
            },
            {
              "name": "_eventThreshold",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 336,
                  "character": 0
                },
                "end": {
                  "line": 336,
                  "character": 23
                }
              },
              "preview": "float _eventThreshold, _mixAttachmentThreshold, _alphaAttachmentThreshold, _mixDrawOrderThreshold;"
            },
            {
              "name": "_mixAttachmentThreshold",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 336,
                  "character": 0
                },
                "end": {
                  "line": 336,
                  "character": 48
                }
              },
              "preview": "float _eventThreshold, _mixAttachmentThreshold, _alphaAttachmentThreshold, _mixDrawOrderThreshold;"
            },
            {
              "name": "_alphaAttachmentThreshold",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 336,
                  "character": 0
                },
                "end": {
                  "line": 336,
                  "character": 75
                }
              },
              "preview": "float _eventThreshold, _mixAttachmentThreshold, _alphaAttachmentThreshold, _mixDrawOrderThreshold;"
            },
            {
              "name": "_mixDrawOrderThreshold",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 336,
                  "character": 0
                },
                "end": {
                  "line": 336,
                  "character": 99
                }
              },
              "preview": "float _eventThreshold, _mixAttachmentThreshold, _alphaAttachmentThreshold, _mixDrawOrderThreshold;"
            },
            {
              "name": "_animationStart",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 337,
                  "character": 0
                },
                "end": {
                  "line": 337,
                  "character": 23
                }
              },
              "preview": "float _animationStart, _animationEnd, _animationLast, _nextAnimationLast;"
            },
            {
              "name": "_animationEnd",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 337,
                  "character": 0
                },
                "end": {
                  "line": 337,
                  "character": 38
                }
              },
              "preview": "float _animationStart, _animationEnd, _animationLast, _nextAnimationLast;"
            },
            {
              "name": "_animationLast",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 337,
                  "character": 0
                },
                "end": {
                  "line": 337,
                  "character": 54
                }
              },
              "preview": "float _animationStart, _animationEnd, _animationLast, _nextAnimationLast;"
            },
            {
              "name": "_nextAnimationLast",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 337,
                  "character": 0
                },
                "end": {
                  "line": 337,
                  "character": 74
                }
              },
              "preview": "float _animationStart, _animationEnd, _animationLast, _nextAnimationLast;"
            },
            {
              "name": "_delay",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 338,
                  "character": 0
                },
                "end": {
                  "line": 338,
                  "character": 14
                }
              },
              "preview": "float _delay, _trackTime, _trackLast, _nextTrackLast, _trackEnd, _timeScale;"
            },
            {
              "name": "_trackTime",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 338,
                  "character": 0
                },
                "end": {
                  "line": 338,
                  "character": 26
                }
              },
              "preview": "float _delay, _trackTime, _trackLast, _nextTrackLast, _trackEnd, _timeScale;"
            },
            {
              "name": "_trackLast",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 338,
                  "character": 0
                },
                "end": {
                  "line": 338,
                  "character": 38
                }
              },
              "preview": "float _delay, _trackTime, _trackLast, _nextTrackLast, _trackEnd, _timeScale;"
            },
            {
              "name": "_nextTrackLast",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 338,
                  "character": 0
                },
                "end": {
                  "line": 338,
                  "character": 54
                }
              },
              "preview": "float _delay, _trackTime, _trackLast, _nextTrackLast, _trackEnd, _timeScale;"
            },
            {
              "name": "_trackEnd",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 338,
                  "character": 0
                },
                "end": {
                  "line": 338,
                  "character": 65
                }
              },
              "preview": "float _delay, _trackTime, _trackLast, _nextTrackLast, _trackEnd, _timeScale;"
            },
            {
              "name": "_timeScale",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 338,
                  "character": 0
                },
                "end": {
                  "line": 338,
                  "character": 77
                }
              },
              "preview": "float _delay, _trackTime, _trackLast, _nextTrackLast, _trackEnd, _timeScale;"
            },
            {
              "name": "_alpha",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 339,
                  "character": 0
                },
                "end": {
                  "line": 339,
                  "character": 14
                }
              },
              "preview": "float _alpha, _mixTime, _mixDuration, _interruptAlpha, _totalAlpha;"
            },
            {
              "name": "_mixTime",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 339,
                  "character": 0
                },
                "end": {
                  "line": 339,
                  "character": 24
                }
              },
              "preview": "float _alpha, _mixTime, _mixDuration, _interruptAlpha, _totalAlpha;"
            },
            {
              "name": "_mixDuration",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 339,
                  "character": 0
                },
                "end": {
                  "line": 339,
                  "character": 38
                }
              },
              "preview": "float _alpha, _mixTime, _mixDuration, _interruptAlpha, _totalAlpha;"
            },
            {
              "name": "_interruptAlpha",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 339,
                  "character": 0
                },
                "end": {
                  "line": 339,
                  "character": 55
                }
              },
              "preview": "float _alpha, _mixTime, _mixDuration, _interruptAlpha, _totalAlpha;"
            },
            {
              "name": "_totalAlpha",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 339,
                  "character": 0
                },
                "end": {
                  "line": 339,
                  "character": 68
                }
              },
              "preview": "float _alpha, _mixTime, _mixDuration, _interruptAlpha, _totalAlpha;"
            },
            {
              "name": "_mixBlend",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 340,
                  "character": 0
                },
                "end": {
                  "line": 340,
                  "character": 20
                }
              },
              "preview": "MixBlend _mixBlend;"
            },
            {
              "name": "_timelineMode",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 341,
                  "character": 0
                },
                "end": {
                  "line": 341,
                  "character": 27
                }
              },
              "preview": "Vector<int> _timelineMode;"
            },
            {
              "name": "_timelineHoldMix",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 342,
                  "character": 0
                },
                "end": {
                  "line": 342,
                  "character": 39
                }
              },
              "preview": "Vector<TrackEntry *> _timelineHoldMix;"
            },
            {
              "name": "_timelinesRotation",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 343,
                  "character": 0
                },
                "end": {
                  "line": 343,
                  "character": 34
                }
              },
              "preview": "Vector<float> _timelinesRotation;"
            },
            {
              "name": "_listener",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 344,
                  "character": 0
                },
                "end": {
                  "line": 344,
                  "character": 34
                }
              },
              "preview": "AnimationStateListener _listener;"
            },
            {
              "name": "_listenerObject",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 345,
                  "character": 0
                },
                "end": {
                  "line": 345,
                  "character": 47
                }
              },
              "preview": "AnimationStateListenerObject *_listenerObject;"
            },
            {
              "name": "reset",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 347,
                  "character": 0
                },
                "end": {
                  "line": 347,
                  "character": 14
                }
              },
              "preview": "void reset();"
            }
          ]
        },
        {
          "name": "EventQueueEntry",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
          "range": {
            "start": {
              "line": 350,
              "character": 0
            },
            "end": {
              "line": 359,
              "character": 2
            }
          },
          "preview": "class SP_API EventQueueEntry : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "_type",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 354,
                  "character": 0
                },
                "end": {
                  "line": 354,
                  "character": 17
                }
              },
              "preview": "EventType _type;"
            },
            {
              "name": "_entry",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 355,
                  "character": 0
                },
                "end": {
                  "line": 355,
                  "character": 20
                }
              },
              "preview": "TrackEntry *_entry;"
            },
            {
              "name": "_event",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 356,
                  "character": 0
                },
                "end": {
                  "line": 356,
                  "character": 15
                }
              },
              "preview": "Event *_event;"
            },
            {
              "name": "EventQueueEntry",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 358,
                  "character": 0
                },
                "end": {
                  "line": 358,
                  "character": 83
                }
              },
              "preview": "EventQueueEntry(EventType eventType, TrackEntry *trackEntry, Event *event = NULL);"
            }
          ]
        },
        {
          "name": "EventQueue",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
          "range": {
            "start": {
              "line": 361,
              "character": 0
            },
            "end": {
              "line": 391,
              "character": 2
            }
          },
          "preview": "class SP_API EventQueue : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "_eventQueueEntries",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 365,
                  "character": 0
                },
                "end": {
                  "line": 365,
                  "character": 44
                }
              },
              "preview": "Vector<EventQueueEntry> _eventQueueEntries;"
            },
            {
              "name": "_state",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 366,
                  "character": 0
                },
                "end": {
                  "line": 366,
                  "character": 24
                }
              },
              "preview": "AnimationState &_state;"
            },
            {
              "name": "_drainDisabled",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 367,
                  "character": 0
                },
                "end": {
                  "line": 367,
                  "character": 21
                }
              },
              "preview": "bool _drainDisabled;"
            },
            {
              "name": "newEventQueue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 369,
                  "character": 0
                },
                "end": {
                  "line": 369,
                  "character": 57
                }
              },
              "preview": "static EventQueue *newEventQueue(AnimationState &state);"
            },
            {
              "name": "newEventQueueEntry",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 371,
                  "character": 0
                },
                "end": {
                  "line": 371,
                  "character": 104
                }
              },
              "preview": "static EventQueueEntry newEventQueueEntry(EventType eventType, TrackEntry *entry, Event *event = NULL);"
            },
            {
              "name": "EventQueue",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 373,
                  "character": 0
                },
                "end": {
                  "line": 373,
                  "character": 35
                }
              },
              "preview": "EventQueue(AnimationState &state);"
            },
            {
              "name": "~EventQueue",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 375,
                  "character": 0
                },
                "end": {
                  "line": 375,
                  "character": 15
                }
              },
              "preview": "~EventQueue();"
            },
            {
              "name": "start",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 377,
                  "character": 0
                },
                "end": {
                  "line": 377,
                  "character": 31
                }
              },
              "preview": "void start(TrackEntry *entry);"
            },
            {
              "name": "interrupt",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 379,
                  "character": 0
                },
                "end": {
                  "line": 379,
                  "character": 35
                }
              },
              "preview": "void interrupt(TrackEntry *entry);"
            },
            {
              "name": "end",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 381,
                  "character": 0
                },
                "end": {
                  "line": 381,
                  "character": 29
                }
              },
              "preview": "void end(TrackEntry *entry);"
            },
            {
              "name": "dispose",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 383,
                  "character": 0
                },
                "end": {
                  "line": 383,
                  "character": 33
                }
              },
              "preview": "void dispose(TrackEntry *entry);"
            },
            {
              "name": "complete",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 385,
                  "character": 0
                },
                "end": {
                  "line": 385,
                  "character": 34
                }
              },
              "preview": "void complete(TrackEntry *entry);"
            },
            {
              "name": "event",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 387,
                  "character": 0
                },
                "end": {
                  "line": 387,
                  "character": 45
                }
              },
              "preview": "void event(TrackEntry *entry, Event *event);"
            },
            {
              "name": "drain",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 390,
                  "character": 0
                },
                "end": {
                  "line": 390,
                  "character": 14
                }
              },
              "preview": "void drain();",
              "documentation": "Raises all events in the queue and drains the queue."
            }
          ]
        },
        {
          "name": "AnimationState",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
          "range": {
            "start": {
              "line": 393,
              "character": 0
            },
            "end": {
              "line": 552,
              "character": 2
            }
          },
          "preview": "class SP_API AnimationState : public SpineObject, public HasRendererObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "AnimationState",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 399,
                  "character": 0
                },
                "end": {
                  "line": 399,
                  "character": 51
                }
              },
              "preview": "explicit AnimationState(AnimationStateData *data);"
            },
            {
              "name": "~AnimationState",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 401,
                  "character": 0
                },
                "end": {
                  "line": 401,
                  "character": 19
                }
              },
              "preview": "~AnimationState();"
            },
            {
              "name": "update",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 405,
                  "character": 0
                },
                "end": {
                  "line": 405,
                  "character": 26
                }
              },
              "preview": "void update(float delta);",
              "documentation": "Increments the track entry times, setting queued animations as current if needed\n@param delta delta time"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 409,
                  "character": 0
                },
                "end": {
                  "line": 409,
                  "character": 32
                }
              },
              "preview": "bool apply(Skeleton &skeleton);",
              "documentation": "Poses the skeleton using the track entry animations. There are no side effects other than invoking listeners, so the\nanimation state can be applied to multiple skeletons to pose them identically."
            },
            {
              "name": "clearTracks",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 414,
                  "character": 0
                },
                "end": {
                  "line": 414,
                  "character": 20
                }
              },
              "preview": "void clearTracks();",
              "documentation": "Removes all animations from all tracks, leaving skeletons in their previous pose.\nIt may be desired to use AnimationState.setEmptyAnimations(float) to mix the skeletons back to the setup pose,\nrather than leaving them in their previous pose."
            },
            {
              "name": "clearTrack",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 419,
                  "character": 0
                },
                "end": {
                  "line": 419,
                  "character": 36
                }
              },
              "preview": "void clearTrack(size_t trackIndex);",
              "documentation": "Removes all animations from the tracks, leaving skeletons in their previous pose.\nIt may be desired to use AnimationState.setEmptyAnimations(float) to mix the skeletons back to the setup pose,\nrather than leaving them in their previous pose."
            },
            {
              "name": "setAnimation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 422,
                  "character": 0
                },
                "end": {
                  "line": 422,
                  "character": 85
                }
              },
              "preview": "TrackEntry *setAnimation(size_t trackIndex, const String &animationName, bool loop);",
              "documentation": "Sets an animation by name. setAnimation(int, Animation, bool)"
            },
            {
              "name": "setAnimation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 431,
                  "character": 0
                },
                "end": {
                  "line": 431,
                  "character": 78
                }
              },
              "preview": "TrackEntry *setAnimation(size_t trackIndex, Animation *animation, bool loop);",
              "documentation": "Sets the current animation for a track, discarding any queued animations.\n@param loop If true, the animation will repeat.\nIf false, it will not, instead its last frame is applied if played beyond its duration.\nIn either case TrackEntry.TrackEnd determines when the track is cleared.\n@return\nA track entry to allow further customization of animation playback. References to the track entry must not be kept\nafter AnimationState.Dispose."
            },
            {
              "name": "addAnimation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 435,
                  "character": 0
                },
                "end": {
                  "line": 435,
                  "character": 98
                }
              },
              "preview": "TrackEntry *addAnimation(size_t trackIndex, const String &animationName, bool loop, float delay);",
              "documentation": "Queues an animation by name.\naddAnimation(int, Animation, bool, float)"
            },
            {
              "name": "addAnimation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 445,
                  "character": 0
                },
                "end": {
                  "line": 445,
                  "character": 91
                }
              },
              "preview": "TrackEntry *addAnimation(size_t trackIndex, Animation *animation, bool loop, float delay);",
              "documentation": "Adds an animation to be played delay seconds after the current or last queued animation\nfor a track. If the track is empty, it is equivalent to calling setAnimation.\n@param delay\nSeconds to begin this animation after the start of the previous animation. May be &lt;= 0 to use the animation\nduration of the previous track minus any mix duration plus the negative delay.\n@return A track entry to allow further customization of animation playback. References to the track entry must not be kept\nafter AnimationState.Dispose"
            },
            {
              "name": "setEmptyAnimation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 448,
                  "character": 0
                },
                "end": {
                  "line": 448,
                  "character": 69
                }
              },
              "preview": "TrackEntry *setEmptyAnimation(size_t trackIndex, float mixDuration);",
              "documentation": "Sets an empty animation for a track, discarding any queued animations, and mixes to it over the specified mix duration."
            },
            {
              "name": "addEmptyAnimation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 459,
                  "character": 0
                },
                "end": {
                  "line": 459,
                  "character": 82
                }
              },
              "preview": "TrackEntry *addEmptyAnimation(size_t trackIndex, float mixDuration, float delay);",
              "documentation": "Adds an empty animation to be played after the current or last queued animation for a track, and mixes to it over the\nspecified mix duration.\n@return\nA track entry to allow further customization of animation playback. References to the track entry must not be kept after AnimationState.Dispose.\n@param trackIndex Track number.\n@param mixDuration Mix duration.\n@param delay Seconds to begin this animation after the start of the previous animation. May be &lt;= 0 to use the animation\nduration of the previous track minus any mix duration plus the negative delay."
            },
            {
              "name": "setEmptyAnimations",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 462,
                  "character": 0
                },
                "end": {
                  "line": 462,
                  "character": 44
                }
              },
              "preview": "void setEmptyAnimations(float mixDuration);",
              "documentation": "Sets an empty animation for every track, discarding any queued animations, and mixes to it over the specified mix duration."
            },
            {
              "name": "getCurrent",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 465,
                  "character": 0
                },
                "end": {
                  "line": 465,
                  "character": 43
                }
              },
              "preview": "TrackEntry *getCurrent(size_t trackIndex);",
              "documentation": "@return The track entry for the animation currently playing on the track, or NULL if no animation is currently playing."
            },
            {
              "name": "getData",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 467,
                  "character": 0
                },
                "end": {
                  "line": 467,
                  "character": 31
                }
              },
              "preview": "AnimationStateData *getData();"
            },
            {
              "name": "getTracks",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 470,
                  "character": 0
                },
                "end": {
                  "line": 470,
                  "character": 35
                }
              },
              "preview": "Vector<TrackEntry *> &getTracks();",
              "documentation": "A list of tracks that have animations, which may contain NULLs."
            },
            {
              "name": "getTimeScale",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 472,
                  "character": 0
                },
                "end": {
                  "line": 472,
                  "character": 22
                }
              },
              "preview": "float getTimeScale();"
            },
            {
              "name": "setTimeScale",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 474,
                  "character": 0
                },
                "end": {
                  "line": 474,
                  "character": 34
                }
              },
              "preview": "void setTimeScale(float inValue);"
            },
            {
              "name": "setListener",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 476,
                  "character": 0
                },
                "end": {
                  "line": 476,
                  "character": 51
                }
              },
              "preview": "void setListener(AnimationStateListener listener);"
            },
            {
              "name": "setListener",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 478,
                  "character": 0
                },
                "end": {
                  "line": 478,
                  "character": 58
                }
              },
              "preview": "void setListener(AnimationStateListenerObject *listener);"
            },
            {
              "name": "disableQueue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 480,
                  "character": 0
                },
                "end": {
                  "line": 480,
                  "character": 21
                }
              },
              "preview": "void disableQueue();"
            },
            {
              "name": "enableQueue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 482,
                  "character": 0
                },
                "end": {
                  "line": 482,
                  "character": 20
                }
              },
              "preview": "void enableQueue();"
            },
            {
              "name": "setManualTrackEntryDisposal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 484,
                  "character": 0
                },
                "end": {
                  "line": 484,
                  "character": 48
                }
              },
              "preview": "void setManualTrackEntryDisposal(bool inValue);"
            },
            {
              "name": "getManualTrackEntryDisposal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 486,
                  "character": 0
                },
                "end": {
                  "line": 486,
                  "character": 42
                }
              },
              "preview": "bool getManualTrackEntryDisposal();"
            },
            {
              "name": "disposeTrackEntry",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 488,
                  "character": 0
                },
                "end": {
                  "line": 488,
                  "character": 43
                }
              },
              "preview": "void disposeTrackEntry(TrackEntry *entry);"
            },
            {
              "name": "Subsequent",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 491,
                  "character": 0
                },
                "end": {
                  "line": 491,
                  "character": 33
                }
              },
              "preview": "static const int Subsequent = 0;"
            },
            {
              "name": "First",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 492,
                  "character": 0
                },
                "end": {
                  "line": 492,
                  "character": 28
                }
              },
              "preview": "static const int First = 1;"
            },
            {
              "name": "HoldSubsequent",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 493,
                  "character": 0
                },
                "end": {
                  "line": 493,
                  "character": 37
                }
              },
              "preview": "static const int HoldSubsequent = 2;"
            },
            {
              "name": "HoldFirst",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 494,
                  "character": 0
                },
                "end": {
                  "line": 494,
                  "character": 32
                }
              },
              "preview": "static const int HoldFirst = 3;"
            },
            {
              "name": "HoldMix",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 495,
                  "character": 0
                },
                "end": {
                  "line": 495,
                  "character": 30
                }
              },
              "preview": "static const int HoldMix = 4;"
            },
            {
              "name": "Setup",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 497,
                  "character": 0
                },
                "end": {
                  "line": 497,
                  "character": 28
                }
              },
              "preview": "static const int Setup = 1;"
            },
            {
              "name": "Current",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 498,
                  "character": 0
                },
                "end": {
                  "line": 498,
                  "character": 30
                }
              },
              "preview": "static const int Current = 2;"
            },
            {
              "name": "_data",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 500,
                  "character": 0
                },
                "end": {
                  "line": 500,
                  "character": 27
                }
              },
              "preview": "AnimationStateData *_data;"
            },
            {
              "name": "_trackEntryPool",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 502,
                  "character": 0
                },
                "end": {
                  "line": 502,
                  "character": 34
                }
              },
              "preview": "Pool<TrackEntry> _trackEntryPool;"
            },
            {
              "name": "_tracks",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 503,
                  "character": 0
                },
                "end": {
                  "line": 503,
                  "character": 30
                }
              },
              "preview": "Vector<TrackEntry *> _tracks;"
            },
            {
              "name": "_events",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 504,
                  "character": 0
                },
                "end": {
                  "line": 504,
                  "character": 25
                }
              },
              "preview": "Vector<Event *> _events;"
            },
            {
              "name": "_queue",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 505,
                  "character": 0
                },
                "end": {
                  "line": 505,
                  "character": 20
                }
              },
              "preview": "EventQueue *_queue;"
            },
            {
              "name": "_propertyIDs",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 507,
                  "character": 0
                },
                "end": {
                  "line": 507,
                  "character": 40
                }
              },
              "preview": "HashMap<PropertyId, bool> _propertyIDs;"
            },
            {
              "name": "_animationsChanged",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 508,
                  "character": 0
                },
                "end": {
                  "line": 508,
                  "character": 25
                }
              },
              "preview": "bool _animationsChanged;"
            },
            {
              "name": "_listener",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 510,
                  "character": 0
                },
                "end": {
                  "line": 510,
                  "character": 34
                }
              },
              "preview": "AnimationStateListener _listener;"
            },
            {
              "name": "_listenerObject",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 511,
                  "character": 0
                },
                "end": {
                  "line": 511,
                  "character": 47
                }
              },
              "preview": "AnimationStateListenerObject *_listenerObject;"
            },
            {
              "name": "_unkeyedState",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 513,
                  "character": 0
                },
                "end": {
                  "line": 513,
                  "character": 19
                }
              },
              "preview": "int _unkeyedState;"
            },
            {
              "name": "_timeScale",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 515,
                  "character": 0
                },
                "end": {
                  "line": 515,
                  "character": 18
                }
              },
              "preview": "float _timeScale;"
            },
            {
              "name": "_manualTrackEntryDisposal",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 517,
                  "character": 0
                },
                "end": {
                  "line": 517,
                  "character": 32
                }
              },
              "preview": "bool _manualTrackEntryDisposal;"
            },
            {
              "name": "getEmptyAnimation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 519,
                  "character": 0
                },
                "end": {
                  "line": 519,
                  "character": 39
                }
              },
              "preview": "static Animation *getEmptyAnimation();"
            },
            {
              "name": "applyRotateTimeline",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 522,
                  "character": 0
                },
                "end": {
                  "line": 523,
                  "character": 67
                }
              },
              "preview": "applyRotateTimeline(RotateTimeline *rotateTimeline, Skeleton &skeleton, float time, float alpha, MixBlend pose,"
            },
            {
              "name": "applyAttachmentTimeline",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 525,
                  "character": 0
                },
                "end": {
                  "line": 526,
                  "character": 41
                }
              },
              "preview": "void applyAttachmentTimeline(AttachmentTimeline *attachmentTimeline, Skeleton &skeleton, float animationTime,"
            },
            {
              "name": "updateMixingFrom",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 529,
                  "character": 0
                },
                "end": {
                  "line": 529,
                  "character": 52
                }
              },
              "preview": "bool updateMixingFrom(TrackEntry *to, float delta);",
              "documentation": "Returns true when all mixing from entries are complete."
            },
            {
              "name": "applyMixingFrom",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 531,
                  "character": 0
                },
                "end": {
                  "line": 531,
                  "character": 81
                }
              },
              "preview": "float applyMixingFrom(TrackEntry *to, Skeleton &skeleton, MixBlend currentPose);"
            },
            {
              "name": "queueEvents",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 533,
                  "character": 0
                },
                "end": {
                  "line": 533,
                  "character": 58
                }
              },
              "preview": "void queueEvents(TrackEntry *entry, float animationTime);"
            },
            {
              "name": "setCurrent",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 536,
                  "character": 0
                },
                "end": {
                  "line": 536,
                  "character": 68
                }
              },
              "preview": "void setCurrent(size_t index, TrackEntry *current, bool interrupt);",
              "documentation": "Sets the active TrackEntry for a given track number."
            },
            {
              "name": "clearNext",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 539,
                  "character": 0
                },
                "end": {
                  "line": 539,
                  "character": 35
                }
              },
              "preview": "void clearNext(TrackEntry *entry);",
              "documentation": "Removes the next entry and all entries after it for the specified entry. */"
            },
            {
              "name": "expandToIndex",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 541,
                  "character": 0
                },
                "end": {
                  "line": 541,
                  "character": 41
                }
              },
              "preview": "TrackEntry *expandToIndex(size_t index);"
            },
            {
              "name": "newTrackEntry",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 545,
                  "character": 0
                },
                "end": {
                  "line": 545,
                  "character": 97
                }
              },
              "preview": "TrackEntry *newTrackEntry(size_t trackIndex, Animation *animation, bool loop, TrackEntry *last);",
              "documentation": "Object-pooling version of new TrackEntry. Obtain an unused TrackEntry from the pool and clear/initialize its values.\n@param last May be NULL."
            },
            {
              "name": "animationsChanged",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 547,
                  "character": 0
                },
                "end": {
                  "line": 547,
                  "character": 26
                }
              },
              "preview": "void animationsChanged();"
            },
            {
              "name": "computeHold",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 549,
                  "character": 0
                },
                "end": {
                  "line": 549,
                  "character": 37
                }
              },
              "preview": "void computeHold(TrackEntry *entry);"
            },
            {
              "name": "setAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationState.h",
              "range": {
                "start": {
                  "line": 551,
                  "character": 0
                },
                "end": {
                  "line": 551,
                  "character": 107
                }
              },
              "preview": "void setAttachment(Skeleton &skeleton, spine::Slot &slot, const String &attachmentName, bool attachments);"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 87,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "SkeletonData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 19
            }
          },
          "preview": "class SkeletonData;"
        },
        {
          "name": "Animation",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 16
            }
          },
          "preview": "class Animation;"
        },
        {
          "name": "AnimationStateData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 86,
              "character": 2
            }
          },
          "preview": "class SP_API AnimationStateData : public SpineObject {",
          "documentation": "Stores mix (crossfade) durations to be applied when AnimationState animations are changed.",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "AnimationStateData",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 57
                }
              },
              "preview": "explicit AnimationStateData(SkeletonData *skeletonData);"
            },
            {
              "name": "getSkeletonData",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 33
                }
              },
              "preview": "SkeletonData *getSkeletonData();",
              "documentation": "The SkeletonData to look up animations when they are specified by name."
            },
            {
              "name": "getDefaultMix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 23
                }
              },
              "preview": "float getDefaultMix();",
              "documentation": "The mix duration to use when no mix duration has been specifically defined between two animations."
            },
            {
              "name": "setDefaultMix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 35
                }
              },
              "preview": "void setDefaultMix(float inValue);"
            },
            {
              "name": "setMix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 75
                }
              },
              "preview": "void setMix(const String &fromName, const String &toName, float duration);",
              "documentation": "Sets a mix duration by animation names."
            },
            {
              "name": "setMix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 61
                }
              },
              "preview": "void setMix(Animation *from, Animation *to, float duration);",
              "documentation": "Sets a mix duration when changing from the specified animation to the other.\nSee TrackEntry.MixDuration."
            },
            {
              "name": "getMix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
              "range": {
                "start": {
                  "line": 67,
                  "character": 0
                },
                "end": {
                  "line": 67,
                  "character": 46
                }
              },
              "preview": "float getMix(Animation *from, Animation *to);",
              "documentation": "The mix duration to use when changing from the specified animation to the other,\nor the DefaultMix if no mix duration has been set."
            },
            {
              "name": "clear",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 14
                }
              },
              "preview": "void clear();",
              "documentation": "Removes all mixes and sets the default mix to 0."
            },
            {
              "name": "AnimationPair",
              "kind": "class",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 3
                }
              },
              "preview": "class AnimationPair : public SpineObject {",
              "supertypes": [
                "SpineObject"
              ],
              "children": [
                {
                  "name": "_a1",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
                  "range": {
                    "start": {
                      "line": 75,
                      "character": 0
                    },
                    "end": {
                      "line": 75,
                      "character": 17
                    }
                  },
                  "preview": "Animation *_a1;"
                },
                {
                  "name": "_a2",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
                  "range": {
                    "start": {
                      "line": 76,
                      "character": 0
                    },
                    "end": {
                      "line": 76,
                      "character": 17
                    }
                  },
                  "preview": "Animation *_a2;"
                },
                {
                  "name": "AnimationPair",
                  "kind": "constructor",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
                  "range": {
                    "start": {
                      "line": 78,
                      "character": 0
                    },
                    "end": {
                      "line": 78,
                      "character": 69
                    }
                  },
                  "preview": "explicit AnimationPair(Animation *a1 = NULL, Animation *a2 = NULL);"
                },
                {
                  "name": "operator==",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
                  "range": {
                    "start": {
                      "line": 80,
                      "character": 0
                    },
                    "end": {
                      "line": 80,
                      "character": 52
                    }
                  },
                  "preview": "bool operator==(const AnimationPair &other) const;"
                }
              ]
            },
            {
              "name": "_skeletonData",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 29
                }
              },
              "preview": "SkeletonData *_skeletonData;"
            },
            {
              "name": "_defaultMix",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 19
                }
              },
              "preview": "float _defaultMix;"
            },
            {
              "name": "_animationToMixTime",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AnimationStateData.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 51
                }
              },
              "preview": "HashMap<AnimationPair, float> _animationToMixTime;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 136,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Format",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 48,
              "character": 2
            }
          },
          "preview": "enum Format {",
          "children": [
            {
              "name": "Format_Alpha",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 14
                }
              },
              "preview": "Format_Alpha,"
            },
            {
              "name": "Format_Intensity",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 18
                }
              },
              "preview": "Format_Intensity,"
            },
            {
              "name": "Format_LuminanceAlpha",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 43,
                  "character": 0
                },
                "end": {
                  "line": 43,
                  "character": 23
                }
              },
              "preview": "Format_LuminanceAlpha,"
            },
            {
              "name": "Format_RGB565",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 15
                }
              },
              "preview": "Format_RGB565,"
            },
            {
              "name": "Format_RGBA4444",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 17
                }
              },
              "preview": "Format_RGBA4444,"
            },
            {
              "name": "Format_RGB888",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 15
                }
              },
              "preview": "Format_RGB888,"
            },
            {
              "name": "Format_RGBA8888",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 17
                }
              },
              "preview": "Format_RGBA8888"
            }
          ]
        },
        {
          "name": "TEXTURE_FILTER_ENUM",
          "kind": "unknown",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
          "range": {
            "start": {
              "line": 58,
              "character": 0
            },
            "end": {
              "line": 67,
              "character": 2
            }
          },
          "preview": "enum TEXTURE_FILTER_ENUM {",
          "children": [
            {
              "name": "TextureFilter",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 67,
                  "character": 2
                }
              },
              "preview": "enum TEXTURE_FILTER_ENUM {",
              "children": [
                {
                  "name": "TextureFilter_Unknown",
                  "kind": "enum",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
                  "range": {
                    "start": {
                      "line": 59,
                      "character": 0
                    },
                    "end": {
                      "line": 59,
                      "character": 23
                    }
                  },
                  "preview": "TextureFilter_Unknown,"
                },
                {
                  "name": "TextureFilter_Nearest",
                  "kind": "enum",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
                  "range": {
                    "start": {
                      "line": 60,
                      "character": 0
                    },
                    "end": {
                      "line": 60,
                      "character": 23
                    }
                  },
                  "preview": "TextureFilter_Nearest,"
                },
                {
                  "name": "TextureFilter_Linear",
                  "kind": "enum",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
                  "range": {
                    "start": {
                      "line": 61,
                      "character": 0
                    },
                    "end": {
                      "line": 61,
                      "character": 22
                    }
                  },
                  "preview": "TextureFilter_Linear,"
                },
                {
                  "name": "TextureFilter_MipMap",
                  "kind": "enum",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
                  "range": {
                    "start": {
                      "line": 62,
                      "character": 0
                    },
                    "end": {
                      "line": 62,
                      "character": 22
                    }
                  },
                  "preview": "TextureFilter_MipMap,"
                },
                {
                  "name": "TextureFilter_MipMapNearestNearest",
                  "kind": "enum",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
                  "range": {
                    "start": {
                      "line": 63,
                      "character": 0
                    },
                    "end": {
                      "line": 63,
                      "character": 36
                    }
                  },
                  "preview": "TextureFilter_MipMapNearestNearest,"
                },
                {
                  "name": "TextureFilter_MipMapLinearNearest",
                  "kind": "enum",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
                  "range": {
                    "start": {
                      "line": 64,
                      "character": 0
                    },
                    "end": {
                      "line": 64,
                      "character": 35
                    }
                  },
                  "preview": "TextureFilter_MipMapLinearNearest,"
                },
                {
                  "name": "TextureFilter_MipMapNearestLinear",
                  "kind": "enum",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
                  "range": {
                    "start": {
                      "line": 65,
                      "character": 0
                    },
                    "end": {
                      "line": 65,
                      "character": 35
                    }
                  },
                  "preview": "TextureFilter_MipMapNearestLinear,"
                },
                {
                  "name": "TextureFilter_MipMapLinearLinear",
                  "kind": "enum",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
                  "range": {
                    "start": {
                      "line": 66,
                      "character": 0
                    },
                    "end": {
                      "line": 66,
                      "character": 34
                    }
                  },
                  "preview": "TextureFilter_MipMapLinearLinear"
                }
              ]
            }
          ]
        },
        {
          "name": "TextureWrap",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
          "range": {
            "start": {
              "line": 69,
              "character": 0
            },
            "end": {
              "line": 73,
              "character": 2
            }
          },
          "preview": "enum TextureWrap {",
          "children": [
            {
              "name": "TextureWrap_MirroredRepeat",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 28
                }
              },
              "preview": "TextureWrap_MirroredRepeat,"
            },
            {
              "name": "TextureWrap_ClampToEdge",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 25
                }
              },
              "preview": "TextureWrap_ClampToEdge,"
            },
            {
              "name": "TextureWrap_Repeat",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 20
                }
              },
              "preview": "TextureWrap_Repeat"
            }
          ]
        },
        {
          "name": "AtlasPage",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
          "range": {
            "start": {
              "line": 75,
              "character": 0
            },
            "end": {
              "line": 94,
              "character": 2
            }
          },
          "preview": "class SP_API AtlasPage : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "name",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 13
                }
              },
              "preview": "String name;"
            },
            {
              "name": "texturePath",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 78,
                  "character": 0
                },
                "end": {
                  "line": 78,
                  "character": 20
                }
              },
              "preview": "String texturePath;"
            },
            {
              "name": "format",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 79,
                  "character": 15
                }
              },
              "preview": "Format format;"
            },
            {
              "name": "minFilter",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 31
                }
              },
              "preview": "TEXTURE_FILTER_ENUM minFilter;"
            },
            {
              "name": "magFilter",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 31
                }
              },
              "preview": "TEXTURE_FILTER_ENUM magFilter;"
            },
            {
              "name": "uWrap",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 82,
                  "character": 0
                },
                "end": {
                  "line": 82,
                  "character": 19
                }
              },
              "preview": "TextureWrap uWrap;"
            },
            {
              "name": "vWrap",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 19
                }
              },
              "preview": "TextureWrap vWrap;"
            },
            {
              "name": "width",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 11
                }
              },
              "preview": "int width, height;"
            },
            {
              "name": "height",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 19
                }
              },
              "preview": "int width, height;"
            },
            {
              "name": "pma",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 10
                }
              },
              "preview": "bool pma;"
            },
            {
              "name": "index",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 86,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 17
                }
              },
              "preview": "int index;"
            },
            {
              "name": "texture",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 21
                }
              },
              "preview": "void *texture;"
            },
            {
              "name": "AtlasPage",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 89,
                  "character": 0
                },
                "end": {
                  "line": 93,
                  "character": 3
                }
              },
              "preview": "explicit AtlasPage(const String &inName) : name(inName), format(Format_RGBA8888),"
            }
          ]
        },
        {
          "name": "AtlasRegion",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
          "range": {
            "start": {
              "line": 96,
              "character": 0
            },
            "end": {
              "line": 106,
              "character": 2
            }
          },
          "preview": "class SP_API AtlasRegion : public TextureRegion {",
          "supertypes": [
            "TextureRegion"
          ],
          "children": [
            {
              "name": "page",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 98,
                  "character": 0
                },
                "end": {
                  "line": 98,
                  "character": 17
                }
              },
              "preview": "AtlasPage *page;"
            },
            {
              "name": "name",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 99,
                  "character": 0
                },
                "end": {
                  "line": 99,
                  "character": 13
                }
              },
              "preview": "String name;"
            },
            {
              "name": "index",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 100,
                  "character": 0
                },
                "end": {
                  "line": 100,
                  "character": 11
                }
              },
              "preview": "int index;"
            },
            {
              "name": "x",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 101,
                  "character": 0
                },
                "end": {
                  "line": 101,
                  "character": 7
                }
              },
              "preview": "int x, y;"
            },
            {
              "name": "y",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 101,
                  "character": 0
                },
                "end": {
                  "line": 101,
                  "character": 10
                }
              },
              "preview": "int x, y;"
            },
            {
              "name": "splits",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 102,
                  "character": 0
                },
                "end": {
                  "line": 102,
                  "character": 20
                }
              },
              "preview": "Vector<int> splits;"
            },
            {
              "name": "pads",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 18
                }
              },
              "preview": "Vector<int> pads;"
            },
            {
              "name": "names",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 23
                }
              },
              "preview": "Vector <String> names;"
            },
            {
              "name": "values",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 105,
                  "character": 0
                },
                "end": {
                  "line": 105,
                  "character": 22
                }
              },
              "preview": "Vector<float> values;"
            }
          ]
        },
        {
          "name": "TextureLoader",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
          "range": {
            "start": {
              "line": 108,
              "character": 0
            },
            "end": {
              "line": 108,
              "character": 20
            }
          },
          "preview": "class TextureLoader;"
        },
        {
          "name": "Atlas",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
          "range": {
            "start": {
              "line": 110,
              "character": 0
            },
            "end": {
              "line": 135,
              "character": 2
            }
          },
          "preview": "class SP_API Atlas : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "Atlas",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 112,
                  "character": 0
                },
                "end": {
                  "line": 112,
                  "character": 84
                }
              },
              "preview": "Atlas(const String &path, TextureLoader *textureLoader, bool createTexture = true);"
            },
            {
              "name": "Atlas",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 114,
                  "character": 0
                },
                "end": {
                  "line": 114,
                  "character": 111
                }
              },
              "preview": "Atlas(const char *data, int length, const char *dir, TextureLoader *textureLoader, bool createTexture = true);"
            },
            {
              "name": "~Atlas",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 116,
                  "character": 0
                },
                "end": {
                  "line": 116,
                  "character": 10
                }
              },
              "preview": "~Atlas();"
            },
            {
              "name": "flipV",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 118,
                  "character": 0
                },
                "end": {
                  "line": 118,
                  "character": 14
                }
              },
              "preview": "void flipV();"
            },
            {
              "name": "findRegion",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 123,
                  "character": 0
                },
                "end": {
                  "line": 123,
                  "character": 45
                }
              },
              "preview": "AtlasRegion *findRegion(const String &name);",
              "documentation": "Returns the first region found with the specified name. This method uses String comparison to find the region, so the result\nshould be cached rather than calling this method multiple times.\n@return The region, or NULL."
            },
            {
              "name": "getPages",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 125,
                  "character": 0
                },
                "end": {
                  "line": 125,
                  "character": 33
                }
              },
              "preview": "Vector<AtlasPage *> &getPages();"
            },
            {
              "name": "getRegions",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 127,
                  "character": 0
                },
                "end": {
                  "line": 127,
                  "character": 37
                }
              },
              "preview": "Vector<AtlasRegion *> &getRegions();"
            },
            {
              "name": "_pages",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 130,
                  "character": 28
                }
              },
              "preview": "Vector<AtlasPage *> _pages;"
            },
            {
              "name": "_regions",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 131,
                  "character": 0
                },
                "end": {
                  "line": 131,
                  "character": 32
                }
              },
              "preview": "Vector<AtlasRegion *> _regions;"
            },
            {
              "name": "_textureLoader",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 132,
                  "character": 0
                },
                "end": {
                  "line": 132,
                  "character": 31
                }
              },
              "preview": "TextureLoader *_textureLoader;"
            },
            {
              "name": "load",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Atlas.h",
              "range": {
                "start": {
                  "line": 134,
                  "character": 0
                },
                "end": {
                  "line": 134,
                  "character": 79
                }
              },
              "preview": "void load(const char *begin, int length, const char *dir, bool createTexture);"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AtlasAttachmentLoader.h",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 69,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Atlas",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AtlasAttachmentLoader.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 12
            }
          },
          "preview": "class Atlas;"
        },
        {
          "name": "AtlasRegion",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AtlasAttachmentLoader.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 40,
              "character": 18
            }
          },
          "preview": "class AtlasRegion;"
        },
        {
          "name": "AtlasAttachmentLoader",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AtlasAttachmentLoader.h",
          "range": {
            "start": {
              "line": 46,
              "character": 0
            },
            "end": {
              "line": 68,
              "character": 2
            }
          },
          "preview": "class SP_API AtlasAttachmentLoader : public AttachmentLoader {",
          "documentation": "An AttachmentLoader that configures attachments using texture regions from an Atlas.\nSee https://esotericsoftware.com/spine-loading-skeleton-data#JSON-and-binary-data Loading skeleton data in the\nSpine Runtimes Guide.",
          "supertypes": [
            "AttachmentLoader"
          ],
          "children": [
            {
              "name": "AtlasAttachmentLoader",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AtlasAttachmentLoader.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 46
                }
              },
              "preview": "explicit AtlasAttachmentLoader(Atlas *atlas);"
            },
            {
              "name": "newRegionAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AtlasAttachmentLoader.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 119
                }
              },
              "preview": "virtual RegionAttachment *newRegionAttachment(Skin &skin, const String &name, const String &path, Sequence *sequence);"
            },
            {
              "name": "newMeshAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AtlasAttachmentLoader.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 115
                }
              },
              "preview": "virtual MeshAttachment *newMeshAttachment(Skin &skin, const String &name, const String &path, Sequence *sequence);"
            },
            {
              "name": "newBoundingBoxAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AtlasAttachmentLoader.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 89
                }
              },
              "preview": "virtual BoundingBoxAttachment *newBoundingBoxAttachment(Skin &skin, const String &name);"
            },
            {
              "name": "newPathAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AtlasAttachmentLoader.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 75
                }
              },
              "preview": "virtual PathAttachment *newPathAttachment(Skin &skin, const String &name);"
            },
            {
              "name": "newPointAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AtlasAttachmentLoader.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 77
                }
              },
              "preview": "virtual PointAttachment *newPointAttachment(Skin &skin, const String &name);"
            },
            {
              "name": "newClippingAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AtlasAttachmentLoader.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 83
                }
              },
              "preview": "virtual ClippingAttachment *newClippingAttachment(Skin &skin, const String &name);"
            },
            {
              "name": "configureAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AtlasAttachmentLoader.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 58
                }
              },
              "preview": "virtual void configureAttachment(Attachment *attachment);"
            },
            {
              "name": "findRegion",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AtlasAttachmentLoader.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 45
                }
              },
              "preview": "AtlasRegion *findRegion(const String &name);"
            },
            {
              "name": "_atlas",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AtlasAttachmentLoader.h",
              "range": {
                "start": {
                  "line": 67,
                  "character": 0
                },
                "end": {
                  "line": 67,
                  "character": 15
                }
              },
              "preview": "Atlas *_atlas;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Attachment.h",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 59,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Attachment.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 58,
              "character": 2
            }
          },
          "preview": "class SP_API Attachment : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "RTTI_DECL_NOPARENT",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Attachment.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 19
                }
              },
              "preview": "RTTI_DECL_NOPARENT",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Attachment.h",
                  "range": {
                    "start": {
                      "line": 38,
                      "character": 0
                    },
                    "end": {
                      "line": 38,
                      "character": 19
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Attachment.h",
                  "range": {
                    "start": {
                      "line": 38,
                      "character": 0
                    },
                    "end": {
                      "line": 38,
                      "character": 19
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                }
              ]
            },
            {
              "name": "Attachment",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Attachment.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 41
                }
              },
              "preview": "explicit Attachment(const String &name);"
            },
            {
              "name": "~Attachment",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Attachment.h",
              "range": {
                "start": {
                  "line": 43,
                  "character": 0
                },
                "end": {
                  "line": 43,
                  "character": 23
                }
              },
              "preview": "virtual ~Attachment();"
            },
            {
              "name": "getName",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Attachment.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 31
                }
              },
              "preview": "const String &getName() const;"
            },
            {
              "name": "copy",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Attachment.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 32
                }
              },
              "preview": "virtual Attachment *copy() = 0;"
            },
            {
              "name": "getRefCount",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Attachment.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 19
                }
              },
              "preview": "int getRefCount();"
            },
            {
              "name": "reference",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Attachment.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 18
                }
              },
              "preview": "void reference();"
            },
            {
              "name": "dereference",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Attachment.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 20
                }
              },
              "preview": "void dereference();"
            },
            {
              "name": "_name",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Attachment.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 20
                }
              },
              "preview": "const String _name;"
            },
            {
              "name": "_refCount",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Attachment.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 15
                }
              },
              "preview": "int _refCount;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 79,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Skin",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 11
            }
          },
          "preview": "class Skin;"
        },
        {
          "name": "Attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 17
            }
          },
          "preview": "class Attachment;"
        },
        {
          "name": "RegionAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 23
            }
          },
          "preview": "class RegionAttachment;"
        },
        {
          "name": "MeshAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 21
            }
          },
          "preview": "class MeshAttachment;"
        },
        {
          "name": "BoundingBoxAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
          "range": {
            "start": {
              "line": 45,
              "character": 0
            },
            "end": {
              "line": 45,
              "character": 28
            }
          },
          "preview": "class BoundingBoxAttachment;"
        },
        {
          "name": "PathAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
          "range": {
            "start": {
              "line": 47,
              "character": 0
            },
            "end": {
              "line": 47,
              "character": 21
            }
          },
          "preview": "class PathAttachment;"
        },
        {
          "name": "PointAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
          "range": {
            "start": {
              "line": 49,
              "character": 0
            },
            "end": {
              "line": 49,
              "character": 22
            }
          },
          "preview": "class PointAttachment;"
        },
        {
          "name": "ClippingAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
          "range": {
            "start": {
              "line": 51,
              "character": 0
            },
            "end": {
              "line": 51,
              "character": 25
            }
          },
          "preview": "class ClippingAttachment;"
        },
        {
          "name": "Sequence",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
          "range": {
            "start": {
              "line": 53,
              "character": 0
            },
            "end": {
              "line": 53,
              "character": 15
            }
          },
          "preview": "class Sequence;"
        },
        {
          "name": "AttachmentLoader",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
          "range": {
            "start": {
              "line": 55,
              "character": 0
            },
            "end": {
              "line": 78,
              "character": 2
            }
          },
          "preview": "class SP_API AttachmentLoader : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "AttachmentLoader",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 20
                }
              },
              "preview": "AttachmentLoader();"
            },
            {
              "name": "~AttachmentLoader",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 29
                }
              },
              "preview": "virtual ~AttachmentLoader();"
            },
            {
              "name": "newRegionAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 123
                }
              },
              "preview": "virtual RegionAttachment *newRegionAttachment(Skin &skin, const String &name, const String &path, Sequence *sequence) = 0;",
              "documentation": "@return May be NULL to not load any attachment."
            },
            {
              "name": "newMeshAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 119
                }
              },
              "preview": "virtual MeshAttachment *newMeshAttachment(Skin &skin, const String &name, const String &path, Sequence *sequence) = 0;",
              "documentation": "@return May be NULL to not load any attachment."
            },
            {
              "name": "newBoundingBoxAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 93
                }
              },
              "preview": "virtual BoundingBoxAttachment *newBoundingBoxAttachment(Skin &skin, const String &name) = 0;",
              "documentation": "@return May be NULL to not load any attachment."
            },
            {
              "name": "newPathAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 79
                }
              },
              "preview": "virtual PathAttachment *newPathAttachment(Skin &skin, const String &name) = 0;",
              "documentation": "@return May be NULL to not load any attachment"
            },
            {
              "name": "newPointAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 81
                }
              },
              "preview": "virtual PointAttachment *newPointAttachment(Skin &skin, const String &name) = 0;"
            },
            {
              "name": "newClippingAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 87
                }
              },
              "preview": "virtual ClippingAttachment *newClippingAttachment(Skin &skin, const String &name) = 0;"
            },
            {
              "name": "configureAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentLoader.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 62
                }
              },
              "preview": "virtual void configureAttachment(Attachment *attachment) = 0;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentTimeline.h",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 79,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentTimeline.h",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "Slot",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentTimeline.h",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 44,
              "character": 11
            }
          },
          "preview": "class Slot;"
        },
        {
          "name": "SlotPose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentTimeline.h",
          "range": {
            "start": {
              "line": 46,
              "character": 0
            },
            "end": {
              "line": 46,
              "character": 15
            }
          },
          "preview": "class SlotPose;"
        },
        {
          "name": "Event",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentTimeline.h",
          "range": {
            "start": {
              "line": 48,
              "character": 0
            },
            "end": {
              "line": 48,
              "character": 12
            }
          },
          "preview": "class Event;"
        },
        {
          "name": "AttachmentTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentTimeline.h",
          "range": {
            "start": {
              "line": 50,
              "character": 0
            },
            "end": {
              "line": 78,
              "character": 2
            }
          },
          "preview": "class SP_API AttachmentTimeline : public Timeline, public SlotTimeline {",
          "supertypes": [
            "Timeline",
            "SlotTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentTimeline.h",
              "range": {
                "start": {
                  "line": 55,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentTimeline.h",
                  "range": {
                    "start": {
                      "line": 55,
                      "character": 0
                    },
                    "end": {
                      "line": 55,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentTimeline.h",
                  "range": {
                    "start": {
                      "line": 55,
                      "character": 0
                    },
                    "end": {
                      "line": 55,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "AttachmentTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentTimeline.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 63
                }
              },
              "preview": "explicit AttachmentTimeline(size_t frameCount, int slotIndex);"
            },
            {
              "name": "~AttachmentTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentTimeline.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 31
                }
              },
              "preview": "virtual ~AttachmentTimeline();"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentTimeline.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 55
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            },
            {
              "name": "setFrame",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentTimeline.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 68
                }
              },
              "preview": "void setFrame(int frame, float time, const String &attachmentName);",
              "documentation": "Sets the time and attachment name for the specified frame.\n@param frame Between 0 and frameCount, inclusive.\n@param time The frame time in seconds."
            },
            {
              "name": "getAttachmentNames",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentTimeline.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 38
                }
              },
              "preview": "Vector<String> &getAttachmentNames();",
              "documentation": "The attachment name for each frame. May contain null values to clear the attachment."
            },
            {
              "name": "_attachmentNames",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentTimeline.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 33
                }
              },
              "preview": "Vector<String> _attachmentNames;"
            },
            {
              "name": "setAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentTimeline.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 80
                }
              },
              "preview": "void setAttachment(Skeleton &skeleton, SlotPose &pose, String *attachmentName);"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentType.h",
      "range": {
        "start": {
          "line": 32,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "AttachmentType",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentType.h",
          "range": {
            "start": {
              "line": 33,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 2
            }
          },
          "preview": "enum AttachmentType {",
          "children": [
            {
              "name": "AttachmentType_Region",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentType.h",
              "range": {
                "start": {
                  "line": 34,
                  "character": 0
                },
                "end": {
                  "line": 34,
                  "character": 23
                }
              },
              "preview": "AttachmentType_Region,"
            },
            {
              "name": "AttachmentType_Boundingbox",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentType.h",
              "range": {
                "start": {
                  "line": 35,
                  "character": 0
                },
                "end": {
                  "line": 35,
                  "character": 28
                }
              },
              "preview": "AttachmentType_Boundingbox,"
            },
            {
              "name": "AttachmentType_Mesh",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentType.h",
              "range": {
                "start": {
                  "line": 36,
                  "character": 0
                },
                "end": {
                  "line": 36,
                  "character": 21
                }
              },
              "preview": "AttachmentType_Mesh,"
            },
            {
              "name": "AttachmentType_Linkedmesh",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentType.h",
              "range": {
                "start": {
                  "line": 37,
                  "character": 0
                },
                "end": {
                  "line": 37,
                  "character": 27
                }
              },
              "preview": "AttachmentType_Linkedmesh,"
            },
            {
              "name": "AttachmentType_Path",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentType.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 21
                }
              },
              "preview": "AttachmentType_Path,"
            },
            {
              "name": "AttachmentType_Point",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentType.h",
              "range": {
                "start": {
                  "line": 39,
                  "character": 0
                },
                "end": {
                  "line": 39,
                  "character": 22
                }
              },
              "preview": "AttachmentType_Point,"
            },
            {
              "name": "AttachmentType_Clipping",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/AttachmentType.h",
              "range": {
                "start": {
                  "line": 40,
                  "character": 0
                },
                "end": {
                  "line": 40,
                  "character": 25
                }
              },
              "preview": "AttachmentType_Clipping"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlendMode.h",
      "range": {
        "start": {
          "line": 32,
          "character": 0
        },
        "end": {
          "line": 39,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "BlendMode",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlendMode.h",
          "range": {
            "start": {
              "line": 33,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 2
            }
          },
          "preview": "enum BlendMode {",
          "children": [
            {
              "name": "BlendMode_Normal",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlendMode.h",
              "range": {
                "start": {
                  "line": 34,
                  "character": 0
                },
                "end": {
                  "line": 34,
                  "character": 22
                }
              },
              "preview": "BlendMode_Normal = 0,"
            },
            {
              "name": "BlendMode_Additive",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlendMode.h",
              "range": {
                "start": {
                  "line": 35,
                  "character": 0
                },
                "end": {
                  "line": 35,
                  "character": 20
                }
              },
              "preview": "BlendMode_Additive,"
            },
            {
              "name": "BlendMode_Multiply",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlendMode.h",
              "range": {
                "start": {
                  "line": 36,
                  "character": 0
                },
                "end": {
                  "line": 36,
                  "character": 20
                }
              },
              "preview": "BlendMode_Multiply,"
            },
            {
              "name": "BlendMode_Screen",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlendMode.h",
              "range": {
                "start": {
                  "line": 37,
                  "character": 0
                },
                "end": {
                  "line": 37,
                  "character": 18
                }
              },
              "preview": "BlendMode_Screen"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlockAllocator.h",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 111,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Block",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlockAllocator.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 57,
              "character": 5
            }
          },
          "preview": "struct Block {",
          "children": [
            {
              "name": "size",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlockAllocator.h",
              "range": {
                "start": {
                  "line": 40,
                  "character": 0
                },
                "end": {
                  "line": 40,
                  "character": 16
                }
              },
              "preview": "int size;"
            },
            {
              "name": "allocated",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlockAllocator.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 21
                }
              },
              "preview": "int allocated;"
            },
            {
              "name": "memory",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlockAllocator.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 23
                }
              },
              "preview": "uint8_t *memory;"
            },
            {
              "name": "free",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlockAllocator.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 9
                }
              },
              "preview": "int free() {"
            },
            {
              "name": "canFit",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlockAllocator.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 9
                }
              },
              "preview": "bool canFit(int numBytes) {"
            },
            {
              "name": "allocate",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlockAllocator.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 9
                }
              },
              "preview": "uint8_t *allocate(int numBytes) {"
            }
          ]
        },
        {
          "name": "BlockAllocator",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlockAllocator.h",
          "range": {
            "start": {
              "line": 59,
              "character": 0
            },
            "end": {
              "line": 110,
              "character": 5
            }
          },
          "preview": "class BlockAllocator : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "initialBlockSize",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlockAllocator.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 28
                }
              },
              "preview": "int initialBlockSize;"
            },
            {
              "name": "blocks",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlockAllocator.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 29
                }
              },
              "preview": "Vector <Block> blocks;"
            },
            {
              "name": "BlockAllocator",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlockAllocator.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 9
                }
              },
              "preview": "BlockAllocator(int initialBlockSize) : initialBlockSize(initialBlockSize) {"
            },
            {
              "name": "~BlockAllocator",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlockAllocator.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 9
                }
              },
              "preview": "~BlockAllocator() {"
            },
            {
              "name": "allocate",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlockAllocator.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 9
                }
              },
              "preview": "T *allocate(size_t num) {"
            },
            {
              "name": "compress",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlockAllocator.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 91,
                  "character": 9
                }
              },
              "preview": "void compress() {"
            },
            {
              "name": "_allocate",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlockAllocator.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 9
                }
              },
              "preview": "void *_allocate(int numBytes) {"
            },
            {
              "name": "newBlock",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BlockAllocator.h",
              "range": {
                "start": {
                  "line": 105,
                  "character": 0
                },
                "end": {
                  "line": 109,
                  "character": 9
                }
              },
              "preview": "Block newBlock(int numBytes) {"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Bone.h",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 95,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Bone",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Bone.h",
          "range": {
            "start": {
              "line": 45,
              "character": 0
            },
            "end": {
              "line": 94,
              "character": 2
            }
          },
          "preview": "class SP_API Bone : public PosedGeneric<BoneData, BoneLocal, BonePose>, public PosedActive {",
          "documentation": "The current pose for a bone, before constraints are applied.\nA bone has a local transform which is used to compute its world transform. A bone also has an applied transform, which is a\nlocal transform that can be applied to compute the world transform. The local transform and applied transform may differ if a\nconstraint or application code modifies the world transform after it was computed from the local transform.",
          "supertypes": [
            "PosedActive"
          ],
          "children": [
            {
              "name": "RTTI_DECL_NOPARENT",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Bone.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 20
                }
              },
              "preview": "RTTI_DECL_NOPARENT",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Bone.h",
                  "range": {
                    "start": {
                      "line": 74,
                      "character": 0
                    },
                    "end": {
                      "line": 74,
                      "character": 20
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Bone.h",
                  "range": {
                    "start": {
                      "line": 74,
                      "character": 0
                    },
                    "end": {
                      "line": 74,
                      "character": 20
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                }
              ]
            },
            {
              "name": "Bone",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Bone.h",
              "range": {
                "start": {
                  "line": 78,
                  "character": 0
                },
                "end": {
                  "line": 78,
                  "character": 36
                }
              },
              "preview": "Bone(BoneData& data, Bone* parent);",
              "documentation": "@param parent May be NULL."
            },
            {
              "name": "getParent",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Bone.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 19
                }
              },
              "preview": "Bone* getParent();",
              "documentation": "The parent bone, or null if this is the root bone."
            },
            {
              "name": "getChildren",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Bone.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 30
                }
              },
              "preview": "Vector<Bone*>& getChildren();",
              "documentation": "The immediate children of this bone."
            },
            {
              "name": "isYDown",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Bone.h",
              "range": {
                "start": {
                  "line": 86,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 41
                }
              },
              "preview": "static bool isYDown() { return yDown; }"
            },
            {
              "name": "setYDown",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Bone.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 53
                }
              },
              "preview": "static void setYDown(bool value) { yDown = value; }"
            },
            {
              "name": "yDown",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Bone.h",
              "range": {
                "start": {
                  "line": 90,
                  "character": 0
                },
                "end": {
                  "line": 90,
                  "character": 19
                }
              },
              "preview": "static bool yDown;"
            },
            {
              "name": "_parent",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Bone.h",
              "range": {
                "start": {
                  "line": 91,
                  "character": 0
                },
                "end": {
                  "line": 91,
                  "character": 21
                }
              },
              "preview": "Bone* const _parent;"
            },
            {
              "name": "_children",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Bone.h",
              "range": {
                "start": {
                  "line": 92,
                  "character": 0
                },
                "end": {
                  "line": 92,
                  "character": 25
                }
              },
              "preview": "Vector<Bone*> _children;"
            },
            {
              "name": "_sorted",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Bone.h",
              "range": {
                "start": {
                  "line": 93,
                  "character": 0
                },
                "end": {
                  "line": 93,
                  "character": 14
                }
              },
              "preview": "bool _sorted;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 97,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "BoneData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 96,
              "character": 2
            }
          },
          "preview": "class SP_API BoneData : public PosedDataGeneric<BoneLocal> {",
          "children": [
            {
              "name": "BoneData",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
              "range": {
                "start": {
                  "line": 67,
                  "character": 0
                },
                "end": {
                  "line": 67,
                  "character": 66
                }
              },
              "preview": "BoneData(int index, const String &name, BoneData *parent = NULL);"
            },
            {
              "name": "getIndex",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 16
                }
              },
              "preview": "int getIndex();",
              "documentation": "The index of the bone in Skeleton.Bones"
            },
            {
              "name": "getParent",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 23
                }
              },
              "preview": "BoneData *getParent();",
              "documentation": "May be NULL."
            },
            {
              "name": "getLength",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 19
                }
              },
              "preview": "float getLength();"
            },
            {
              "name": "setLength",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 31
                }
              },
              "preview": "void setLength(float inValue);"
            },
            {
              "name": "getColor",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 79,
                  "character": 19
                }
              },
              "preview": "Color &getColor();"
            },
            {
              "name": "getIcon",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 25
                }
              },
              "preview": "const String &getIcon();"
            },
            {
              "name": "setIcon",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 34
                }
              },
              "preview": "void setIcon(const String &icon);"
            },
            {
              "name": "getVisible",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 19
                }
              },
              "preview": "bool getVisible();"
            },
            {
              "name": "setVisible",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 31
                }
              },
              "preview": "void setVisible(bool inValue);"
            },
            {
              "name": "_index",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
              "range": {
                "start": {
                  "line": 90,
                  "character": 0
                },
                "end": {
                  "line": 90,
                  "character": 18
                }
              },
              "preview": "const int _index;"
            },
            {
              "name": "_parent",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
              "range": {
                "start": {
                  "line": 91,
                  "character": 0
                },
                "end": {
                  "line": 91,
                  "character": 19
                }
              },
              "preview": "BoneData *_parent;"
            },
            {
              "name": "_length",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
              "range": {
                "start": {
                  "line": 92,
                  "character": 0
                },
                "end": {
                  "line": 92,
                  "character": 15
                }
              },
              "preview": "float _length;"
            },
            {
              "name": "_color",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
              "range": {
                "start": {
                  "line": 93,
                  "character": 0
                },
                "end": {
                  "line": 93,
                  "character": 14
                }
              },
              "preview": "Color _color;"
            },
            {
              "name": "_icon",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 94,
                  "character": 14
                }
              },
              "preview": "String _icon;"
            },
            {
              "name": "_visible",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneData.h",
              "range": {
                "start": {
                  "line": 95,
                  "character": 0
                },
                "end": {
                  "line": 95,
                  "character": 15
                }
              },
              "preview": "bool _visible;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 117,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "BoneLocal",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 116,
              "character": 2
            }
          },
          "preview": "class SP_API BoneLocal : public Pose<BoneLocal> {",
          "documentation": "Stores a bone's local pose.",
          "children": [
            {
              "name": "_x",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 10
                }
              },
              "preview": "float _x, _y, _rotation, _scaleX, _scaleY, _shearX, _shearY;"
            },
            {
              "name": "_y",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 14
                }
              },
              "preview": "float _x, _y, _rotation, _scaleX, _scaleY, _shearX, _shearY;"
            },
            {
              "name": "_rotation",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 25
                }
              },
              "preview": "float _x, _y, _rotation, _scaleX, _scaleY, _shearX, _shearY;"
            },
            {
              "name": "_scaleX",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 34
                }
              },
              "preview": "float _x, _y, _rotation, _scaleX, _scaleY, _shearX, _shearY;"
            },
            {
              "name": "_scaleY",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 43
                }
              },
              "preview": "float _x, _y, _rotation, _scaleX, _scaleY, _shearX, _shearY;"
            },
            {
              "name": "_shearX",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 52
                }
              },
              "preview": "float _x, _y, _rotation, _scaleX, _scaleY, _shearX, _shearY;"
            },
            {
              "name": "_shearY",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 61
                }
              },
              "preview": "float _x, _y, _rotation, _scaleX, _scaleY, _shearX, _shearY;"
            },
            {
              "name": "_inherit",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 18
                }
              },
              "preview": "Inherit _inherit;"
            },
            {
              "name": "BoneLocal",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 13
                }
              },
              "preview": "BoneLocal();"
            },
            {
              "name": "~BoneLocal",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 22
                }
              },
              "preview": "virtual ~BoneLocal();"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 78,
                  "character": 0
                },
                "end": {
                  "line": 78,
                  "character": 44
                }
              },
              "preview": "virtual void set(BoneLocal& pose) override;"
            },
            {
              "name": "getX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 14
                }
              },
              "preview": "float getX();",
              "documentation": "The local x translation."
            },
            {
              "name": "setX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 82,
                  "character": 0
                },
                "end": {
                  "line": 82,
                  "character": 20
                }
              },
              "preview": "void setX(float x);"
            },
            {
              "name": "getY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 14
                }
              },
              "preview": "float getY();",
              "documentation": "The local y translation."
            },
            {
              "name": "setY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 86,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 20
                }
              },
              "preview": "void setY(float y);"
            },
            {
              "name": "setPosition",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 88,
                  "character": 36
                }
              },
              "preview": "void setPosition(float x, float y);"
            },
            {
              "name": "getRotation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 91,
                  "character": 0
                },
                "end": {
                  "line": 91,
                  "character": 21
                }
              },
              "preview": "float getRotation();",
              "documentation": "The local rotation in degrees, counter clockwise."
            },
            {
              "name": "setRotation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 92,
                  "character": 0
                },
                "end": {
                  "line": 92,
                  "character": 34
                }
              },
              "preview": "void setRotation(float rotation);"
            },
            {
              "name": "getScaleX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 95,
                  "character": 0
                },
                "end": {
                  "line": 95,
                  "character": 19
                }
              },
              "preview": "float getScaleX();",
              "documentation": "The local scaleX."
            },
            {
              "name": "setScaleX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 96,
                  "character": 0
                },
                "end": {
                  "line": 96,
                  "character": 30
                }
              },
              "preview": "void setScaleX(float scaleX);"
            },
            {
              "name": "getScaleY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 99,
                  "character": 0
                },
                "end": {
                  "line": 99,
                  "character": 19
                }
              },
              "preview": "float getScaleY();",
              "documentation": "The local scaleY."
            },
            {
              "name": "setScaleY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 100,
                  "character": 0
                },
                "end": {
                  "line": 100,
                  "character": 30
                }
              },
              "preview": "void setScaleY(float scaleY);"
            },
            {
              "name": "setScale",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 102,
                  "character": 0
                },
                "end": {
                  "line": 102,
                  "character": 43
                }
              },
              "preview": "void setScale(float scaleX, float scaleY);"
            },
            {
              "name": "setScale",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 28
                }
              },
              "preview": "void setScale(float scale);"
            },
            {
              "name": "getShearX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 106,
                  "character": 0
                },
                "end": {
                  "line": 106,
                  "character": 19
                }
              },
              "preview": "float getShearX();",
              "documentation": "The local shearX."
            },
            {
              "name": "setShearX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 107,
                  "character": 0
                },
                "end": {
                  "line": 107,
                  "character": 30
                }
              },
              "preview": "void setShearX(float shearX);"
            },
            {
              "name": "getShearY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 110,
                  "character": 0
                },
                "end": {
                  "line": 110,
                  "character": 19
                }
              },
              "preview": "float getShearY();",
              "documentation": "The local shearY."
            },
            {
              "name": "setShearY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 111,
                  "character": 0
                },
                "end": {
                  "line": 111,
                  "character": 30
                }
              },
              "preview": "void setShearY(float shearY);"
            },
            {
              "name": "getInherit",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 114,
                  "character": 0
                },
                "end": {
                  "line": 114,
                  "character": 22
                }
              },
              "preview": "Inherit getInherit();",
              "documentation": "Determines how parent world transforms affect this bone."
            },
            {
              "name": "setInherit",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneLocal.h",
              "range": {
                "start": {
                  "line": 115,
                  "character": 0
                },
                "end": {
                  "line": 115,
                  "character": 34
                }
              },
              "preview": "void setInherit(Inherit inherit);"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 138,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Bone",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 11
            }
          },
          "preview": "class Bone;"
        },
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "BonePose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 137,
              "character": 2
            }
          },
          "preview": "class SP_API BonePose : public BoneLocal, public Update {",
          "supertypes": [
            "Update",
            "BoneLocal"
          ],
          "children": [
            {
              "name": "_bone",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 13
                }
              },
              "preview": "Bone* _bone;"
            },
            {
              "name": "_a",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 10
                }
              },
              "preview": "float _a, _b, _worldX;"
            },
            {
              "name": "_b",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 14
                }
              },
              "preview": "float _a, _b, _worldX;"
            },
            {
              "name": "_worldX",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 23
                }
              },
              "preview": "float _a, _b, _worldX;"
            },
            {
              "name": "_c",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 10
                }
              },
              "preview": "float _c, _d, _worldY;"
            },
            {
              "name": "_d",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 14
                }
              },
              "preview": "float _c, _d, _worldY;"
            },
            {
              "name": "_worldY",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 23
                }
              },
              "preview": "float _c, _d, _worldY;"
            },
            {
              "name": "_world",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 12
                }
              },
              "preview": "int _world, _local;"
            },
            {
              "name": "_local",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 20
                }
              },
              "preview": "int _world, _local;"
            },
            {
              "name": "BonePose",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 12
                }
              },
              "preview": "BonePose();"
            },
            {
              "name": "~BonePose",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 21
                }
              },
              "preview": "virtual ~BonePose();"
            },
            {
              "name": "update",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 67
                }
              },
              "preview": "virtual void update(Skeleton& skeleton, Physics physics) override;",
              "documentation": "Called by Skeleton::updateCache() to compute the world transform, if needed."
            },
            {
              "name": "updateWorldTransform",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 47
                }
              },
              "preview": "void updateWorldTransform(Skeleton& skeleton);",
              "documentation": "Computes the world transform using the parent bone's applied pose and this pose. Child bones are not updated.\nSee <a href=\"https://esotericsoftware.com/spine-runtime-skeletons#World-transforms\">World transforms</a> in the Spine\nRuntimes Guide."
            },
            {
              "name": "updateLocalTransform",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 47
                }
              },
              "preview": "void updateLocalTransform(Skeleton& skeleton);",
              "documentation": "Computes the local transform values from the world transform.\nIf the world transform is modified (by a constraint, rotateWorld(), etc) then this method should be called so\nthe local transform matches the world transform. The local transform may be needed by other code (eg to apply another\nconstraint).\nSome information is ambiguous in the world transform, such as -1,-1 scale versus 180 rotation. The local transform after\ncalling this method is equivalent to the local transform used to compute the world transform, but may not be identical."
            },
            {
              "name": "validateLocalTransform",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 49
                }
              },
              "preview": "void validateLocalTransform(Skeleton& skeleton);",
              "documentation": "If the world transform has been modified and the local transform no longer matches, updateLocalTransform() is called."
            },
            {
              "name": "modifyLocal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 38
                }
              },
              "preview": "void modifyLocal(Skeleton& skeleton);"
            },
            {
              "name": "modifyWorld",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 30
                }
              },
              "preview": "void modifyWorld(int update);"
            },
            {
              "name": "resetWorld",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 29
                }
              },
              "preview": "void resetWorld(int update);"
            },
            {
              "name": "getA",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 79,
                  "character": 14
                }
              },
              "preview": "float getA();",
              "documentation": "Part of the world transform matrix for the X axis. If changed, updateLocalTransform() should be called."
            },
            {
              "name": "setA",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 20
                }
              },
              "preview": "void setA(float a);"
            },
            {
              "name": "getB",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 14
                }
              },
              "preview": "float getB();",
              "documentation": "Part of the world transform matrix for the Y axis. If changed, updateLocalTransform() should be called."
            },
            {
              "name": "setB",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 20
                }
              },
              "preview": "void setB(float b);"
            },
            {
              "name": "getC",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 14
                }
              },
              "preview": "float getC();",
              "documentation": "Part of the world transform matrix for the X axis. If changed, updateLocalTransform() should be called."
            },
            {
              "name": "setC",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 88,
                  "character": 20
                }
              },
              "preview": "void setC(float c);"
            },
            {
              "name": "getD",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 91,
                  "character": 0
                },
                "end": {
                  "line": 91,
                  "character": 14
                }
              },
              "preview": "float getD();",
              "documentation": "Part of the world transform matrix for the Y axis. If changed, updateLocalTransform() should be called."
            },
            {
              "name": "setD",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 92,
                  "character": 0
                },
                "end": {
                  "line": 92,
                  "character": 20
                }
              },
              "preview": "void setD(float d);"
            },
            {
              "name": "getWorldX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 95,
                  "character": 0
                },
                "end": {
                  "line": 95,
                  "character": 19
                }
              },
              "preview": "float getWorldX();",
              "documentation": "The world X position. If changed, updateLocalTransform() should be called."
            },
            {
              "name": "setWorldX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 96,
                  "character": 0
                },
                "end": {
                  "line": 96,
                  "character": 30
                }
              },
              "preview": "void setWorldX(float worldX);"
            },
            {
              "name": "getWorldY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 99,
                  "character": 0
                },
                "end": {
                  "line": 99,
                  "character": 19
                }
              },
              "preview": "float getWorldY();",
              "documentation": "The world Y position. If changed, updateLocalTransform() should be called."
            },
            {
              "name": "setWorldY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 100,
                  "character": 0
                },
                "end": {
                  "line": 100,
                  "character": 30
                }
              },
              "preview": "void setWorldY(float worldY);"
            },
            {
              "name": "getWorldRotationX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 27
                }
              },
              "preview": "float getWorldRotationX();",
              "documentation": "The world rotation for the X axis, calculated using a and c."
            },
            {
              "name": "getWorldRotationY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 106,
                  "character": 0
                },
                "end": {
                  "line": 106,
                  "character": 27
                }
              },
              "preview": "float getWorldRotationY();",
              "documentation": "The world rotation for the Y axis, calculated using b and d."
            },
            {
              "name": "getWorldScaleX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 109,
                  "character": 0
                },
                "end": {
                  "line": 109,
                  "character": 24
                }
              },
              "preview": "float getWorldScaleX();",
              "documentation": "The magnitude (always positive) of the world scale X, calculated using a and c."
            },
            {
              "name": "getWorldScaleY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 112,
                  "character": 0
                },
                "end": {
                  "line": 112,
                  "character": 24
                }
              },
              "preview": "float getWorldScaleY();",
              "documentation": "The magnitude (always positive) of the world scale Y, calculated using b and d."
            },
            {
              "name": "worldToLocal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 115,
                  "character": 0
                },
                "end": {
                  "line": 115,
                  "character": 83
                }
              },
              "preview": "void worldToLocal(float worldX, float worldY, float& outLocalX, float& outLocalY);",
              "documentation": "Transforms a point from world coordinates to the bone's local coordinates."
            },
            {
              "name": "localToWorld",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 118,
                  "character": 0
                },
                "end": {
                  "line": 118,
                  "character": 83
                }
              },
              "preview": "void localToWorld(float localX, float localY, float& outWorldX, float& outWorldY);",
              "documentation": "Transforms a point from the bone's local coordinates to world coordinates."
            },
            {
              "name": "worldToParent",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 121,
                  "character": 0
                },
                "end": {
                  "line": 121,
                  "character": 86
                }
              },
              "preview": "void worldToParent(float worldX, float worldY, float& outParentX, float& outParentY);",
              "documentation": "Transforms a point from world coordinates to the parent bone's local coordinates."
            },
            {
              "name": "parentToWorld",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 124,
                  "character": 0
                },
                "end": {
                  "line": 124,
                  "character": 86
                }
              },
              "preview": "void parentToWorld(float parentX, float parentY, float& outWorldX, float& outWorldY);",
              "documentation": "Transforms a point from the parent bone's coordinates to world coordinates."
            },
            {
              "name": "worldToLocalRotation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 127,
                  "character": 0
                },
                "end": {
                  "line": 127,
                  "character": 49
                }
              },
              "preview": "float worldToLocalRotation(float worldRotation);",
              "documentation": "Transforms a world rotation to a local rotation."
            },
            {
              "name": "localToWorldRotation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 130,
                  "character": 49
                }
              },
              "preview": "float localToWorldRotation(float localRotation);",
              "documentation": "Transforms a local rotation to a world rotation."
            },
            {
              "name": "rotateWorld",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BonePose.h",
              "range": {
                "start": {
                  "line": 136,
                  "character": 0
                },
                "end": {
                  "line": 136,
                  "character": 33
                }
              },
              "preview": "void rotateWorld(float degrees);",
              "documentation": "Rotates the world transform the specified amount.\nAfter changes are made to the world transform, updateLocalTransform() should be called on this bone and any\nchild bones, recursively."
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 99,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "Event",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 12
            }
          },
          "preview": "class Event;"
        },
        {
          "name": "BoneLocal",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 16
            }
          },
          "preview": "class BoneLocal;"
        },
        {
          "name": "BoneTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 55,
              "character": 5
            }
          },
          "preview": "class SP_API BoneTimeline {",
          "documentation": "An interface for timelines which change the property of a bone.",
          "children": [
            {
              "name": "RTTI_DECL_NOPARENT",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 20
                }
              },
              "preview": "RTTI_DECL_NOPARENT",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 20
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 20
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                }
              ]
            },
            {
              "name": "BoneTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 62
                }
              },
              "preview": "BoneTimeline(int boneIndex) : _boneIndex(boneIndex) {}"
            },
            {
              "name": "~BoneTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 34
                }
              },
              "preview": "virtual ~BoneTimeline() {}"
            },
            {
              "name": "getBoneIndex",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 51
                }
              },
              "preview": "virtual int getBoneIndex() { return _boneIndex; }",
              "documentation": "The index of the bone in Skeleton::getBones() that will be changed when this timeline is applied."
            },
            {
              "name": "setBoneIndex",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 66
                }
              },
              "preview": "virtual void setBoneIndex(int inValue) { _boneIndex = inValue; }"
            },
            {
              "name": "_boneIndex",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 16
                }
              },
              "preview": "int _boneIndex;"
            }
          ]
        },
        {
          "name": "BoneTimeline1",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
          "range": {
            "start": {
              "line": 58,
              "character": 0
            },
            "end": {
              "line": 76,
              "character": 2
            }
          },
          "preview": "class SP_API BoneTimeline1 : public CurveTimeline1, public BoneTimeline {",
          "documentation": "Base class for timelines that animate a single bone property.",
          "supertypes": [
            "BoneTimeline",
            "CurveTimeline1"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
                  "range": {
                    "start": {
                      "line": 63,
                      "character": 0
                    },
                    "end": {
                      "line": 63,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
                  "range": {
                    "start": {
                      "line": 63,
                      "character": 0
                    },
                    "end": {
                      "line": 63,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "BoneTimeline1",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
              "range": {
                "start": {
                  "line": 66,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 88
                }
              },
              "preview": "BoneTimeline1(size_t frameCount, size_t bezierCount, int boneIndex, Property property);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 55
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 36
                }
              },
              "preview": "virtual void apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,",
              "documentation": "Applies changes to the pose based on the timeline values."
            }
          ]
        },
        {
          "name": "BoneTimeline2",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
          "range": {
            "start": {
              "line": 79,
              "character": 0
            },
            "end": {
              "line": 98,
              "character": 2
            }
          },
          "preview": "class SP_API BoneTimeline2 : public CurveTimeline2, public BoneTimeline {",
          "documentation": "Base class for timelines that animate two bone properties.",
          "supertypes": [
            "BoneTimeline",
            "CurveTimeline2"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
                  "range": {
                    "start": {
                      "line": 84,
                      "character": 0
                    },
                    "end": {
                      "line": 84,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
                  "range": {
                    "start": {
                      "line": 84,
                      "character": 0
                    },
                    "end": {
                      "line": 84,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "BoneTimeline2",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 109
                }
              },
              "preview": "BoneTimeline2(size_t frameCount, size_t bezierCount, int boneIndex, Property property1, Property property2);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
              "range": {
                "start": {
                  "line": 90,
                  "character": 0
                },
                "end": {
                  "line": 91,
                  "character": 55
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoneTimeline.h",
              "range": {
                "start": {
                  "line": 95,
                  "character": 0
                },
                "end": {
                  "line": 96,
                  "character": 36
                }
              },
              "preview": "virtual void apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,",
              "documentation": "Applies changes to the pose based on the timeline values."
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoundingBoxAttachment.h",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "BoundingBoxAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoundingBoxAttachment.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 50,
              "character": 2
            }
          },
          "preview": "class SP_API BoundingBoxAttachment : public VertexAttachment {",
          "documentation": "Attachment that has a polygon for bounds checking.",
          "supertypes": [
            "VertexAttachment"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoundingBoxAttachment.h",
              "range": {
                "start": {
                  "line": 39,
                  "character": 0
                },
                "end": {
                  "line": 39,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoundingBoxAttachment.h",
                  "range": {
                    "start": {
                      "line": 39,
                      "character": 0
                    },
                    "end": {
                      "line": 39,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoundingBoxAttachment.h",
                  "range": {
                    "start": {
                      "line": 39,
                      "character": 0
                    },
                    "end": {
                      "line": 39,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "BoundingBoxAttachment",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoundingBoxAttachment.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 52
                }
              },
              "preview": "explicit BoundingBoxAttachment(const String &name);"
            },
            {
              "name": "getColor",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoundingBoxAttachment.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 19
                }
              },
              "preview": "Color &getColor();"
            },
            {
              "name": "copy",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoundingBoxAttachment.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 37
                }
              },
              "preview": "virtual Attachment *copy() override;"
            },
            {
              "name": "_color",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/BoundingBoxAttachment.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 14
                }
              },
              "preview": "Color _color;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ClippingAttachment.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 62,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "SlotData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ClippingAttachment.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 15
            }
          },
          "preview": "class SlotData;"
        },
        {
          "name": "ClippingAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ClippingAttachment.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 61,
              "character": 2
            }
          },
          "preview": "class SP_API ClippingAttachment : public VertexAttachment {",
          "supertypes": [
            "VertexAttachment"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ClippingAttachment.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ClippingAttachment.h",
                  "range": {
                    "start": {
                      "line": 45,
                      "character": 0
                    },
                    "end": {
                      "line": 45,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ClippingAttachment.h",
                  "range": {
                    "start": {
                      "line": 45,
                      "character": 0
                    },
                    "end": {
                      "line": 45,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "ClippingAttachment",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ClippingAttachment.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 49
                }
              },
              "preview": "explicit ClippingAttachment(const String &name);"
            },
            {
              "name": "getEndSlot",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ClippingAttachment.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 24
                }
              },
              "preview": "SlotData *getEndSlot();"
            },
            {
              "name": "setEndSlot",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ClippingAttachment.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 36
                }
              },
              "preview": "void setEndSlot(SlotData *inValue);"
            },
            {
              "name": "getColor",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ClippingAttachment.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 19
                }
              },
              "preview": "Color &getColor();"
            },
            {
              "name": "copy",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ClippingAttachment.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 37
                }
              },
              "preview": "virtual Attachment *copy() override;"
            },
            {
              "name": "_endSlot",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ClippingAttachment.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 20
                }
              },
              "preview": "SlotData *_endSlot;"
            },
            {
              "name": "_color",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ClippingAttachment.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 14
                }
              },
              "preview": "Color _color;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Color.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 106,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Color",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Color.h",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 105,
              "character": 2
            }
          },
          "preview": "class SP_API Color : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "Color",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Color.h",
              "range": {
                "start": {
                  "line": 37,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 3
                }
              },
              "preview": "Color() : r(0), g(0), b(0), a(0) {"
            },
            {
              "name": "Color",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Color.h",
              "range": {
                "start": {
                  "line": 40,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 3
                }
              },
              "preview": "Color(float r, float g, float b, float a) : r(r), g(g), b(b), a(a) {"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Color.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 3
                }
              },
              "preview": "inline Color &set(float _r, float _g, float _b, float _a) {"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Color.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 3
                }
              },
              "preview": "inline Color &set(float _r, float _g, float _b) {"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Color.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 3
                }
              },
              "preview": "inline Color &set(const Color &other) {"
            },
            {
              "name": "add",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Color.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 3
                }
              },
              "preview": "inline Color &add(float _r, float _g, float _b, float _a) {"
            },
            {
              "name": "add",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Color.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 3
                }
              },
              "preview": "inline Color &add(float _r, float _g, float _b) {"
            },
            {
              "name": "add",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Color.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 94,
                  "character": 3
                }
              },
              "preview": "inline Color &add(const Color &other) {"
            },
            {
              "name": "clamp",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Color.h",
              "range": {
                "start": {
                  "line": 96,
                  "character": 0
                },
                "end": {
                  "line": 102,
                  "character": 3
                }
              },
              "preview": "inline Color &clamp() {"
            },
            {
              "name": "r",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Color.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 9
                }
              },
              "preview": "float r, g, b, a;"
            },
            {
              "name": "g",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Color.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 12
                }
              },
              "preview": "float r, g, b, a;"
            },
            {
              "name": "b",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Color.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 15
                }
              },
              "preview": "float r, g, b, a;"
            },
            {
              "name": "a",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Color.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 18
                }
              },
              "preview": "float r, g, b, a;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 168,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "RGBATimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 62,
              "character": 2
            }
          },
          "preview": "class SP_API RGBATimeline : public SlotCurveTimeline {",
          "documentation": "Changes a slot's SlotPose::getColor().",
          "supertypes": [
            "SlotCurveTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "RGBATimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 77
                }
              },
              "preview": "explicit RGBATimeline(size_t frameCount, size_t bezierCount, int slotIndex);"
            },
            {
              "name": "~RGBATimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 25
                }
              },
              "preview": "virtual ~RGBATimeline();"
            },
            {
              "name": "setFrame",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 74
                }
              },
              "preview": "void setFrame(int frame, float time, float r, float g, float b, float a);",
              "documentation": "Sets the time and color for the specified frame.\n@param frame Between 0 and frameCount, inclusive.\n@param time The frame time in seconds."
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 55,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 98
                }
              },
              "preview": "virtual void apply(Slot& slot, SlotPose& pose, float time, float alpha, MixBlend blend) override;"
            },
            {
              "name": "ENTRIES",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 30
                }
              },
              "preview": "static const int ENTRIES = 5;"
            },
            {
              "name": "R",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 24
                }
              },
              "preview": "static const int R = 1;"
            },
            {
              "name": "G",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 24
                }
              },
              "preview": "static const int G = 2;"
            },
            {
              "name": "B",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 24
                }
              },
              "preview": "static const int B = 3;"
            },
            {
              "name": "A",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 24
                }
              },
              "preview": "static const int A = 4;"
            }
          ]
        },
        {
          "name": "RGBTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
          "range": {
            "start": {
              "line": 65,
              "character": 0
            },
            "end": {
              "line": 89,
              "character": 2
            }
          },
          "preview": "class SP_API RGBTimeline : public SlotCurveTimeline {",
          "documentation": "Changes the RGB for a slot's SlotPose::getColor().",
          "supertypes": [
            "SlotCurveTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
                  "range": {
                    "start": {
                      "line": 70,
                      "character": 0
                    },
                    "end": {
                      "line": 70,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
                  "range": {
                    "start": {
                      "line": 70,
                      "character": 0
                    },
                    "end": {
                      "line": 70,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "RGBTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 76
                }
              },
              "preview": "explicit RGBTimeline(size_t frameCount, size_t bezierCount, int slotIndex);"
            },
            {
              "name": "~RGBTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 24
                }
              },
              "preview": "virtual ~RGBTimeline();"
            },
            {
              "name": "setFrame",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 65
                }
              },
              "preview": "void setFrame(int frame, float time, float r, float g, float b);",
              "documentation": "Sets the time and color for the specified frame.\n@param frame Between 0 and frameCount, inclusive.\n@param time The frame time in seconds."
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 98
                }
              },
              "preview": "virtual void apply(Slot& slot, SlotPose& pose, float time, float alpha, MixBlend blend) override;"
            },
            {
              "name": "ENTRIES",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 30
                }
              },
              "preview": "static const int ENTRIES = 4;"
            },
            {
              "name": "R",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 86,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 24
                }
              },
              "preview": "static const int R = 1;"
            },
            {
              "name": "G",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 24
                }
              },
              "preview": "static const int G = 2;"
            },
            {
              "name": "B",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 88,
                  "character": 24
                }
              },
              "preview": "static const int B = 3;"
            }
          ]
        },
        {
          "name": "AlphaTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
          "range": {
            "start": {
              "line": 91,
              "character": 0
            },
            "end": {
              "line": 106,
              "character": 2
            }
          },
          "preview": "class SP_API AlphaTimeline : public CurveTimeline1, public SlotTimeline {",
          "supertypes": [
            "SlotTimeline",
            "CurveTimeline1"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 96,
                  "character": 0
                },
                "end": {
                  "line": 96,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
                  "range": {
                    "start": {
                      "line": 96,
                      "character": 0
                    },
                    "end": {
                      "line": 96,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
                  "range": {
                    "start": {
                      "line": 96,
                      "character": 0
                    },
                    "end": {
                      "line": 96,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "AlphaTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 99,
                  "character": 0
                },
                "end": {
                  "line": 99,
                  "character": 78
                }
              },
              "preview": "explicit AlphaTimeline(size_t frameCount, size_t bezierCount, int slotIndex);"
            },
            {
              "name": "~AlphaTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 101,
                  "character": 0
                },
                "end": {
                  "line": 101,
                  "character": 26
                }
              },
              "preview": "virtual ~AlphaTimeline();"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 105,
                  "character": 55
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            }
          ]
        },
        {
          "name": "RGBA2Timeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
          "range": {
            "start": {
              "line": 109,
              "character": 0
            },
            "end": {
              "line": 137,
              "character": 2
            }
          },
          "preview": "class SP_API RGBA2Timeline : public SlotCurveTimeline {",
          "documentation": "Changes a slot's SlotPose::getColor() and SlotPose::getDarkColor() for two color tinting.",
          "supertypes": [
            "SlotCurveTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 114,
                  "character": 0
                },
                "end": {
                  "line": 114,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
                  "range": {
                    "start": {
                      "line": 114,
                      "character": 0
                    },
                    "end": {
                      "line": 114,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
                  "range": {
                    "start": {
                      "line": 114,
                      "character": 0
                    },
                    "end": {
                      "line": 114,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "RGBA2Timeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 117,
                  "character": 0
                },
                "end": {
                  "line": 117,
                  "character": 78
                }
              },
              "preview": "explicit RGBA2Timeline(size_t frameCount, size_t bezierCount, int slotIndex);"
            },
            {
              "name": "~RGBA2Timeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 119,
                  "character": 0
                },
                "end": {
                  "line": 119,
                  "character": 26
                }
              },
              "preview": "virtual ~RGBA2Timeline();"
            },
            {
              "name": "setFrame",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 124,
                  "character": 0
                },
                "end": {
                  "line": 124,
                  "character": 104
                }
              },
              "preview": "void setFrame(int frame, float time, float r, float g, float b, float a, float r2, float g2, float b2);",
              "documentation": "Sets the time, light color, and dark color for the specified frame.\n@param frame Between 0 and frameCount, inclusive.\n@param time The frame time in seconds."
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 127,
                  "character": 0
                },
                "end": {
                  "line": 127,
                  "character": 98
                }
              },
              "preview": "virtual void apply(Slot& slot, SlotPose& pose, float time, float alpha, MixBlend blend) override;"
            },
            {
              "name": "ENTRIES",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 129,
                  "character": 0
                },
                "end": {
                  "line": 129,
                  "character": 30
                }
              },
              "preview": "static const int ENTRIES = 8;"
            },
            {
              "name": "R",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 130,
                  "character": 24
                }
              },
              "preview": "static const int R = 1;"
            },
            {
              "name": "G",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 131,
                  "character": 0
                },
                "end": {
                  "line": 131,
                  "character": 24
                }
              },
              "preview": "static const int G = 2;"
            },
            {
              "name": "B",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 132,
                  "character": 0
                },
                "end": {
                  "line": 132,
                  "character": 24
                }
              },
              "preview": "static const int B = 3;"
            },
            {
              "name": "A",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 133,
                  "character": 0
                },
                "end": {
                  "line": 133,
                  "character": 24
                }
              },
              "preview": "static const int A = 4;"
            },
            {
              "name": "R2",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 134,
                  "character": 0
                },
                "end": {
                  "line": 134,
                  "character": 25
                }
              },
              "preview": "static const int R2 = 5;"
            },
            {
              "name": "G2",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 135,
                  "character": 0
                },
                "end": {
                  "line": 135,
                  "character": 25
                }
              },
              "preview": "static const int G2 = 6;"
            },
            {
              "name": "B2",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 136,
                  "character": 0
                },
                "end": {
                  "line": 136,
                  "character": 25
                }
              },
              "preview": "static const int B2 = 7;"
            }
          ]
        },
        {
          "name": "RGB2Timeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
          "range": {
            "start": {
              "line": 140,
              "character": 0
            },
            "end": {
              "line": 167,
              "character": 2
            }
          },
          "preview": "class SP_API RGB2Timeline : public SlotCurveTimeline {",
          "documentation": "Changes the RGB for a slot's SlotPose::getColor() and SlotPose::getDarkColor() for two color tinting.",
          "supertypes": [
            "SlotCurveTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 145,
                  "character": 0
                },
                "end": {
                  "line": 145,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
                  "range": {
                    "start": {
                      "line": 145,
                      "character": 0
                    },
                    "end": {
                      "line": 145,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
                  "range": {
                    "start": {
                      "line": 145,
                      "character": 0
                    },
                    "end": {
                      "line": 145,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "RGB2Timeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 148,
                  "character": 0
                },
                "end": {
                  "line": 148,
                  "character": 77
                }
              },
              "preview": "explicit RGB2Timeline(size_t frameCount, size_t bezierCount, int slotIndex);"
            },
            {
              "name": "~RGB2Timeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 150,
                  "character": 0
                },
                "end": {
                  "line": 150,
                  "character": 25
                }
              },
              "preview": "virtual ~RGB2Timeline();"
            },
            {
              "name": "setFrame",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 155,
                  "character": 0
                },
                "end": {
                  "line": 155,
                  "character": 95
                }
              },
              "preview": "void setFrame(int frame, float time, float r, float g, float b, float r2, float g2, float b2);",
              "documentation": "Sets the time, light color, and dark color for the specified frame.\n@param frame Between 0 and frameCount, inclusive.\n@param time The frame time in seconds."
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 158,
                  "character": 0
                },
                "end": {
                  "line": 158,
                  "character": 98
                }
              },
              "preview": "virtual void apply(Slot& slot, SlotPose& pose, float time, float alpha, MixBlend blend) override;"
            },
            {
              "name": "ENTRIES",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 160,
                  "character": 0
                },
                "end": {
                  "line": 160,
                  "character": 30
                }
              },
              "preview": "static const int ENTRIES = 7;"
            },
            {
              "name": "R",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 161,
                  "character": 0
                },
                "end": {
                  "line": 161,
                  "character": 24
                }
              },
              "preview": "static const int R = 1;"
            },
            {
              "name": "G",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 162,
                  "character": 0
                },
                "end": {
                  "line": 162,
                  "character": 24
                }
              },
              "preview": "static const int G = 2;"
            },
            {
              "name": "B",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 163,
                  "character": 0
                },
                "end": {
                  "line": 163,
                  "character": 24
                }
              },
              "preview": "static const int B = 3;"
            },
            {
              "name": "R2",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 164,
                  "character": 0
                },
                "end": {
                  "line": 164,
                  "character": 25
                }
              },
              "preview": "static const int R2 = 4;"
            },
            {
              "name": "G2",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 165,
                  "character": 0
                },
                "end": {
                  "line": 165,
                  "character": 25
                }
              },
              "preview": "static const int G2 = 5;"
            },
            {
              "name": "B2",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ColorTimeline.h",
              "range": {
                "start": {
                  "line": 166,
                  "character": 0
                },
                "end": {
                  "line": 166,
                  "character": 25
                }
              },
              "preview": "static const int B2 = 6;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 91,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "Constraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 66,
              "character": 2
            }
          },
          "preview": "class SP_API Constraint : public Update {",
          "supertypes": [
            "Update"
          ],
          "children": [
            {
              "name": "RTTI_DECL_NOPARENT",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 20
                }
              },
              "preview": "RTTI_DECL_NOPARENT",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 20
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 20
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                }
              ]
            },
            {
              "name": "Constraint",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 14
                }
              },
              "preview": "Constraint();"
            },
            {
              "name": "~Constraint",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 23
                }
              },
              "preview": "virtual ~Constraint();"
            },
            {
              "name": "getData",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 39
                }
              },
              "preview": "virtual ConstraintData &getData() = 0;"
            },
            {
              "name": "sort",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 43
                }
              },
              "preview": "virtual void sort(Skeleton &skeleton) = 0;"
            },
            {
              "name": "isSourceActive",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 3
                }
              },
              "preview": "virtual bool isSourceActive() {"
            },
            {
              "name": "pose",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 25
                }
              },
              "preview": "virtual void pose() = 0;"
            },
            {
              "name": "setupPose",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 30
                }
              },
              "preview": "virtual void setupPose() = 0;"
            },
            {
              "name": "update",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 71
                }
              },
              "preview": "virtual void update(Skeleton &skeleton, Physics physics) override = 0;"
            },
            {
              "name": "_active",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 14
                }
              },
              "preview": "bool _active;"
            }
          ]
        },
        {
          "name": "ConstraintGeneric",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
          "range": {
            "start": {
              "line": 69,
              "character": 0
            },
            "end": {
              "line": 90,
              "character": 2
            }
          },
          "preview": "class SP_API ConstraintGeneric : public PosedGeneric<D, P, P>, public PosedActive, public Constraint {",
          "supertypes": [
            "PosedGeneric",
            "PosedActive",
            "Constraint"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 11
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
                  "range": {
                    "start": {
                      "line": 70,
                      "character": 0
                    },
                    "end": {
                      "line": 70,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
                  "range": {
                    "start": {
                      "line": 70,
                      "character": 0
                    },
                    "end": {
                      "line": 70,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "ConstraintGeneric",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 3
                }
              },
              "preview": "ConstraintGeneric(D &data) : PosedGeneric<D, P, P>(data), PosedActive(), Constraint() {"
            },
            {
              "name": "~ConstraintGeneric",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 3
                }
              },
              "preview": "virtual ~ConstraintGeneric() {"
            },
            {
              "name": "getData",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 3
                }
              },
              "preview": "virtual ConstraintData &getData() override {"
            },
            {
              "name": "pose",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 3
                }
              },
              "preview": "virtual void pose() override {"
            },
            {
              "name": "setupPose",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Constraint.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 89,
                  "character": 3
                }
              },
              "preview": "virtual void setupPose() override {"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 70,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "Constraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 17
            }
          },
          "preview": "class Constraint;"
        },
        {
          "name": "ConstraintData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 55,
              "character": 2
            }
          },
          "preview": "class SP_API ConstraintData : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "RTTI_DECL_NOPARENT",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 20
                }
              },
              "preview": "RTTI_DECL_NOPARENT",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 20
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 20
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                }
              ]
            },
            {
              "name": "ConstraintData",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 59
                }
              },
              "preview": "ConstraintData(const String &name) : SpineObject(name) {}"
            },
            {
              "name": "~ConstraintData",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 30
                }
              },
              "preview": "virtual ~ConstraintData() {}"
            },
            {
              "name": "create",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 52
                }
              },
              "preview": "virtual Constraint* create(Skeleton& skeleton) = 0;"
            },
            {
              "name": "getName",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 43
                }
              },
              "preview": "virtual const String &getName() const = 0;"
            },
            {
              "name": "isSkinRequired",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 41
                }
              },
              "preview": "virtual bool isSkinRequired() const = 0;"
            }
          ]
        },
        {
          "name": "ConstraintDataGeneric",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
          "range": {
            "start": {
              "line": 59,
              "character": 0
            },
            "end": {
              "line": 69,
              "character": 2
            }
          },
          "preview": "class SP_API ConstraintDataGeneric: public PosedDataGeneric<P>, public ConstraintData {",
          "supertypes": [
            "ConstraintData",
            "PosedDataGeneric"
          ],
          "children": [
            {
              "name": "ConstraintDataGeneric",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 96
                }
              },
              "preview": "ConstraintDataGeneric(const String &name) : PosedDataGeneric<P>(name), ConstraintData(name) {}"
            },
            {
              "name": "~ConstraintDataGeneric",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 37
                }
              },
              "preview": "virtual ~ConstraintDataGeneric() {}"
            },
            {
              "name": "create",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 52
                }
              },
              "preview": "virtual Constraint* create(Skeleton& skeleton) = 0;"
            },
            {
              "name": "getName",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
              "range": {
                "start": {
                  "line": 67,
                  "character": 0
                },
                "end": {
                  "line": 67,
                  "character": 91
                }
              },
              "preview": "virtual const String &getName() const override { return PosedDataGeneric<P>::getName(); }"
            },
            {
              "name": "isSkinRequired",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintData.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 96
                }
              },
              "preview": "virtual bool isSkinRequired() const override { return PosedDataGeneric<P>::isSkinRequired(); }"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintTimeline.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 52,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "ConstraintTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintTimeline.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 51,
              "character": 5
            }
          },
          "preview": "class SP_API ConstraintTimeline {",
          "documentation": "An interface for timelines which change the property of a constraint.",
          "children": [
            {
              "name": "RTTI_DECL_NOPARENT",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 26
                }
              },
              "preview": "RTTI_DECL_NOPARENT",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 38,
                      "character": 0
                    },
                    "end": {
                      "line": 38,
                      "character": 26
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 38,
                      "character": 0
                    },
                    "end": {
                      "line": 38,
                      "character": 26
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                }
              ]
            },
            {
              "name": "ConstraintTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 47
                }
              },
              "preview": "ConstraintTimeline(int constraintIndex);"
            },
            {
              "name": "~ConstraintTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 40
                }
              },
              "preview": "virtual ~ConstraintTimeline() {}"
            },
            {
              "name": "getConstraintIndex",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 69
                }
              },
              "preview": "virtual int getConstraintIndex() { return _constraintIndex; }",
              "documentation": "The index of the constraint in Skeleton::getConstraints() that will be changed when this timeline is applied."
            },
            {
              "name": "setConstraintIndex",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 84
                }
              },
              "preview": "virtual void setConstraintIndex(int inValue) { _constraintIndex = inValue; }"
            },
            {
              "name": "_constraintIndex",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 28
                }
              },
              "preview": "int _constraintIndex;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintTimeline1.h",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "ConstraintTimeline1",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintTimeline1.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 44,
              "character": 2
            }
          },
          "preview": "class SP_API ConstraintTimeline1 : public CurveTimeline1, public ConstraintTimeline {",
          "documentation": "Base class for single-value constraint timelines.",
          "supertypes": [
            "ConstraintTimeline",
            "CurveTimeline1"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintTimeline1.h",
              "range": {
                "start": {
                  "line": 39,
                  "character": 0
                },
                "end": {
                  "line": 39,
                  "character": 11
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintTimeline1.h",
                  "range": {
                    "start": {
                      "line": 39,
                      "character": 0
                    },
                    "end": {
                      "line": 39,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintTimeline1.h",
                  "range": {
                    "start": {
                      "line": 39,
                      "character": 0
                    },
                    "end": {
                      "line": 39,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "ConstraintTimeline1",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintTimeline1.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 100
                }
              },
              "preview": "ConstraintTimeline1(size_t frameCount, size_t bezierCount, int constraintIndex, Property property);"
            },
            {
              "name": "~ConstraintTimeline1",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ConstraintTimeline1.h",
              "range": {
                "start": {
                  "line": 43,
                  "character": 0
                },
                "end": {
                  "line": 43,
                  "character": 35
                }
              },
              "preview": "virtual ~ConstraintTimeline1() {}"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ContainerUtil.h",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 126,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "ContainerUtil",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ContainerUtil.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 125,
              "character": 2
            }
          },
          "preview": "class SP_API ContainerUtil : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "findWithName",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ContainerUtil.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 3
                }
              },
              "preview": "static T *findWithName(Vector<T *> &items, const String &name) {"
            },
            {
              "name": "findIndexWithName",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ContainerUtil.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 3
                }
              },
              "preview": "static int findIndexWithName(Vector<T *> &items, const String &name) {"
            },
            {
              "name": "findWithDataName",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ContainerUtil.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 90,
                  "character": 3
                }
              },
              "preview": "static T *findWithDataName(Vector<T *> &items, const String &name) {"
            },
            {
              "name": "findIndexWithDataName",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ContainerUtil.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 105,
                  "character": 3
                }
              },
              "preview": "static int findIndexWithDataName(Vector<T *> &items, const String &name) {"
            },
            {
              "name": "cleanUpVectorOfPointers",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ContainerUtil.h",
              "range": {
                "start": {
                  "line": 108,
                  "character": 0
                },
                "end": {
                  "line": 116,
                  "character": 3
                }
              },
              "preview": "static void cleanUpVectorOfPointers(Vector<T *> &items) {"
            },
            {
              "name": "ContainerUtil",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ContainerUtil.h",
              "range": {
                "start": {
                  "line": 120,
                  "character": 0
                },
                "end": {
                  "line": 120,
                  "character": 17
                }
              },
              "preview": "ContainerUtil();"
            },
            {
              "name": "ContainerUtil",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ContainerUtil.h",
              "range": {
                "start": {
                  "line": 122,
                  "character": 0
                },
                "end": {
                  "line": 122,
                  "character": 38
                }
              },
              "preview": "ContainerUtil(const ContainerUtil &);"
            },
            {
              "name": "operator=",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ContainerUtil.h",
              "range": {
                "start": {
                  "line": 124,
                  "character": 0
                },
                "end": {
                  "line": 124,
                  "character": 49
                }
              },
              "preview": "ContainerUtil &operator=(const ContainerUtil &);"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 115,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "CurveTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 64,
              "character": 2
            }
          },
          "preview": "class SP_API CurveTimeline : public Timeline {",
          "documentation": "Base class for frames that use an interpolation bezier curve.",
          "supertypes": [
            "Timeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
                  "range": {
                    "start": {
                      "line": 38,
                      "character": 0
                    },
                    "end": {
                      "line": 38,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
                  "range": {
                    "start": {
                      "line": 38,
                      "character": 0
                    },
                    "end": {
                      "line": 38,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "CurveTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 84
                }
              },
              "preview": "explicit CurveTimeline(size_t frameCount, size_t frameEntries, size_t bezierCount);"
            },
            {
              "name": "~CurveTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 43,
                  "character": 0
                },
                "end": {
                  "line": 43,
                  "character": 26
                }
              },
              "preview": "virtual ~CurveTimeline();"
            },
            {
              "name": "setLinear",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 30
                }
              },
              "preview": "void setLinear(size_t frame);"
            },
            {
              "name": "setStepped",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 31
                }
              },
              "preview": "void setStepped(size_t frame);"
            },
            {
              "name": "setBezier",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 43
                }
              },
              "preview": "setBezier(size_t bezier, size_t frame, float value, float time1, float value1, float cx1, float cy1, float cx2,"
            },
            {
              "name": "getBezierValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 78
                }
              },
              "preview": "float getBezierValue(float time, size_t frame, size_t valueOffset, size_t i);"
            },
            {
              "name": "getCurves",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 55,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 28
                }
              },
              "preview": "Vector<float> &getCurves();"
            },
            {
              "name": "LINEAR",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 29
                }
              },
              "preview": "static const int LINEAR = 0;"
            },
            {
              "name": "STEPPED",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 30
                }
              },
              "preview": "static const int STEPPED = 1;"
            },
            {
              "name": "BEZIER",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 29
                }
              },
              "preview": "static const int BEZIER = 2;"
            },
            {
              "name": "BEZIER_SIZE",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 35
                }
              },
              "preview": "static const int BEZIER_SIZE = 18;"
            },
            {
              "name": "_curves",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 23
                }
              },
              "preview": "Vector<float> _curves; // type, x, y, ..."
            }
          ]
        },
        {
          "name": "CurveTimeline1",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
          "range": {
            "start": {
              "line": 67,
              "character": 0
            },
            "end": {
              "line": 96,
              "character": 2
            }
          },
          "preview": "class SP_API CurveTimeline1 : public CurveTimeline {",
          "documentation": "The base class for a CurveTimeline that sets one property.",
          "supertypes": [
            "CurveTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
                  "range": {
                    "start": {
                      "line": 68,
                      "character": 0
                    },
                    "end": {
                      "line": 68,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
                  "range": {
                    "start": {
                      "line": 68,
                      "character": 0
                    },
                    "end": {
                      "line": 68,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "CurveTimeline1",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 64
                }
              },
              "preview": "explicit CurveTimeline1(size_t frameCount, size_t bezierCount);",
              "documentation": "@param frameCount The number of frames for this timeline.\n@param bezierCount The maximum number of Bezier curves."
            },
            {
              "name": "~CurveTimeline1",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 27
                }
              },
              "preview": "virtual ~CurveTimeline1();"
            },
            {
              "name": "setFrame",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 54
                }
              },
              "preview": "void setFrame(size_t frame, float time, float value);",
              "documentation": "Sets the time and value for the specified frame.\n@param frame Between 0 and frameCount, inclusive.\n@param time The frame time in seconds."
            },
            {
              "name": "getCurveValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 33
                }
              },
              "preview": "float getCurveValue(float time);",
              "documentation": "Returns the interpolated value for the specified time."
            },
            {
              "name": "getRelativeValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 99
                }
              },
              "preview": "float getRelativeValue(float time, float alpha, MixBlend blend, float current, float setup);"
            },
            {
              "name": "getAbsoluteValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 99
                }
              },
              "preview": "float getAbsoluteValue(float time, float alpha, MixBlend blend, float current, float setup);"
            },
            {
              "name": "getAbsoluteValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 89,
                  "character": 0
                },
                "end": {
                  "line": 89,
                  "character": 113
                }
              },
              "preview": "float getAbsoluteValue (float time, float alpha, MixBlend blend, float current, float setup, float value);"
            },
            {
              "name": "getScaleValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 91,
                  "character": 0
                },
                "end": {
                  "line": 91,
                  "character": 121
                }
              },
              "preview": "float getScaleValue (float time, float alpha, MixBlend blend, MixDirection direction, float current, float setup);"
            },
            {
              "name": "ENTRIES",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 94,
                  "character": 30
                }
              },
              "preview": "static const int ENTRIES = 2;"
            },
            {
              "name": "VALUE",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 95,
                  "character": 0
                },
                "end": {
                  "line": 95,
                  "character": 28
                }
              },
              "preview": "static const int VALUE = 1;"
            }
          ]
        },
        {
          "name": "CurveTimeline2",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
          "range": {
            "start": {
              "line": 98,
              "character": 0
            },
            "end": {
              "line": 114,
              "character": 2
            }
          },
          "preview": "class SP_API CurveTimeline2 : public CurveTimeline {",
          "supertypes": [
            "CurveTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 99,
                  "character": 0
                },
                "end": {
                  "line": 99,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
                  "range": {
                    "start": {
                      "line": 99,
                      "character": 0
                    },
                    "end": {
                      "line": 99,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
                  "range": {
                    "start": {
                      "line": 99,
                      "character": 0
                    },
                    "end": {
                      "line": 99,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "CurveTimeline2",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 102,
                  "character": 0
                },
                "end": {
                  "line": 102,
                  "character": 64
                }
              },
              "preview": "explicit CurveTimeline2(size_t frameCount, size_t bezierCount);"
            },
            {
              "name": "~CurveTimeline2",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 27
                }
              },
              "preview": "virtual ~CurveTimeline2();"
            },
            {
              "name": "setFrame",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 106,
                  "character": 0
                },
                "end": {
                  "line": 106,
                  "character": 69
                }
              },
              "preview": "void setFrame(size_t frame, float time, float value1, float value2);"
            },
            {
              "name": "getCurveValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 108,
                  "character": 0
                },
                "end": {
                  "line": 108,
                  "character": 33
                }
              },
              "preview": "float getCurveValue(float time);"
            },
            {
              "name": "ENTRIES",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 111,
                  "character": 0
                },
                "end": {
                  "line": 111,
                  "character": 30
                }
              },
              "preview": "static const int ENTRIES = 3;"
            },
            {
              "name": "VALUE1",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 112,
                  "character": 0
                },
                "end": {
                  "line": 112,
                  "character": 29
                }
              },
              "preview": "static const int VALUE1 = 1;"
            },
            {
              "name": "VALUE2",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/CurveTimeline.h",
              "range": {
                "start": {
                  "line": 113,
                  "character": 0
                },
                "end": {
                  "line": 113,
                  "character": 29
                }
              },
              "preview": "static const int VALUE2 = 2;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 135,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "DebugExtension",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 134,
              "character": 2
            }
          },
          "preview": "class SP_API DebugExtension : public SpineExtension {",
          "supertypes": [
            "SpineExtension"
          ],
          "children": [
            {
              "name": "Allocation",
              "kind": "class",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
              "range": {
                "start": {
                  "line": 40,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 3
                }
              },
              "preview": "struct Allocation {",
              "children": [
                {
                  "name": "address",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
                  "range": {
                    "start": {
                      "line": 41,
                      "character": 0
                    },
                    "end": {
                      "line": 41,
                      "character": 16
                    }
                  },
                  "preview": "void *address;"
                },
                {
                  "name": "size",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 14
                    }
                  },
                  "preview": "size_t size;"
                },
                {
                  "name": "fileName",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
                  "range": {
                    "start": {
                      "line": 43,
                      "character": 0
                    },
                    "end": {
                      "line": 43,
                      "character": 23
                    }
                  },
                  "preview": "const char *fileName;"
                },
                {
                  "name": "line",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
                  "range": {
                    "start": {
                      "line": 44,
                      "character": 0
                    },
                    "end": {
                      "line": 44,
                      "character": 11
                    }
                  },
                  "preview": "int line;"
                },
                {
                  "name": "Allocation",
                  "kind": "constructor",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
                  "range": {
                    "start": {
                      "line": 46,
                      "character": 0
                    },
                    "end": {
                      "line": 47,
                      "character": 4
                    }
                  },
                  "preview": "Allocation() : address(NULL), size(0), fileName(NULL), line(0) {"
                },
                {
                  "name": "Allocation",
                  "kind": "constructor",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
                  "range": {
                    "start": {
                      "line": 49,
                      "character": 0
                    },
                    "end": {
                      "line": 50,
                      "character": 4
                    }
                  },
                  "preview": "Allocation(void *a, size_t s, const char *f, int l) : address(a), size(s), fileName(f), line(l) {"
                }
              ]
            },
            {
              "name": "DebugExtension",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 3
                }
              },
              "preview": "DebugExtension(SpineExtension *extension) : _extension(extension), _allocations(0), _reallocations(0),"
            },
            {
              "name": "reportLeaks",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 3
                }
              },
              "preview": "void reportLeaks() {"
            },
            {
              "name": "clearAllocations",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
              "range": {
                "start": {
                  "line": 67,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 3
                }
              },
              "preview": "void clearAllocations() {"
            },
            {
              "name": "_alloc",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 78,
                  "character": 3
                }
              },
              "preview": "virtual void *_alloc(size_t size, const char *file, int line) {"
            },
            {
              "name": "_calloc",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 3
                }
              },
              "preview": "virtual void *_calloc(size_t size, const char *file, int line) {"
            },
            {
              "name": "_realloc",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 96,
                  "character": 3
                }
              },
              "preview": "virtual void *_realloc(void *ptr, size_t size, const char *file, int line) {"
            },
            {
              "name": "_free",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
              "range": {
                "start": {
                  "line": 98,
                  "character": 0
                },
                "end": {
                  "line": 109,
                  "character": 3
                }
              },
              "preview": "virtual void _free(void *mem, const char *file, int line) {"
            },
            {
              "name": "_readFile",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
              "range": {
                "start": {
                  "line": 111,
                  "character": 0
                },
                "end": {
                  "line": 121,
                  "character": 3
                }
              },
              "preview": "virtual char *_readFile(const String &path, int *length) {"
            },
            {
              "name": "getUsedMemory",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
              "range": {
                "start": {
                  "line": 123,
                  "character": 0
                },
                "end": {
                  "line": 125,
                  "character": 3
                }
              },
              "preview": "size_t getUsedMemory() {"
            },
            {
              "name": "_extension",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
              "range": {
                "start": {
                  "line": 128,
                  "character": 0
                },
                "end": {
                  "line": 128,
                  "character": 28
                }
              },
              "preview": "SpineExtension *_extension;"
            },
            {
              "name": "_allocated",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
              "range": {
                "start": {
                  "line": 129,
                  "character": 0
                },
                "end": {
                  "line": 129,
                  "character": 41
                }
              },
              "preview": "std::map<void *, Allocation> _allocated;"
            },
            {
              "name": "_allocations",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 130,
                  "character": 21
                }
              },
              "preview": "size_t _allocations;"
            },
            {
              "name": "_reallocations",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
              "range": {
                "start": {
                  "line": 131,
                  "character": 0
                },
                "end": {
                  "line": 131,
                  "character": 23
                }
              },
              "preview": "size_t _reallocations;"
            },
            {
              "name": "_frees",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
              "range": {
                "start": {
                  "line": 132,
                  "character": 0
                },
                "end": {
                  "line": 132,
                  "character": 15
                }
              },
              "preview": "size_t _frees;"
            },
            {
              "name": "_usedMemory",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Debug.h",
              "range": {
                "start": {
                  "line": 133,
                  "character": 0
                },
                "end": {
                  "line": 133,
                  "character": 20
                }
              },
              "preview": "size_t _usedMemory;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 78,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "VertexAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 35,
              "character": 23
            }
          },
          "preview": "class VertexAttachment;"
        },
        {
          "name": "DeformTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 77,
              "character": 2
            }
          },
          "preview": "class SP_API DeformTimeline : public SlotCurveTimeline {",
          "supertypes": [
            "SlotCurveTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "DeformTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 109
                }
              },
              "preview": "explicit DeformTimeline(size_t frameCount, size_t bezierCount, int slotIndex, VertexAttachment *attachment);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 55
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            },
            {
              "name": "setFrame",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 68
                }
              },
              "preview": "void setFrame(int frameIndex, float time, Vector<float> &vertices);",
              "documentation": "Sets the time and vertices for the specified frame."
            },
            {
              "name": "getVertices",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
              "range": {
                "start": {
                  "line": 55,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 39
                }
              },
              "preview": "Vector <Vector<float>> &getVertices();",
              "documentation": "The vertices for each frame."
            },
            {
              "name": "getAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 35
                }
              },
              "preview": "VertexAttachment *getAttachment();",
              "documentation": "The attachment that will be deformed."
            },
            {
              "name": "setAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 47
                }
              },
              "preview": "void setAttachment(VertexAttachment *inValue);"
            },
            {
              "name": "setBezier",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 52
                }
              },
              "preview": "setBezier(size_t bezier, size_t frame, float value, float time1, float value1, float cx1, float cy1, float cx2,"
            },
            {
              "name": "getCurvePercent",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
              "range": {
                "start": {
                  "line": 66,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 46
                }
              },
              "preview": "float getCurvePercent(float time, int frame);"
            },
            {
              "name": "getFrameCount",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 51
                }
              },
              "preview": "size_t getFrameCount() { return _frames.size(); }"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 90
                }
              },
              "preview": "void apply(Slot &slot, SlotPose &pose, float time, float alpha, MixBlend blend) override;"
            },
            {
              "name": "_vertices",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 34
                }
              },
              "preview": "Vector <Vector<float>> _vertices;"
            },
            {
              "name": "_attachment",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DeformTimeline.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 31
                }
              },
              "preview": "VertexAttachment *_attachment;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DrawOrderTimeline.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 64,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "DrawOrderTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DrawOrderTimeline.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 63,
              "character": 2
            }
          },
          "preview": "class SP_API DrawOrderTimeline : public Timeline {",
          "documentation": "Changes a skeleton's Skeleton::getDrawOrder().",
          "supertypes": [
            "Timeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DrawOrderTimeline.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DrawOrderTimeline.h",
                  "range": {
                    "start": {
                      "line": 41,
                      "character": 0
                    },
                    "end": {
                      "line": 41,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DrawOrderTimeline.h",
                  "range": {
                    "start": {
                      "line": 41,
                      "character": 0
                    },
                    "end": {
                      "line": 41,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "DrawOrderTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DrawOrderTimeline.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 47
                }
              },
              "preview": "explicit DrawOrderTimeline(size_t frameCount);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DrawOrderTimeline.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 55
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            },
            {
              "name": "getFrameCount",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DrawOrderTimeline.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 24
                }
              },
              "preview": "size_t getFrameCount();"
            },
            {
              "name": "getDrawOrders",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DrawOrderTimeline.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 39
                }
              },
              "preview": "Vector <Vector<int>> &getDrawOrders();",
              "documentation": "The draw order for each frame. See setFrame()."
            },
            {
              "name": "setFrame",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DrawOrderTimeline.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 65
                }
              },
              "preview": "void setFrame(size_t frame, float time, Vector<int> *drawOrder);",
              "documentation": "Sets the time and draw order for the specified frame.\n@param frame Between 0 and frameCount, inclusive.\n@param time The frame time in seconds.\n@param drawOrder For each slot in Skeleton::slots, the index of the slot in the new draw order. May be null to use setup pose draw order."
            },
            {
              "name": "_drawOrders",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/DrawOrderTimeline.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 34
                }
              },
              "preview": "Vector <Vector<int>> _drawOrders;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 87,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "EventData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 16
            }
          },
          "preview": "class EventData;"
        },
        {
          "name": "Event",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 86,
              "character": 2
            }
          },
          "preview": "class SP_API Event : public SpineObject {",
          "documentation": "Stores the current pose values for an Event.\nSee Timeline::apply(), AnimationStateListener::event(), and\n@see https://esotericsoftware.com/spine-events Events in the Spine User Guide.",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "Event",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 42
                }
              },
              "preview": "Event(float time, const EventData &data);"
            },
            {
              "name": "getData",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 28
                }
              },
              "preview": "const EventData &getData();",
              "documentation": "The event's setup pose data."
            },
            {
              "name": "getTime",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 17
                }
              },
              "preview": "float getTime();",
              "documentation": "The animation time this event was keyed."
            },
            {
              "name": "getIntValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 19
                }
              },
              "preview": "int getIntValue();"
            },
            {
              "name": "setIntValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 31
                }
              },
              "preview": "void setIntValue(int inValue);"
            },
            {
              "name": "getFloatValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 23
                }
              },
              "preview": "float getFloatValue();"
            },
            {
              "name": "setFloatValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 35
                }
              },
              "preview": "void setFloatValue(float inValue);"
            },
            {
              "name": "getStringValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 66,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 32
                }
              },
              "preview": "const String &getStringValue();"
            },
            {
              "name": "setStringValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 44
                }
              },
              "preview": "void setStringValue(const String &inValue);"
            },
            {
              "name": "getVolume",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 19
                }
              },
              "preview": "float getVolume();"
            },
            {
              "name": "setVolume",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 31
                }
              },
              "preview": "void setVolume(float inValue);"
            },
            {
              "name": "getBalance",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 20
                }
              },
              "preview": "float getBalance();"
            },
            {
              "name": "setBalance",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 32
                }
              },
              "preview": "void setBalance(float inValue);"
            },
            {
              "name": "_data",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 79,
                  "character": 24
                }
              },
              "preview": "const EventData &_data;"
            },
            {
              "name": "_time",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 19
                }
              },
              "preview": "const float _time;"
            },
            {
              "name": "_intValue",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 15
                }
              },
              "preview": "int _intValue;"
            },
            {
              "name": "_floatValue",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 82,
                  "character": 0
                },
                "end": {
                  "line": 82,
                  "character": 19
                }
              },
              "preview": "float _floatValue;"
            },
            {
              "name": "_stringValue",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 21
                }
              },
              "preview": "String _stringValue;"
            },
            {
              "name": "_volume",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 15
                }
              },
              "preview": "float _volume;"
            },
            {
              "name": "_balance",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Event.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 16
                }
              },
              "preview": "float _balance;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 83,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "EventData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 82,
              "character": 2
            }
          },
          "preview": "class SP_API EventData : public SpineObject {",
          "documentation": "Stores the setup pose values for an Event.",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "EventData",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 40
                }
              },
              "preview": "explicit EventData(const String &name);"
            },
            {
              "name": "getName",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 31
                }
              },
              "preview": "const String &getName() const;",
              "documentation": "The name of the event, which is unique within the skeleton."
            },
            {
              "name": "getIntValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 25
                }
              },
              "preview": "int getIntValue() const;"
            },
            {
              "name": "setIntValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 31
                }
              },
              "preview": "void setIntValue(int inValue);"
            },
            {
              "name": "getFloatValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 29
                }
              },
              "preview": "float getFloatValue() const;"
            },
            {
              "name": "setFloatValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 35
                }
              },
              "preview": "void setFloatValue(float inValue);"
            },
            {
              "name": "getStringValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 38
                }
              },
              "preview": "const String &getStringValue() const;"
            },
            {
              "name": "setStringValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 44
                }
              },
              "preview": "void setStringValue(const String &inValue);"
            },
            {
              "name": "getAudioPath",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 36
                }
              },
              "preview": "const String &getAudioPath() const;"
            },
            {
              "name": "setAudioPath",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 42
                }
              },
              "preview": "void setAudioPath(const String &inValue);"
            },
            {
              "name": "getVolume",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 66,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 25
                }
              },
              "preview": "float getVolume() const;"
            },
            {
              "name": "setVolume",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 31
                }
              },
              "preview": "void setVolume(float inValue);"
            },
            {
              "name": "getBalance",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 26
                }
              },
              "preview": "float getBalance() const;"
            },
            {
              "name": "setBalance",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 32
                }
              },
              "preview": "void setBalance(float inValue);"
            },
            {
              "name": "_name",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 20
                }
              },
              "preview": "const String _name;"
            },
            {
              "name": "_intValue",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 15
                }
              },
              "preview": "int _intValue;"
            },
            {
              "name": "_floatValue",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 19
                }
              },
              "preview": "float _floatValue;"
            },
            {
              "name": "_stringValue",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 78,
                  "character": 0
                },
                "end": {
                  "line": 78,
                  "character": 21
                }
              },
              "preview": "String _stringValue;"
            },
            {
              "name": "_audioPath",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 79,
                  "character": 19
                }
              },
              "preview": "String _audioPath;"
            },
            {
              "name": "_volume",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 15
                }
              },
              "preview": "float _volume;"
            },
            {
              "name": "_balance",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventData.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 16
                }
              },
              "preview": "float _balance;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventTimeline.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 65,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "EventTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventTimeline.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 64,
              "character": 2
            }
          },
          "preview": "class SP_API EventTimeline : public Timeline {",
          "documentation": "Fires an Event when specific animation times are reached.",
          "supertypes": [
            "Timeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventTimeline.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventTimeline.h",
                  "range": {
                    "start": {
                      "line": 41,
                      "character": 0
                    },
                    "end": {
                      "line": 41,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventTimeline.h",
                  "range": {
                    "start": {
                      "line": 41,
                      "character": 0
                    },
                    "end": {
                      "line": 41,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "EventTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventTimeline.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 43
                }
              },
              "preview": "explicit EventTimeline(size_t frameCount);"
            },
            {
              "name": "~EventTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventTimeline.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 18
                }
              },
              "preview": "~EventTimeline();"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventTimeline.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 55
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            },
            {
              "name": "getFrameCount",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventTimeline.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 24
                }
              },
              "preview": "size_t getFrameCount();"
            },
            {
              "name": "getEvents",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventTimeline.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 30
                }
              },
              "preview": "Vector<Event *> &getEvents();",
              "documentation": "The event for each frame."
            },
            {
              "name": "setFrame",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventTimeline.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 43
                }
              },
              "preview": "void setFrame(size_t frame, Event *event);",
              "documentation": "Sets the time and event for the specified frame.\n@param frame Between 0 and frameCount, inclusive."
            },
            {
              "name": "_events",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/EventTimeline.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 25
                }
              },
              "preview": "Vector<Event *> _events;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 122,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "String",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 13
            }
          },
          "preview": "class String;"
        },
        {
          "name": "SpineExtension",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 97,
              "character": 2
            }
          },
          "preview": "class SP_API SpineExtension {",
          "children": [
            {
              "name": "alloc",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 3
                }
              },
              "preview": "static T *alloc(size_t num, const char *file, int line) {"
            },
            {
              "name": "calloc",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 3
                }
              },
              "preview": "static T *calloc(size_t num, const char *file, int line) {"
            },
            {
              "name": "realloc",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 3
                }
              },
              "preview": "static T *realloc(T *ptr, size_t num, const char *file, int line) {"
            },
            {
              "name": "free",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 3
                }
              },
              "preview": "static void free(T *ptr, const char *file, int line) {"
            },
            {
              "name": "beforeFree",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 3
                }
              },
              "preview": "static void beforeFree(T *ptr) {"
            },
            {
              "name": "readFile",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 3
                }
              },
              "preview": "static char *readFile(const String &path, int *length) {"
            },
            {
              "name": "setInstance",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 59
                }
              },
              "preview": "static void setInstance(SpineExtension *inSpineExtension);"
            },
            {
              "name": "getInstance",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 38
                }
              },
              "preview": "static SpineExtension *getInstance();"
            },
            {
              "name": "~SpineExtension",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 27
                }
              },
              "preview": "virtual ~SpineExtension();"
            },
            {
              "name": "_alloc",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 79,
                  "character": 67
                }
              },
              "preview": "virtual void *_alloc(size_t size, const char *file, int line) = 0;",
              "documentation": "Implement this function to use your own memory allocator"
            },
            {
              "name": "_calloc",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 68
                }
              },
              "preview": "virtual void *_calloc(size_t size, const char *file, int line) = 0;"
            },
            {
              "name": "_realloc",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 80
                }
              },
              "preview": "virtual void *_realloc(void *ptr, size_t size, const char *file, int line) = 0;"
            },
            {
              "name": "_free",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 86,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 63
                }
              },
              "preview": "virtual void _free(void *mem, const char *file, int line) = 0;",
              "documentation": "If you provide a spineAllocFunc, you should also provide a spineFreeFunc"
            },
            {
              "name": "_readFile",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 88,
                  "character": 62
                }
              },
              "preview": "virtual char *_readFile(const String &path, int *length) = 0;"
            },
            {
              "name": "_beforeFree",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 90,
                  "character": 0
                },
                "end": {
                  "line": 90,
                  "character": 57
                }
              },
              "preview": "virtual void _beforeFree(void *ptr) { SP_UNUSED(ptr); }"
            },
            {
              "name": "SpineExtension",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 93,
                  "character": 0
                },
                "end": {
                  "line": 93,
                  "character": 18
                }
              },
              "preview": "SpineExtension();"
            },
            {
              "name": "_instance",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 96,
                  "character": 0
                },
                "end": {
                  "line": 96,
                  "character": 34
                }
              },
              "preview": "static SpineExtension *_instance;"
            }
          ]
        },
        {
          "name": "DefaultSpineExtension",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
          "range": {
            "start": {
              "line": 99,
              "character": 0
            },
            "end": {
              "line": 115,
              "character": 2
            }
          },
          "preview": "class SP_API DefaultSpineExtension : public SpineExtension {",
          "supertypes": [
            "SpineExtension"
          ],
          "children": [
            {
              "name": "DefaultSpineExtension",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 101,
                  "character": 0
                },
                "end": {
                  "line": 101,
                  "character": 25
                }
              },
              "preview": "DefaultSpineExtension();"
            },
            {
              "name": "~DefaultSpineExtension",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 34
                }
              },
              "preview": "virtual ~DefaultSpineExtension();"
            },
            {
              "name": "_alloc",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 106,
                  "character": 0
                },
                "end": {
                  "line": 106,
                  "character": 72
                }
              },
              "preview": "virtual void *_alloc(size_t size, const char *file, int line) override;"
            },
            {
              "name": "_calloc",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 108,
                  "character": 0
                },
                "end": {
                  "line": 108,
                  "character": 73
                }
              },
              "preview": "virtual void *_calloc(size_t size, const char *file, int line) override;"
            },
            {
              "name": "_realloc",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 110,
                  "character": 0
                },
                "end": {
                  "line": 110,
                  "character": 85
                }
              },
              "preview": "virtual void *_realloc(void *ptr, size_t size, const char *file, int line) override;"
            },
            {
              "name": "_free",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 112,
                  "character": 0
                },
                "end": {
                  "line": 112,
                  "character": 68
                }
              },
              "preview": "virtual void _free(void *mem, const char *file, int line) override;"
            },
            {
              "name": "_readFile",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
              "range": {
                "start": {
                  "line": 114,
                  "character": 0
                },
                "end": {
                  "line": 114,
                  "character": 67
                }
              },
              "preview": "virtual char *_readFile(const String &path, int *length) override;"
            }
          ]
        },
        {
          "name": "getDefaultExtension",
          "kind": "function",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Extension.h",
          "range": {
            "start": {
              "line": 121,
              "character": 0
            },
            "end": {
              "line": 121,
              "character": 45
            }
          },
          "preview": "extern SpineExtension *getDefaultExtension();"
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HasRendererObject.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 62,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "DisposeRendererObject",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HasRendererObject.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 60
            }
          },
          "preview": "typedef void (*DisposeRendererObject)(void *rendererObject);"
        },
        {
          "name": "HasRendererObject",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HasRendererObject.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 60,
              "character": 2
            }
          },
          "preview": "class SP_API HasRendererObject {",
          "children": [
            {
              "name": "HasRendererObject",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HasRendererObject.h",
              "range": {
                "start": {
                  "line": 40,
                  "character": 0
                },
                "end": {
                  "line": 40,
                  "character": 67
                }
              },
              "preview": "explicit HasRendererObject() : _rendererObject(0), _dispose(0) {};"
            },
            {
              "name": "~HasRendererObject",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HasRendererObject.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 3
                }
              },
              "preview": "virtual ~HasRendererObject() {"
            },
            {
              "name": "getRendererObject",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HasRendererObject.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 55
                }
              },
              "preview": "void *getRendererObject() { return _rendererObject; }"
            },
            {
              "name": "setRendererObject",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HasRendererObject.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 3
                }
              },
              "preview": "void setRendererObject(void *rendererObject, DisposeRendererObject dispose = 0) {"
            },
            {
              "name": "_rendererObject",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HasRendererObject.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 23
                }
              },
              "preview": "void *_rendererObject;"
            },
            {
              "name": "_dispose",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HasRendererObject.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 32
                }
              },
              "preview": "DisposeRendererObject _dispose;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 197,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "HashMap",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
          "range": {
            "start": {
              "line": 45,
              "character": 0
            },
            "end": {
              "line": 196,
              "character": 2
            }
          },
          "preview": "class SP_API HashMap : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "Entry",
              "kind": "class",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 13
                }
              },
              "preview": "class Entry;",
              "supertypes": [
                "SpineObject"
              ]
            },
            {
              "name": "Pair",
              "kind": "class",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 3
                }
              },
              "preview": "class SP_API Pair {",
              "children": [
                {
                  "name": "Pair",
                  "kind": "constructor",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
                  "range": {
                    "start": {
                      "line": 52,
                      "character": 0
                    },
                    "end": {
                      "line": 52,
                      "character": 50
                    }
                  },
                  "preview": "explicit Pair(K &k, V &v) : key(k), value(v) {}"
                },
                {
                  "name": "key",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
                  "range": {
                    "start": {
                      "line": 54,
                      "character": 0
                    },
                    "end": {
                      "line": 54,
                      "character": 9
                    }
                  },
                  "preview": "K &key;"
                },
                {
                  "name": "value",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
                  "range": {
                    "start": {
                      "line": 55,
                      "character": 0
                    },
                    "end": {
                      "line": 55,
                      "character": 11
                    }
                  },
                  "preview": "V &value;"
                }
              ]
            },
            {
              "name": "Entries",
              "kind": "class",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 3
                }
              },
              "preview": "class SP_API Entries {",
              "children": [
                {
                  "name": "Entries",
                  "kind": "constructor",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
                  "range": {
                    "start": {
                      "line": 62,
                      "character": 0
                    },
                    "end": {
                      "line": 65,
                      "character": 4
                    }
                  },
                  "preview": "explicit Entries(Entry *entry) : _entry(NULL), _hasChecked(false) {"
                },
                {
                  "name": "next",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
                  "range": {
                    "start": {
                      "line": 67,
                      "character": 0
                    },
                    "end": {
                      "line": 74,
                      "character": 4
                    }
                  },
                  "preview": "Pair next() {"
                },
                {
                  "name": "hasNext",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
                  "range": {
                    "start": {
                      "line": 76,
                      "character": 0
                    },
                    "end": {
                      "line": 79,
                      "character": 4
                    }
                  },
                  "preview": "bool hasNext() {"
                },
                {
                  "name": "_hasChecked",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
                  "range": {
                    "start": {
                      "line": 82,
                      "character": 0
                    },
                    "end": {
                      "line": 82,
                      "character": 19
                    }
                  },
                  "preview": "bool _hasChecked;"
                },
                {
                  "name": "_start",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
                  "range": {
                    "start": {
                      "line": 83,
                      "character": 0
                    },
                    "end": {
                      "line": 83,
                      "character": 15
                    }
                  },
                  "preview": "Entry _start;"
                },
                {
                  "name": "_entry",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
                  "range": {
                    "start": {
                      "line": 84,
                      "character": 0
                    },
                    "end": {
                      "line": 84,
                      "character": 16
                    }
                  },
                  "preview": "Entry *_entry;"
                }
              ]
            },
            {
              "name": "HashMap",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 90,
                  "character": 3
                }
              },
              "preview": "HashMap() :"
            },
            {
              "name": "~HashMap",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
              "range": {
                "start": {
                  "line": 92,
                  "character": 0
                },
                "end": {
                  "line": 94,
                  "character": 3
                }
              },
              "preview": "~HashMap() {"
            },
            {
              "name": "clear",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
              "range": {
                "start": {
                  "line": 96,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 3
                }
              },
              "preview": "void clear() {"
            },
            {
              "name": "size",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
              "range": {
                "start": {
                  "line": 106,
                  "character": 0
                },
                "end": {
                  "line": 108,
                  "character": 3
                }
              },
              "preview": "size_t size() {"
            },
            {
              "name": "put",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
              "range": {
                "start": {
                  "line": 110,
                  "character": 0
                },
                "end": {
                  "line": 131,
                  "character": 3
                }
              },
              "preview": "void put(const K &key, const V &value) {"
            },
            {
              "name": "addAll",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
              "range": {
                "start": {
                  "line": 133,
                  "character": 0
                },
                "end": {
                  "line": 139,
                  "character": 3
                }
              },
              "preview": "bool addAll(Vector <K> &keys, const V &value) {"
            },
            {
              "name": "containsKey",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
              "range": {
                "start": {
                  "line": 141,
                  "character": 0
                },
                "end": {
                  "line": 143,
                  "character": 3
                }
              },
              "preview": "bool containsKey(const K &key) {"
            },
            {
              "name": "remove",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
              "range": {
                "start": {
                  "line": 145,
                  "character": 0
                },
                "end": {
                  "line": 160,
                  "character": 3
                }
              },
              "preview": "bool remove(const K &key) {"
            },
            {
              "name": "operator[]",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
              "range": {
                "start": {
                  "line": 162,
                  "character": 0
                },
                "end": {
                  "line": 169,
                  "character": 3
                }
              },
              "preview": "V operator[](const K &key) {"
            },
            {
              "name": "getEntries",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
              "range": {
                "start": {
                  "line": 171,
                  "character": 0
                },
                "end": {
                  "line": 173,
                  "character": 3
                }
              },
              "preview": "Entries getEntries() const {"
            },
            {
              "name": "find",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
              "range": {
                "start": {
                  "line": 176,
                  "character": 0
                },
                "end": {
                  "line": 182,
                  "character": 3
                }
              },
              "preview": "Entry *find(const K &key) {"
            },
            {
              "name": "Entry",
              "kind": "class",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
              "range": {
                "start": {
                  "line": 184,
                  "character": 0
                },
                "end": {
                  "line": 192,
                  "character": 3
                }
              },
              "preview": "class SP_API Entry : public SpineObject {",
              "supertypes": [
                "SpineObject"
              ],
              "children": [
                {
                  "name": "_key",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
                  "range": {
                    "start": {
                      "line": 186,
                      "character": 0
                    },
                    "end": {
                      "line": 186,
                      "character": 9
                    }
                  },
                  "preview": "K _key;"
                },
                {
                  "name": "_value",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
                  "range": {
                    "start": {
                      "line": 187,
                      "character": 0
                    },
                    "end": {
                      "line": 187,
                      "character": 11
                    }
                  },
                  "preview": "V _value;"
                },
                {
                  "name": "next",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
                  "range": {
                    "start": {
                      "line": 188,
                      "character": 0
                    },
                    "end": {
                      "line": 188,
                      "character": 14
                    }
                  },
                  "preview": "Entry *next;"
                },
                {
                  "name": "prev",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
                  "range": {
                    "start": {
                      "line": 189,
                      "character": 0
                    },
                    "end": {
                      "line": 189,
                      "character": 14
                    }
                  },
                  "preview": "Entry *prev;"
                },
                {
                  "name": "Entry",
                  "kind": "constructor",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
                  "range": {
                    "start": {
                      "line": 191,
                      "character": 0
                    },
                    "end": {
                      "line": 191,
                      "character": 38
                    }
                  },
                  "preview": "Entry() : next(NULL), prev(NULL) {}"
                }
              ]
            },
            {
              "name": "_head",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
              "range": {
                "start": {
                  "line": 194,
                  "character": 0
                },
                "end": {
                  "line": 194,
                  "character": 14
                }
              },
              "preview": "Entry *_head;"
            },
            {
              "name": "_size",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/HashMap.h",
              "range": {
                "start": {
                  "line": 195,
                  "character": 0
                },
                "end": {
                  "line": 195,
                  "character": 14
                }
              },
              "preview": "size_t _size;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 85,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "Bone",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 40,
              "character": 11
            }
          },
          "preview": "class Bone;"
        },
        {
          "name": "BonePose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 15
            }
          },
          "preview": "class BonePose;"
        },
        {
          "name": "IkConstraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 84,
              "character": 2
            }
          },
          "preview": "class SP_API IkConstraint : public ConstraintGeneric<IkConstraint, IkConstraintData, IkConstraintPose> {",
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
                  "range": {
                    "start": {
                      "line": 48,
                      "character": 0
                    },
                    "end": {
                      "line": 48,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
                  "range": {
                    "start": {
                      "line": 48,
                      "character": 0
                    },
                    "end": {
                      "line": 48,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "IkConstraint",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 58
                }
              },
              "preview": "IkConstraint(IkConstraintData &data, Skeleton &skeleton);"
            },
            {
              "name": "copy",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 48
                }
              },
              "preview": "virtual IkConstraint* copy(Skeleton& skeleton);"
            },
            {
              "name": "update",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
              "range": {
                "start": {
                  "line": 55,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 67
                }
              },
              "preview": "virtual void update(Skeleton& skeleton, Physics physics) override;"
            },
            {
              "name": "sort",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 48
                }
              },
              "preview": "virtual void sort(Skeleton& skeleton) override;"
            },
            {
              "name": "isSourceActive",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 40
                }
              },
              "preview": "virtual bool isSourceActive() override;"
            },
            {
              "name": "getData",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 29
                }
              },
              "preview": "IkConstraintData &getData();"
            },
            {
              "name": "getBones",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 32
                }
              },
              "preview": "Vector<BonePose *> &getBones();"
            },
            {
              "name": "getTarget",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 19
                }
              },
              "preview": "Bone *getTarget();"
            },
            {
              "name": "setTarget",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
              "range": {
                "start": {
                  "line": 67,
                  "character": 0
                },
                "end": {
                  "line": 67,
                  "character": 31
                }
              },
              "preview": "void setTarget(Bone *inValue);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 127
                }
              },
              "preview": "apply(Skeleton& skeleton, BonePose& bone, float targetX, float targetY, bool compress, bool stretch, bool uniform, float mix);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
              "range": {
                "start": {
                  "line": 78,
                  "character": 0
                },
                "end": {
                  "line": 79,
                  "character": 31
                }
              },
              "preview": "apply(Skeleton& skeleton, BonePose& parent, BonePose& child, float targetX, float targetY, int bendDirection, bool stretch, bool uniform,"
            },
            {
              "name": "_bones",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
              "range": {
                "start": {
                  "line": 82,
                  "character": 0
                },
                "end": {
                  "line": 82,
                  "character": 27
                }
              },
              "preview": "Vector<BonePose *> _bones;"
            },
            {
              "name": "_target",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraint.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 15
                }
              },
              "preview": "Bone *_target;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintData.h",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 79,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "BoneData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintData.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 40,
              "character": 15
            }
          },
          "preview": "class BoneData;"
        },
        {
          "name": "IkConstraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintData.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 19
            }
          },
          "preview": "class IkConstraint;"
        },
        {
          "name": "IkConstraintData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintData.h",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 78,
              "character": 2
            }
          },
          "preview": "class SP_API IkConstraintData : public ConstraintDataGeneric<IkConstraint, IkConstraintPose> {",
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintData.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 11
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintData.h",
                  "range": {
                    "start": {
                      "line": 54,
                      "character": 0
                    },
                    "end": {
                      "line": 54,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintData.h",
                  "range": {
                    "start": {
                      "line": 54,
                      "character": 0
                    },
                    "end": {
                      "line": 54,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "IkConstraintData",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintData.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 47
                }
              },
              "preview": "explicit IkConstraintData(const String &name);"
            },
            {
              "name": "create",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintData.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 57
                }
              },
              "preview": "virtual Constraint* create(Skeleton& skeleton) override;"
            },
            {
              "name": "getBones",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintData.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 32
                }
              },
              "preview": "Vector<BoneData *> &getBones();",
              "documentation": "The bones that are constrained by this IK Constraint."
            },
            {
              "name": "getTarget",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintData.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 23
                }
              },
              "preview": "BoneData *getTarget();",
              "documentation": "The bone that is the IK target."
            },
            {
              "name": "setTarget",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintData.h",
              "range": {
                "start": {
                  "line": 67,
                  "character": 0
                },
                "end": {
                  "line": 67,
                  "character": 35
                }
              },
              "preview": "void setTarget(BoneData *inValue);"
            },
            {
              "name": "getUniform",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintData.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 19
                }
              },
              "preview": "bool getUniform();",
              "documentation": "When true and IkConstraintPose compress or stretch is used, the bone is scaled on both the X and Y axes."
            },
            {
              "name": "setUniform",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintData.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 31
                }
              },
              "preview": "void setUniform(bool uniform);"
            },
            {
              "name": "_bones",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintData.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 27
                }
              },
              "preview": "Vector<BoneData *> _bones;"
            },
            {
              "name": "_target",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintData.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 19
                }
              },
              "preview": "BoneData *_target;"
            },
            {
              "name": "_uniform",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintData.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 15
                }
              },
              "preview": "bool _uniform;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 79,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "IkConstraintPose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 78,
              "character": 2
            }
          },
          "preview": "class SP_API IkConstraintPose : public Pose<IkConstraintPose> {",
          "documentation": "Stores the current pose for an IK constraint.",
          "children": [
            {
              "name": "IkConstraintPose",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 43,
                  "character": 0
                },
                "end": {
                  "line": 43,
                  "character": 20
                }
              },
              "preview": "IkConstraintPose();"
            },
            {
              "name": "~IkConstraintPose",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 29
                }
              },
              "preview": "virtual ~IkConstraintPose();"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 51
                }
              },
              "preview": "virtual void set(IkConstraintPose& pose) override;"
            },
            {
              "name": "getMix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 16
                }
              },
              "preview": "float getMix();",
              "documentation": "A percentage (0-1) that controls the mix between the constrained and unconstrained rotation.\nFor two bone IK: if the parent bone has local nonuniform scale, the child bone's local Y translation is set to 0."
            },
            {
              "name": "setMix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 24
                }
              },
              "preview": "void setMix(float mix);"
            },
            {
              "name": "getSoftness",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 21
                }
              },
              "preview": "float getSoftness();",
              "documentation": "For two bone IK, the target bone's distance from the maximum reach of the bones where rotation begins to slow. The bones\nwill not straighten completely until the target is this far out of range."
            },
            {
              "name": "setSoftness",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 34
                }
              },
              "preview": "void setSoftness(float softness);"
            },
            {
              "name": "getBendDirection",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 24
                }
              },
              "preview": "int getBendDirection();",
              "documentation": "For two bone IK, controls the bend direction of the IK bones, either 1 or -1."
            },
            {
              "name": "setBendDirection",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 42
                }
              },
              "preview": "void setBendDirection(int bendDirection);"
            },
            {
              "name": "getCompress",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 20
                }
              },
              "preview": "bool getCompress();",
              "documentation": "For one bone IK, when true and the target is too close, the bone is scaled to reach it."
            },
            {
              "name": "setCompress",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 33
                }
              },
              "preview": "void setCompress(bool compress);"
            },
            {
              "name": "getStretch",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 19
                }
              },
              "preview": "bool getStretch();",
              "documentation": "When true and the target is out of range, the parent bone is scaled to reach it.\nFor two bone IK: 1) the child bone's local Y translation is set to 0, 2) stretch is not applied if getSoftness() is\n> 0, and 3) if the parent bone has local nonuniform scale, stretch is not applied."
            },
            {
              "name": "setStretch",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 31
                }
              },
              "preview": "void setStretch(bool stretch);"
            },
            {
              "name": "_bendDirection",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 20
                }
              },
              "preview": "int _bendDirection;"
            },
            {
              "name": "_compress",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 16
                }
              },
              "preview": "bool _compress, _stretch;"
            },
            {
              "name": "_stretch",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 26
                }
              },
              "preview": "bool _compress, _stretch;"
            },
            {
              "name": "_mix",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 12
                }
              },
              "preview": "float _mix, _softness;"
            },
            {
              "name": "_softness",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintPose.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 23
                }
              },
              "preview": "float _mix, _softness;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintTimeline.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 67,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "IkConstraintTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintTimeline.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 66,
              "character": 2
            }
          },
          "preview": "class SP_API IkConstraintTimeline : public CurveTimeline, public ConstraintTimeline {",
          "supertypes": [
            "CurveTimeline",
            "ConstraintTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "IkConstraintTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 93
                }
              },
              "preview": "explicit IkConstraintTimeline(size_t frameCount, size_t bezierCount, int ikConstraintIndex);"
            },
            {
              "name": "~IkConstraintTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 33
                }
              },
              "preview": "virtual ~IkConstraintTimeline();"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 55
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            },
            {
              "name": "setFrame",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 113
                }
              },
              "preview": "void setFrame(int frame, float time, float mix, float softness, int bendDirection, bool compress, bool stretch);",
              "documentation": "Sets the time, mix, softness, bend direction, compress, and stretch for the specified frame.\n@param frame Between 0 and frameCount, inclusive.\n@param time The frame time in seconds.\n@param bendDirection 1 or -1."
            },
            {
              "name": "ENTRIES",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 30
                }
              },
              "preview": "static const int ENTRIES = 6;"
            },
            {
              "name": "MIX",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 26
                }
              },
              "preview": "static const int MIX = 1;"
            },
            {
              "name": "SOFTNESS",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 31
                }
              },
              "preview": "static const int SOFTNESS = 2;"
            },
            {
              "name": "BEND_DIRECTION",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 37
                }
              },
              "preview": "static const int BEND_DIRECTION = 3;"
            },
            {
              "name": "COMPRESS",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 31
                }
              },
              "preview": "static const int COMPRESS = 4;"
            },
            {
              "name": "STRETCH",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/IkConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 30
                }
              },
              "preview": "static const int STRETCH = 5;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Inherit.h",
      "range": {
        "start": {
          "line": 32,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Inherit",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Inherit.h",
          "range": {
            "start": {
              "line": 34,
              "character": 0
            },
            "end": {
              "line": 40,
              "character": 2
            }
          },
          "preview": "enum Inherit {",
          "documentation": "Determines how a bone inherits world transforms from parent bones.",
          "children": [
            {
              "name": "Inherit_Normal",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Inherit.h",
              "range": {
                "start": {
                  "line": 35,
                  "character": 0
                },
                "end": {
                  "line": 35,
                  "character": 20
                }
              },
              "preview": "Inherit_Normal = 0,"
            },
            {
              "name": "Inherit_OnlyTranslation",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Inherit.h",
              "range": {
                "start": {
                  "line": 36,
                  "character": 0
                },
                "end": {
                  "line": 36,
                  "character": 25
                }
              },
              "preview": "Inherit_OnlyTranslation,"
            },
            {
              "name": "Inherit_NoRotationOrReflection",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Inherit.h",
              "range": {
                "start": {
                  "line": 37,
                  "character": 0
                },
                "end": {
                  "line": 37,
                  "character": 32
                }
              },
              "preview": "Inherit_NoRotationOrReflection,"
            },
            {
              "name": "Inherit_NoScale",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Inherit.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 17
                }
              },
              "preview": "Inherit_NoScale,"
            },
            {
              "name": "Inherit_NoScaleOrReflection",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Inherit.h",
              "range": {
                "start": {
                  "line": 39,
                  "character": 0
                },
                "end": {
                  "line": 39,
                  "character": 29
                }
              },
              "preview": "Inherit_NoScaleOrReflection"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/InheritTimeline.h",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 65,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "InheritTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/InheritTimeline.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 64,
              "character": 2
            }
          },
          "preview": "class SP_API InheritTimeline : public Timeline, public BoneTimeline {",
          "supertypes": [
            "BoneTimeline",
            "Timeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/InheritTimeline.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/InheritTimeline.h",
                  "range": {
                    "start": {
                      "line": 45,
                      "character": 0
                    },
                    "end": {
                      "line": 45,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/InheritTimeline.h",
                  "range": {
                    "start": {
                      "line": 45,
                      "character": 0
                    },
                    "end": {
                      "line": 45,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "InheritTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/InheritTimeline.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 60
                }
              },
              "preview": "explicit InheritTimeline(size_t frameCount, int boneIndex);"
            },
            {
              "name": "~InheritTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/InheritTimeline.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 28
                }
              },
              "preview": "virtual ~InheritTimeline();"
            },
            {
              "name": "setFrame",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/InheritTimeline.h",
              "range": {
                "start": {
                  "line": 55,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 61
                }
              },
              "preview": "void setFrame(int frame, float time, Inherit inherit);",
              "documentation": "Sets the inherit transform mode for the specified frame.\n@param frame Between 0 and frameCount, inclusive.\n@param time The frame time in seconds."
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/InheritTimeline.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 46
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            },
            {
              "name": "ENTRIES",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/InheritTimeline.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 36
                }
              },
              "preview": "static const int ENTRIES = 2;"
            },
            {
              "name": "INHERIT",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/InheritTimeline.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 36
                }
              },
              "preview": "static const int INHERIT = 1;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 113,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Json",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 112,
              "character": 2
            }
          },
          "preview": "class SP_API Json : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "JSON_FALSE",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 29
                }
              },
              "preview": "static const int JSON_FALSE;",
              "documentation": "****************************************************************************\nSpine Runtimes License Agreement\nLast updated April 5, 2025. Replaces all prior versions.\nCopyright (c) 2013-2025, Esoteric Software LLC\nIntegration of the Spine Runtimes into software or otherwise creating\nderivative works of the Spine Runtimes is permitted under the terms and\nconditions of Section 2 of the Spine Editor License Agreement:\nhttp://esotericsoftware.com/spine-editor-license\nOtherwise, it is permitted to integrate the Spine Runtimes into software\nor otherwise create derivative works of the Spine Runtimes (collectively,\n\"Products\"), provided that each user of the Products must obtain their own\nSpine Editor license and redistribution of the Products in any form must\ninclude this license and copyright notice.\nTHE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\nBUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*****************************************************************************/\n#ifndef Spine_Json_h\n#define Spine_Json_h\n#include <spine/SpineObject.h>\n#ifndef SPINE_JSON_HAVE_PREV\n/* spine doesn't use the \"prev\" link in the Json sibling lists. */\n#define SPINE_JSON_HAVE_PREV 0\n#endif\nnamespace spine {\nclass SP_API Json : public SpineObject {\nfriend class SkeletonJson;\npublic:\n/* Json Types:"
            },
            {
              "name": "JSON_TRUE",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 28
                }
              },
              "preview": "static const int JSON_TRUE;"
            },
            {
              "name": "JSON_NULL",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 28
                }
              },
              "preview": "static const int JSON_NULL;"
            },
            {
              "name": "JSON_NUMBER",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 30
                }
              },
              "preview": "static const int JSON_NUMBER;"
            },
            {
              "name": "JSON_STRING",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 30
                }
              },
              "preview": "static const int JSON_STRING;"
            },
            {
              "name": "JSON_ARRAY",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 29
                }
              },
              "preview": "static const int JSON_ARRAY;"
            },
            {
              "name": "JSON_OBJECT",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 30
                }
              },
              "preview": "static const int JSON_OBJECT;"
            },
            {
              "name": "getItem",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 56
                }
              },
              "preview": "static Json *getItem(Json *object, const char *string);"
            },
            {
              "name": "getItem",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 52
                }
              },
              "preview": "static Json *getItem(Json *object, int childIndex);"
            },
            {
              "name": "getString",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 88
                }
              },
              "preview": "static const char *getString(Json *object, const char *name, const char *defaultValue);"
            },
            {
              "name": "getFloat",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 75
                }
              },
              "preview": "static float getFloat(Json *object, const char *name, float defaultValue);"
            },
            {
              "name": "getInt",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 69
                }
              },
              "preview": "static int getInt(Json *object, const char *name, int defaultValue);"
            },
            {
              "name": "getBoolean",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 75
                }
              },
              "preview": "static bool getBoolean(Json *object, const char *name, bool defaultValue);"
            },
            {
              "name": "getError",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 67,
                  "character": 0
                },
                "end": {
                  "line": 67,
                  "character": 31
                }
              },
              "preview": "static const char *getError();"
            },
            {
              "name": "Json",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 34
                }
              },
              "preview": "explicit Json(const char *value);"
            },
            {
              "name": "~Json",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 9
                }
              },
              "preview": "~Json();"
            },
            {
              "name": "_error",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 27
                }
              },
              "preview": "static const char *_error;"
            },
            {
              "name": "_next",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 78,
                  "character": 0
                },
                "end": {
                  "line": 78,
                  "character": 13
                }
              },
              "preview": "Json *_next;"
            },
            {
              "name": "_child",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 82,
                  "character": 0
                },
                "end": {
                  "line": 82,
                  "character": 14
                }
              },
              "preview": "Json *_child; /* An array or object item will have a child pointer pointing to a chain of the items in the array/object. */"
            },
            {
              "name": "_type",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 11
                }
              },
              "preview": "int _type; /* The type of the item, as above. */"
            },
            {
              "name": "_size",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 11
                }
              },
              "preview": "int _size; /* The number of children. */"
            },
            {
              "name": "_valueString",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 26
                }
              },
              "preview": "const char *_valueString; /* The item's string, if type==JSON_STRING */"
            },
            {
              "name": "_valueInt",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 88,
                  "character": 15
                }
              },
              "preview": "int _valueInt; /* The item's number, if type==JSON_NUMBER */"
            },
            {
              "name": "_valueFloat",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 89,
                  "character": 0
                },
                "end": {
                  "line": 89,
                  "character": 19
                }
              },
              "preview": "float _valueFloat; /* The item's number, if type==JSON_NUMBER */"
            },
            {
              "name": "_name",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 91,
                  "character": 0
                },
                "end": {
                  "line": 91,
                  "character": 19
                }
              },
              "preview": "const char *_name; /* The item's name string, if this item is the child of, or is in the list of subitems of an object. */"
            },
            {
              "name": "skip",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 94,
                  "character": 46
                }
              },
              "preview": "static const char *skip(const char *inValue);"
            },
            {
              "name": "parseValue",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 97,
                  "character": 0
                },
                "end": {
                  "line": 97,
                  "character": 62
                }
              },
              "preview": "static const char *parseValue(Json *item, const char *value);"
            },
            {
              "name": "parseString",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 100,
                  "character": 0
                },
                "end": {
                  "line": 100,
                  "character": 61
                }
              },
              "preview": "static const char *parseString(Json *item, const char *str);"
            },
            {
              "name": "parseNumber",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 61
                }
              },
              "preview": "static const char *parseNumber(Json *item, const char *num);"
            },
            {
              "name": "parseArray",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 106,
                  "character": 0
                },
                "end": {
                  "line": 106,
                  "character": 62
                }
              },
              "preview": "static const char *parseArray(Json *item, const char *value);"
            },
            {
              "name": "parseObject",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 109,
                  "character": 0
                },
                "end": {
                  "line": 109,
                  "character": 63
                }
              },
              "preview": "static const char *parseObject(Json *item, const char *value);"
            },
            {
              "name": "json_strcasecmp",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Json.h",
              "range": {
                "start": {
                  "line": 111,
                  "character": 0
                },
                "end": {
                  "line": 111,
                  "character": 60
                }
              },
              "preview": "static int json_strcasecmp(const char *s1, const char *s2);"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/LinkedMesh.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "MeshAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/LinkedMesh.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 21
            }
          },
          "preview": "class MeshAttachment;"
        },
        {
          "name": "LinkedMesh",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/LinkedMesh.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 57,
              "character": 2
            }
          },
          "preview": "class SP_API LinkedMesh : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "LinkedMesh",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/LinkedMesh.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 28
                }
              },
              "preview": "LinkedMesh(MeshAttachment *mesh, const int skinIndex, size_t slotIndex, const String &parent,"
            },
            {
              "name": "LinkedMesh",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/LinkedMesh.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 40
                }
              },
              "preview": "LinkedMesh(MeshAttachment *mesh, const String &skin, size_t slotIndex, const String &parent,"
            },
            {
              "name": "_mesh",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/LinkedMesh.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 23
                }
              },
              "preview": "MeshAttachment *_mesh;"
            },
            {
              "name": "_skinIndex",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/LinkedMesh.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 16
                }
              },
              "preview": "int _skinIndex;"
            },
            {
              "name": "_skin",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/LinkedMesh.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 20
                }
              },
              "preview": "String _skin;"
            },
            {
              "name": "_slotIndex",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/LinkedMesh.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 19
                }
              },
              "preview": "size_t _slotIndex;"
            },
            {
              "name": "_parent",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/LinkedMesh.h",
              "range": {
                "start": {
                  "line": 55,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 16
                }
              },
              "preview": "String _parent;"
            },
            {
              "name": "_inheritTimeline",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/LinkedMesh.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 23
                }
              },
              "preview": "bool _inheritTimeline;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Log.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 54,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "spDebug_printSkeletonData",
          "kind": "function",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Log.h",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 35,
              "character": 66
            }
          },
          "preview": "SP_API void spDebug_printSkeletonData(SkeletonData *skeletonData);"
        },
        {
          "name": "spDebug_printAnimation",
          "kind": "function",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Log.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 57
            }
          },
          "preview": "SP_API void spDebug_printAnimation(Animation *animation);"
        },
        {
          "name": "spDebug_printTimeline",
          "kind": "function",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Log.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 54
            }
          },
          "preview": "SP_API void spDebug_printTimeline(Timeline *timeline);"
        },
        {
          "name": "spDebug_printBoneDatas",
          "kind": "function",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Log.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 66
            }
          },
          "preview": "SP_API void spDebug_printBoneDatas(Vector<BoneData *> &boneDatas);"
        },
        {
          "name": "spDebug_printBoneData",
          "kind": "function",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Log.h",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 54
            }
          },
          "preview": "SP_API void spDebug_printBoneData(BoneData *boneData);"
        },
        {
          "name": "spDebug_printSkeleton",
          "kind": "function",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Log.h",
          "range": {
            "start": {
              "line": 45,
              "character": 0
            },
            "end": {
              "line": 45,
              "character": 54
            }
          },
          "preview": "SP_API void spDebug_printSkeleton(Skeleton *skeleton);"
        },
        {
          "name": "spDebug_printBones",
          "kind": "function",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Log.h",
          "range": {
            "start": {
              "line": 47,
              "character": 0
            },
            "end": {
              "line": 47,
              "character": 54
            }
          },
          "preview": "SP_API void spDebug_printBones(Vector<Bone *> &bones);"
        },
        {
          "name": "spDebug_printBone",
          "kind": "function",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Log.h",
          "range": {
            "start": {
              "line": 49,
              "character": 0
            },
            "end": {
              "line": 49,
              "character": 42
            }
          },
          "preview": "SP_API void spDebug_printBone(Bone *bone);"
        },
        {
          "name": "spDebug_printFloats",
          "kind": "function",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Log.h",
          "range": {
            "start": {
              "line": 51,
              "character": 0
            },
            "end": {
              "line": 51,
              "character": 62
            }
          },
          "preview": "SP_API void spDebug_printFloats(float *values, int numFloats);"
        },
        {
          "name": "spDebug_printFloats",
          "kind": "function",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Log.h",
          "range": {
            "start": {
              "line": 53,
              "character": 0
            },
            "end": {
              "line": 53,
              "character": 55
            }
          },
          "preview": "SP_API void spDebug_printFloats(Vector<float> &values);"
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 136,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "MathUtil",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 101,
              "character": 2
            }
          },
          "preview": "class SP_API MathUtil : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "MathUtil",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 43,
                  "character": 0
                },
                "end": {
                  "line": 43,
                  "character": 12
                }
              },
              "preview": "MathUtil();"
            },
            {
              "name": "Pi",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 23
                }
              },
              "preview": "static const float Pi;"
            },
            {
              "name": "Pi_2",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 25
                }
              },
              "preview": "static const float Pi_2;"
            },
            {
              "name": "InvPi_2",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 34
                }
              },
              "preview": "static const float InvPi_2;"
            },
            {
              "name": "Deg_Rad",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 28
                }
              },
              "preview": "static const float Deg_Rad;"
            },
            {
              "name": "Rad_Deg",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 28
                }
              },
              "preview": "static const float Rad_Deg;"
            },
            {
              "name": "min",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 57
                }
              },
              "preview": "static inline T min(T a, T b) { return a < b ? a : b; }"
            },
            {
              "name": "max",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 57
                }
              },
              "preview": "static inline T max(T a, T b) { return a > b ? a : b; }"
            },
            {
              "name": "sign",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 30
                }
              },
              "preview": "static float sign(float val);"
            },
            {
              "name": "clamp",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 55
                }
              },
              "preview": "static float clamp(float x, float lower, float upper);"
            },
            {
              "name": "abs",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 27
                }
              },
              "preview": "static float abs(float v);"
            },
            {
              "name": "sin",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 33
                }
              },
              "preview": "static float sin(float radians);",
              "documentation": "Returns the sine in radians from a lookup table."
            },
            {
              "name": "cos",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 33
                }
              },
              "preview": "static float cos(float radians);",
              "documentation": "Returns the cosine in radians from a lookup table."
            },
            {
              "name": "sinDeg",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 36
                }
              },
              "preview": "static float sinDeg(float degrees);",
              "documentation": "Returns the sine in radians from a lookup table."
            },
            {
              "name": "cosDeg",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 36
                }
              },
              "preview": "static float cosDeg(float degrees);",
              "documentation": "Returns the cosine in radians from a lookup table."
            },
            {
              "name": "atan2",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 78,
                  "character": 0
                },
                "end": {
                  "line": 78,
                  "character": 38
                }
              },
              "preview": "static float atan2(float y, float x);",
              "documentation": "Returns atan2 in radians, faster but less accurate than Math.Atan2. Average error of 0.00231 radians (0.1323\ndegrees), largest error of 0.00488 radians (0.2796 degrees)."
            },
            {
              "name": "atan2Deg",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 47
                }
              },
              "preview": "static float atan2Deg(float x, float y);"
            },
            {
              "name": "acos",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 82,
                  "character": 0
                },
                "end": {
                  "line": 82,
                  "character": 28
                }
              },
              "preview": "static float acos(float v);"
            },
            {
              "name": "sqrt",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 28
                }
              },
              "preview": "static float sqrt(float v);"
            },
            {
              "name": "fmod",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 86,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 37
                }
              },
              "preview": "static float fmod(float a, float b);"
            },
            {
              "name": "isNan",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 88,
                  "character": 28
                }
              },
              "preview": "static bool isNan(float v);"
            },
            {
              "name": "quietNan",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 90,
                  "character": 0
                },
                "end": {
                  "line": 90,
                  "character": 31
                }
              },
              "preview": "static float quietNan();"
            },
            {
              "name": "random",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 92,
                  "character": 0
                },
                "end": {
                  "line": 92,
                  "character": 23
                }
              },
              "preview": "static float random();"
            },
            {
              "name": "randomTriangular",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 94,
                  "character": 53
                }
              },
              "preview": "static float randomTriangular(float min, float max);"
            },
            {
              "name": "randomTriangular",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 96,
                  "character": 0
                },
                "end": {
                  "line": 96,
                  "character": 65
                }
              },
              "preview": "static float randomTriangular(float min, float max, float mode);"
            },
            {
              "name": "pow",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 98,
                  "character": 0
                },
                "end": {
                  "line": 98,
                  "character": 36
                }
              },
              "preview": "static float pow(float a, float b);"
            },
            {
              "name": "ceil",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 100,
                  "character": 0
                },
                "end": {
                  "line": 100,
                  "character": 34
                }
              },
              "preview": "static float ceil(float v);"
            }
          ]
        },
        {
          "name": "Interpolation",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
          "range": {
            "start": {
              "line": 103,
              "character": 0
            },
            "end": {
              "line": 111,
              "character": 2
            }
          },
          "preview": "struct SP_API Interpolation {",
          "children": [
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 34
                }
              },
              "preview": "virtual float apply(float a) = 0;"
            },
            {
              "name": "interpolate",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 106,
                  "character": 0
                },
                "end": {
                  "line": 108,
                  "character": 3
                }
              },
              "preview": "virtual float interpolate(float start, float end, float a) {"
            },
            {
              "name": "~Interpolation",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 110,
                  "character": 0
                },
                "end": {
                  "line": 110,
                  "character": 29
                }
              },
              "preview": "virtual ~Interpolation() {};"
            }
          ]
        },
        {
          "name": "PowInterpolation",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
          "range": {
            "start": {
              "line": 113,
              "character": 0
            },
            "end": {
              "line": 123,
              "character": 2
            }
          },
          "preview": "struct SP_API PowInterpolation : public Interpolation {",
          "supertypes": [
            "Interpolation"
          ],
          "children": [
            {
              "name": "PowInterpolation",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 114,
                  "character": 0
                },
                "end": {
                  "line": 115,
                  "character": 3
                }
              },
              "preview": "PowInterpolation(int power) : power(power) {"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 117,
                  "character": 0
                },
                "end": {
                  "line": 120,
                  "character": 3
                }
              },
              "preview": "float apply(float a) {"
            },
            {
              "name": "power",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 122,
                  "character": 0
                },
                "end": {
                  "line": 122,
                  "character": 11
                }
              },
              "preview": "int power;"
            }
          ]
        },
        {
          "name": "PowOutInterpolation",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
          "range": {
            "start": {
              "line": 125,
              "character": 0
            },
            "end": {
              "line": 134,
              "character": 2
            }
          },
          "preview": "struct SP_API PowOutInterpolation : public Interpolation {",
          "supertypes": [
            "Interpolation"
          ],
          "children": [
            {
              "name": "PowOutInterpolation",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 126,
                  "character": 0
                },
                "end": {
                  "line": 127,
                  "character": 3
                }
              },
              "preview": "PowOutInterpolation(int power) : power(power) {"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 129,
                  "character": 0
                },
                "end": {
                  "line": 131,
                  "character": 3
                }
              },
              "preview": "float apply(float a) {"
            },
            {
              "name": "power",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MathUtil.h",
              "range": {
                "start": {
                  "line": 133,
                  "character": 0
                },
                "end": {
                  "line": 133,
                  "character": 11
                }
              },
              "preview": "int power;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 119,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "MeshAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 118,
              "character": 2
            }
          },
          "preview": "class SP_API MeshAttachment : public VertexAttachment {",
          "documentation": "Attachment that displays a texture region using a mesh.",
          "supertypes": [
            "VertexAttachment"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
                  "range": {
                    "start": {
                      "line": 48,
                      "character": 0
                    },
                    "end": {
                      "line": 48,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
                  "range": {
                    "start": {
                      "line": 48,
                      "character": 0
                    },
                    "end": {
                      "line": 48,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "MeshAttachment",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 45
                }
              },
              "preview": "explicit MeshAttachment(const String &name);"
            },
            {
              "name": "~MeshAttachment",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 27
                }
              },
              "preview": "virtual ~MeshAttachment();"
            },
            {
              "name": "computeWorldVertices",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 55,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 46
                }
              },
              "preview": "using VertexAttachment::computeWorldVertices;"
            },
            {
              "name": "computeWorldVertices",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 29
                }
              },
              "preview": "virtual void computeWorldVertices(Skeleton &skeleton, Slot &slot, size_t start, size_t count, float *worldVertices, size_t offset,"
            },
            {
              "name": "updateRegion",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 21
                }
              },
              "preview": "void updateRegion();"
            },
            {
              "name": "getHullLength",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 21
                }
              },
              "preview": "int getHullLength();"
            },
            {
              "name": "setHullLength",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 33
                }
              },
              "preview": "void setHullLength(int inValue);"
            },
            {
              "name": "getRegionUVs",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 66,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 31
                }
              },
              "preview": "Vector<float> &getRegionUVs();"
            },
            {
              "name": "getUVs",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 25
                }
              },
              "preview": "Vector<float> &getUVs();",
              "documentation": "The UV pair for each vertex, normalized within the entire texture. See also MeshAttachment::updateRegion"
            },
            {
              "name": "getTriangles",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 40
                }
              },
              "preview": "Vector<unsigned short> &getTriangles();"
            },
            {
              "name": "getColor",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 19
                }
              },
              "preview": "Color &getColor();"
            },
            {
              "name": "getPath",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 25
                }
              },
              "preview": "const String &getPath();"
            },
            {
              "name": "setPath",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 37
                }
              },
              "preview": "void setPath(const String &inValue);"
            },
            {
              "name": "getRegion",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 79,
                  "character": 28
                }
              },
              "preview": "TextureRegion *getRegion();"
            },
            {
              "name": "setRegion",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 39
                }
              },
              "preview": "void setRegion(TextureRegion *region);"
            },
            {
              "name": "getSequence",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 25
                }
              },
              "preview": "Sequence *getSequence();"
            },
            {
              "name": "setSequence",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 38
                }
              },
              "preview": "void setSequence(Sequence *sequence);"
            },
            {
              "name": "getParentMesh",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 33
                }
              },
              "preview": "MeshAttachment *getParentMesh();"
            },
            {
              "name": "setParentMesh",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 89,
                  "character": 0
                },
                "end": {
                  "line": 89,
                  "character": 45
                }
              },
              "preview": "void setParentMesh(MeshAttachment *inValue);"
            },
            {
              "name": "getEdges",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 92,
                  "character": 0
                },
                "end": {
                  "line": 92,
                  "character": 36
                }
              },
              "preview": "Vector<unsigned short> &getEdges();"
            },
            {
              "name": "getWidth",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 94,
                  "character": 18
                }
              },
              "preview": "float getWidth();"
            },
            {
              "name": "setWidth",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 96,
                  "character": 0
                },
                "end": {
                  "line": 96,
                  "character": 30
                }
              },
              "preview": "void setWidth(float inValue);"
            },
            {
              "name": "getHeight",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 98,
                  "character": 0
                },
                "end": {
                  "line": 98,
                  "character": 19
                }
              },
              "preview": "float getHeight();"
            },
            {
              "name": "setHeight",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 100,
                  "character": 0
                },
                "end": {
                  "line": 100,
                  "character": 31
                }
              },
              "preview": "void setHeight(float inValue);"
            },
            {
              "name": "copy",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 102,
                  "character": 0
                },
                "end": {
                  "line": 102,
                  "character": 37
                }
              },
              "preview": "virtual Attachment *copy() override;"
            },
            {
              "name": "newLinkedMesh",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 33
                }
              },
              "preview": "MeshAttachment *newLinkedMesh();"
            },
            {
              "name": "_parentMesh",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 107,
                  "character": 0
                },
                "end": {
                  "line": 107,
                  "character": 29
                }
              },
              "preview": "MeshAttachment *_parentMesh;"
            },
            {
              "name": "_uvs",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 108,
                  "character": 0
                },
                "end": {
                  "line": 108,
                  "character": 20
                }
              },
              "preview": "Vector<float> _uvs;"
            },
            {
              "name": "_regionUVs",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 109,
                  "character": 0
                },
                "end": {
                  "line": 109,
                  "character": 26
                }
              },
              "preview": "Vector<float> _regionUVs;"
            },
            {
              "name": "_triangles",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 110,
                  "character": 0
                },
                "end": {
                  "line": 110,
                  "character": 35
                }
              },
              "preview": "Vector<unsigned short> _triangles;"
            },
            {
              "name": "_edges",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 111,
                  "character": 0
                },
                "end": {
                  "line": 111,
                  "character": 31
                }
              },
              "preview": "Vector<unsigned short> _edges;"
            },
            {
              "name": "_path",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 112,
                  "character": 0
                },
                "end": {
                  "line": 112,
                  "character": 14
                }
              },
              "preview": "String _path;"
            },
            {
              "name": "_color",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 113,
                  "character": 0
                },
                "end": {
                  "line": 113,
                  "character": 14
                }
              },
              "preview": "Color _color;"
            },
            {
              "name": "_hullLength",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 114,
                  "character": 0
                },
                "end": {
                  "line": 114,
                  "character": 17
                }
              },
              "preview": "int _hullLength;"
            },
            {
              "name": "_width",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 115,
                  "character": 0
                },
                "end": {
                  "line": 115,
                  "character": 12
                }
              },
              "preview": "int _width, _height;"
            },
            {
              "name": "_height",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 115,
                  "character": 0
                },
                "end": {
                  "line": 115,
                  "character": 21
                }
              },
              "preview": "int _width, _height;"
            },
            {
              "name": "_region",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 116,
                  "character": 0
                },
                "end": {
                  "line": 116,
                  "character": 24
                }
              },
              "preview": "TextureRegion *_region;"
            },
            {
              "name": "_sequence",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MeshAttachment.h",
              "range": {
                "start": {
                  "line": 117,
                  "character": 0
                },
                "end": {
                  "line": 117,
                  "character": 21
                }
              },
              "preview": "Sequence *_sequence;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MixBlend.h",
      "range": {
        "start": {
          "line": 32,
          "character": 0
        },
        "end": {
          "line": 62,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "MixBlend",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MixBlend.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 61,
              "character": 2
            }
          },
          "preview": "enum MixBlend {",
          "documentation": "Controls how timeline values are mixed with setup pose values or current pose values when a timeline is applied with\nalpha < 1.\nSee Timeline::apply().",
          "children": [
            {
              "name": "MixBlend_Setup",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MixBlend.h",
              "range": {
                "start": {
                  "line": 43,
                  "character": 0
                },
                "end": {
                  "line": 43,
                  "character": 20
                }
              },
              "preview": "MixBlend_Setup = 0,",
              "documentation": "Transitions between the setup and timeline values (the current value is not used). Before the first frame, the setup\nvalue is used.\nMixBlend_Setup is intended to transition to or from the setup pose, not for animations layered on top of others."
            },
            {
              "name": "MixBlend_First",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MixBlend.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 16
                }
              },
              "preview": "MixBlend_First,",
              "documentation": "Transitions between the current and timeline values. Before the first frame, transitions between the current and setup\nvalues. Timelines which perform instant transitions, such as DrawOrderTimeline or AttachmentTimeline, use\nthe setup value before the first frame.\nMixBlend_First is intended for the first animations applied, not for animations layered on top of others."
            },
            {
              "name": "MixBlend_Replace",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MixBlend.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 18
                }
              },
              "preview": "MixBlend_Replace,",
              "documentation": "Transitions between the current and timeline values. No change is made before the first frame.\nMixBlend_Replace is intended for animations layered on top of others, not for the first animations applied."
            },
            {
              "name": "MixBlend_Add",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MixBlend.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 14
                }
              },
              "preview": "MixBlend_Add",
              "documentation": "Transitions between the current value and the current plus timeline values. No change is made before the first frame.\nMixBlend_Add is intended for animations layered on top of others, not for the first animations applied.\nProperties set by additive animations must be set manually or by another animation before applying the additive\nanimations, else the property values will increase each time the additive animations are applied."
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MixDirection.h",
      "range": {
        "start": {
          "line": 32,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "MixDirection",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MixDirection.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 2
            }
          },
          "preview": "enum MixDirection {",
          "documentation": "Indicates whether a timeline's alpha is mixing out over time toward 0 (the setup or current pose value) or\nmixing in toward 1 (the timeline's value). Some timelines use this to decide how values are applied.\nSee Timeline::apply().",
          "children": [
            {
              "name": "MixDirection_In",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MixDirection.h",
              "range": {
                "start": {
                  "line": 39,
                  "character": 0
                },
                "end": {
                  "line": 39,
                  "character": 21
                }
              },
              "preview": "MixDirection_In = 0,"
            },
            {
              "name": "MixDirection_Out",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/MixDirection.h",
              "range": {
                "start": {
                  "line": 40,
                  "character": 0
                },
                "end": {
                  "line": 40,
                  "character": 18
                }
              },
              "preview": "MixDirection_Out"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathAttachment.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 67,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "PathAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathAttachment.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 66,
              "character": 2
            }
          },
          "preview": "class SP_API PathAttachment : public VertexAttachment {",
          "supertypes": [
            "VertexAttachment"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathAttachment.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathAttachment.h",
                  "range": {
                    "start": {
                      "line": 41,
                      "character": 0
                    },
                    "end": {
                      "line": 41,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathAttachment.h",
                  "range": {
                    "start": {
                      "line": 41,
                      "character": 0
                    },
                    "end": {
                      "line": 41,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "PathAttachment",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathAttachment.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 45
                }
              },
              "preview": "explicit PathAttachment(const String &name);"
            },
            {
              "name": "getLengths",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathAttachment.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 29
                }
              },
              "preview": "Vector<float> &getLengths();",
              "documentation": "The length in the setup pose from the start of the path to the end of each curve."
            },
            {
              "name": "isClosed",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathAttachment.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 17
                }
              },
              "preview": "bool isClosed();"
            },
            {
              "name": "setClosed",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathAttachment.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 30
                }
              },
              "preview": "void setClosed(bool inValue);"
            },
            {
              "name": "isConstantSpeed",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathAttachment.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 24
                }
              },
              "preview": "bool isConstantSpeed();"
            },
            {
              "name": "setConstantSpeed",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathAttachment.h",
              "range": {
                "start": {
                  "line": 55,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 37
                }
              },
              "preview": "void setConstantSpeed(bool inValue);"
            },
            {
              "name": "getColor",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathAttachment.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 19
                }
              },
              "preview": "Color &getColor();"
            },
            {
              "name": "copy",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathAttachment.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 37
                }
              },
              "preview": "virtual Attachment *copy() override;"
            },
            {
              "name": "_lengths",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathAttachment.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 24
                }
              },
              "preview": "Vector<float> _lengths;"
            },
            {
              "name": "_closed",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathAttachment.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 14
                }
              },
              "preview": "bool _closed;"
            },
            {
              "name": "_constantSpeed",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathAttachment.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 21
                }
              },
              "preview": "bool _constantSpeed;"
            },
            {
              "name": "_color",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathAttachment.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 14
                }
              },
              "preview": "Color _color;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 111,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "PathAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 40,
              "character": 21
            }
          },
          "preview": "class PathAttachment;"
        },
        {
          "name": "BonePose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 15
            }
          },
          "preview": "class BonePose;"
        },
        {
          "name": "Slot",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 11
            }
          },
          "preview": "class Slot;"
        },
        {
          "name": "Bone",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 11
            }
          },
          "preview": "class Bone;"
        },
        {
          "name": "Skin",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 44,
              "character": 11
            }
          },
          "preview": "class Skin;"
        },
        {
          "name": "Attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
          "range": {
            "start": {
              "line": 45,
              "character": 0
            },
            "end": {
              "line": 45,
              "character": 17
            }
          },
          "preview": "class Attachment;"
        },
        {
          "name": "PathConstraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
          "range": {
            "start": {
              "line": 51,
              "character": 0
            },
            "end": {
              "line": 110,
              "character": 2
            }
          },
          "preview": "class SP_API PathConstraint : public ConstraintGeneric<PathConstraint, PathConstraintData, PathConstraintPose> {",
          "documentation": "Stores the current pose for a path constraint. A path constraint adjusts the rotation, translation, and scale of the\nconstrained bones so they follow a PathAttachment.\nSee https://esotericsoftware.com/spine-path-constraints Path constraints in the Spine User Guide.",
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 11
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
                  "range": {
                    "start": {
                      "line": 58,
                      "character": 0
                    },
                    "end": {
                      "line": 58,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
                  "range": {
                    "start": {
                      "line": 58,
                      "character": 0
                    },
                    "end": {
                      "line": 58,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "epsilon",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 28
                }
              },
              "preview": "static const float epsilon;"
            },
            {
              "name": "NONE",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 23
                }
              },
              "preview": "static const int NONE, BEFORE, AFTER;"
            },
            {
              "name": "BEFORE",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 31
                }
              },
              "preview": "static const int NONE, BEFORE, AFTER;"
            },
            {
              "name": "AFTER",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 38
                }
              },
              "preview": "static const int NONE, BEFORE, AFTER;"
            },
            {
              "name": "PathConstraint",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 62
                }
              },
              "preview": "PathConstraint(PathConstraintData &data, Skeleton &skeleton);"
            },
            {
              "name": "copy",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 66,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 42
                }
              },
              "preview": "PathConstraint* copy(Skeleton &skeleton);"
            },
            {
              "name": "update",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 67
                }
              },
              "preview": "virtual void update(Skeleton& skeleton, Physics physics) override;",
              "documentation": "Applies the constraint to the constrained bones."
            },
            {
              "name": "sort",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 48
                }
              },
              "preview": "virtual void sort(Skeleton& skeleton) override;"
            },
            {
              "name": "isSourceActive",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 40
                }
              },
              "preview": "virtual bool isSourceActive() override;"
            },
            {
              "name": "getBones",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 32
                }
              },
              "preview": "Vector<BonePose *> &getBones();",
              "documentation": "The bones that will be modified by this path constraint."
            },
            {
              "name": "getSlot",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 79,
                  "character": 17
                }
              },
              "preview": "Slot *getSlot();",
              "documentation": "The slot whose path attachment will be used to constrained the bones."
            },
            {
              "name": "setSlot",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 26
                }
              },
              "preview": "void setSlot(Slot *slot);"
            },
            {
              "name": "getData",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 31
                }
              },
              "preview": "PathConstraintData &getData();"
            },
            {
              "name": "_bones",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 88,
                  "character": 27
                }
              },
              "preview": "Vector<BonePose *> _bones;"
            },
            {
              "name": "_slot",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 89,
                  "character": 0
                },
                "end": {
                  "line": 89,
                  "character": 13
                }
              },
              "preview": "Slot *_slot;"
            },
            {
              "name": "_spaces",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 91,
                  "character": 0
                },
                "end": {
                  "line": 91,
                  "character": 23
                }
              },
              "preview": "Vector<float> _spaces;"
            },
            {
              "name": "_positions",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 92,
                  "character": 0
                },
                "end": {
                  "line": 92,
                  "character": 26
                }
              },
              "preview": "Vector<float> _positions;"
            },
            {
              "name": "_world",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 93,
                  "character": 0
                },
                "end": {
                  "line": 93,
                  "character": 22
                }
              },
              "preview": "Vector<float> _world;"
            },
            {
              "name": "_curves",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 94,
                  "character": 23
                }
              },
              "preview": "Vector<float> _curves;"
            },
            {
              "name": "_lengths",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 95,
                  "character": 0
                },
                "end": {
                  "line": 95,
                  "character": 24
                }
              },
              "preview": "Vector<float> _lengths;"
            },
            {
              "name": "_segments",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 96,
                  "character": 0
                },
                "end": {
                  "line": 96,
                  "character": 25
                }
              },
              "preview": "Vector<float> _segments;"
            },
            {
              "name": "computeWorldPositions",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 98,
                  "character": 0
                },
                "end": {
                  "line": 98,
                  "character": 112
                }
              },
              "preview": "Vector<float> &computeWorldPositions(Skeleton& skeleton, PathAttachment &path, int spacesCount, bool tangents);"
            },
            {
              "name": "addBeforePosition",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 100,
                  "character": 0
                },
                "end": {
                  "line": 100,
                  "character": 91
                }
              },
              "preview": "void addBeforePosition(float p, Vector<float> &temp, int i, Vector<float> &output, int o);"
            },
            {
              "name": "addAfterPosition",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 102,
                  "character": 0
                },
                "end": {
                  "line": 102,
                  "character": 90
                }
              },
              "preview": "void addAfterPosition(float p, Vector<float> &temp, int i, Vector<float> &output, int o);"
            },
            {
              "name": "addCurvePosition",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 105,
                  "character": 51
                }
              },
              "preview": "void addCurvePosition(float p, float x1, float y1, float cx1, float cy1, float cx2, float cy2, float x2, float y2,"
            },
            {
              "name": "sortPathSlot",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 107,
                  "character": 0
                },
                "end": {
                  "line": 107,
                  "character": 82
                }
              },
              "preview": "void sortPathSlot(Skeleton& skeleton, Skin& skin, int slotIndex, Bone& slotBone);"
            },
            {
              "name": "sortPath",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraint.h",
              "range": {
                "start": {
                  "line": 109,
                  "character": 0
                },
                "end": {
                  "line": 109,
                  "character": 75
                }
              },
              "preview": "void sortPath(Skeleton& skeleton, Attachment* attachment, Bone& slotBone);"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 109,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "BoneData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 15
            }
          },
          "preview": "class BoneData;"
        },
        {
          "name": "SlotData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 15
            }
          },
          "preview": "class SlotData;"
        },
        {
          "name": "PathConstraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 44,
              "character": 21
            }
          },
          "preview": "class PathConstraint;"
        },
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
          "range": {
            "start": {
              "line": 45,
              "character": 0
            },
            "end": {
              "line": 45,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "PathConstraintData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
          "range": {
            "start": {
              "line": 50,
              "character": 0
            },
            "end": {
              "line": 108,
              "character": 2
            }
          },
          "preview": "class SP_API PathConstraintData : public ConstraintDataGeneric<PathConstraint, PathConstraintPose> {",
          "documentation": "Stores the setup pose for a PathConstraint.\nSee https://esotericsoftware.com/spine-path-constraints Path constraints in the Spine User Guide.",
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 11
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
                  "range": {
                    "start": {
                      "line": 65,
                      "character": 0
                    },
                    "end": {
                      "line": 65,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
                  "range": {
                    "start": {
                      "line": 65,
                      "character": 0
                    },
                    "end": {
                      "line": 65,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "PathConstraintData",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 49
                }
              },
              "preview": "explicit PathConstraintData(const String &name);"
            },
            {
              "name": "create",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 57
                }
              },
              "preview": "virtual Constraint* create(Skeleton& skeleton) override;"
            },
            {
              "name": "getBones",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 32
                }
              },
              "preview": "Vector<BoneData *> &getBones();",
              "documentation": "The bones that will be modified by this path constraint."
            },
            {
              "name": "getSlot",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 21
                }
              },
              "preview": "SlotData *getSlot();",
              "documentation": "The slot whose path attachment will be used to constrained the bones."
            },
            {
              "name": "setSlot",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 79,
                  "character": 30
                }
              },
              "preview": "void setSlot(SlotData *slot);"
            },
            {
              "name": "getPositionMode",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 82,
                  "character": 0
                },
                "end": {
                  "line": 82,
                  "character": 32
                }
              },
              "preview": "PositionMode getPositionMode();",
              "documentation": "The mode for positioning the first bone on the path."
            },
            {
              "name": "setPositionMode",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 49
                }
              },
              "preview": "void setPositionMode(PositionMode positionMode);"
            },
            {
              "name": "getSpacingMode",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 30
                }
              },
              "preview": "SpacingMode getSpacingMode();",
              "documentation": "The mode for positioning the bones after the first bone on the path."
            },
            {
              "name": "setSpacingMode",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 89,
                  "character": 0
                },
                "end": {
                  "line": 89,
                  "character": 46
                }
              },
              "preview": "void setSpacingMode(SpacingMode spacingMode);"
            },
            {
              "name": "getRotateMode",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 92,
                  "character": 0
                },
                "end": {
                  "line": 92,
                  "character": 28
                }
              },
              "preview": "RotateMode getRotateMode();",
              "documentation": "The mode for adjusting the rotation of the bones."
            },
            {
              "name": "setRotateMode",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 94,
                  "character": 43
                }
              },
              "preview": "void setRotateMode(RotateMode rotateMode);"
            },
            {
              "name": "getOffsetRotation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 97,
                  "character": 0
                },
                "end": {
                  "line": 97,
                  "character": 27
                }
              },
              "preview": "float getOffsetRotation();",
              "documentation": "An offset added to the constrained bone rotation."
            },
            {
              "name": "setOffsetRotation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 99,
                  "character": 0
                },
                "end": {
                  "line": 99,
                  "character": 46
                }
              },
              "preview": "void setOffsetRotation(float offsetRotation);"
            },
            {
              "name": "_bones",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 102,
                  "character": 0
                },
                "end": {
                  "line": 102,
                  "character": 27
                }
              },
              "preview": "Vector<BoneData *> _bones;"
            },
            {
              "name": "_slot",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 17
                }
              },
              "preview": "SlotData *_slot;"
            },
            {
              "name": "_positionMode",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 28
                }
              },
              "preview": "PositionMode _positionMode;"
            },
            {
              "name": "_spacingMode",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 105,
                  "character": 0
                },
                "end": {
                  "line": 105,
                  "character": 26
                }
              },
              "preview": "SpacingMode _spacingMode;"
            },
            {
              "name": "_rotateMode",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 106,
                  "character": 0
                },
                "end": {
                  "line": 106,
                  "character": 24
                }
              },
              "preview": "RotateMode _rotateMode;"
            },
            {
              "name": "_offsetRotation",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintData.h",
              "range": {
                "start": {
                  "line": 107,
                  "character": 0
                },
                "end": {
                  "line": 107,
                  "character": 23
                }
              },
              "preview": "float _offsetRotation;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintMixTimeline.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 64,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "PathConstraintMixTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintMixTimeline.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 63,
              "character": 2
            }
          },
          "preview": "class SP_API PathConstraintMixTimeline : public CurveTimeline, public ConstraintTimeline {",
          "supertypes": [
            "CurveTimeline",
            "ConstraintTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintMixTimeline.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintMixTimeline.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintMixTimeline.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "PathConstraintMixTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintMixTimeline.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 100
                }
              },
              "preview": "explicit PathConstraintMixTimeline(size_t frameCount, size_t bezierCount, int pathConstraintIndex);"
            },
            {
              "name": "~PathConstraintMixTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintMixTimeline.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 38
                }
              },
              "preview": "virtual ~PathConstraintMixTimeline();"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintMixTimeline.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 46
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            },
            {
              "name": "setFrame",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintMixTimeline.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 79
                }
              },
              "preview": "void setFrame(int frame, float time, float mixRotate, float mixX, float mixY);",
              "documentation": "Sets the time and color for the specified frame.\n@param frame Between 0 and frameCount, inclusive.\n@param time The frame time in seconds."
            },
            {
              "name": "ENTRIES",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintMixTimeline.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 30
                }
              },
              "preview": "static const int ENTRIES = 4;"
            },
            {
              "name": "ROTATE",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintMixTimeline.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 29
                }
              },
              "preview": "static const int ROTATE = 1;"
            },
            {
              "name": "X",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintMixTimeline.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 24
                }
              },
              "preview": "static const int X = 2;"
            },
            {
              "name": "Y",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintMixTimeline.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 24
                }
              },
              "preview": "static const int Y = 3;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 76,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "PathConstraintPose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 75,
              "character": 5
            }
          },
          "preview": "class SP_API PathConstraintPose : public Pose<PathConstraintPose> {",
          "documentation": "Stores a pose for a path constraint.",
          "children": [
            {
              "name": "_position",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 23
                }
              },
              "preview": "float _position;"
            },
            {
              "name": "_spacing",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 22
                }
              },
              "preview": "float _spacing;"
            },
            {
              "name": "_mixRotate",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 24
                }
              },
              "preview": "float _mixRotate;"
            },
            {
              "name": "_mixX",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 19
                }
              },
              "preview": "float _mixX;"
            },
            {
              "name": "_mixY",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 19
                }
              },
              "preview": "float _mixY;"
            },
            {
              "name": "PathConstraintPose",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 28
                }
              },
              "preview": "PathConstraintPose();"
            },
            {
              "name": "~PathConstraintPose",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 37
                }
              },
              "preview": "virtual ~PathConstraintPose();"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 59
                }
              },
              "preview": "virtual void set(PathConstraintPose& pose) override;"
            },
            {
              "name": "getPosition",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 27
                }
              },
              "preview": "float getPosition();",
              "documentation": "The position along the path."
            },
            {
              "name": "setPosition",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 40
                }
              },
              "preview": "void setPosition(float position);"
            },
            {
              "name": "getSpacing",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 26
                }
              },
              "preview": "float getSpacing();",
              "documentation": "The spacing between bones."
            },
            {
              "name": "setSpacing",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 38
                }
              },
              "preview": "void setSpacing(float spacing);"
            },
            {
              "name": "getMixRotate",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 28
                }
              },
              "preview": "float getMixRotate();",
              "documentation": "A percentage (0-1) that controls the mix between the constrained and unconstrained rotation."
            },
            {
              "name": "setMixRotate",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 66,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 42
                }
              },
              "preview": "void setMixRotate(float mixRotate);"
            },
            {
              "name": "getMixX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 23
                }
              },
              "preview": "float getMixX();",
              "documentation": "A percentage (0-1) that controls the mix between the constrained and unconstrained translation X."
            },
            {
              "name": "setMixX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 32
                }
              },
              "preview": "void setMixX(float mixX);"
            },
            {
              "name": "getMixY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 23
                }
              },
              "preview": "float getMixY();",
              "documentation": "A percentage (0-1) that controls the mix between the constrained and unconstrained translation Y."
            },
            {
              "name": "setMixY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPose.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 32
                }
              },
              "preview": "void setMixY(float mixY);"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPositionTimeline.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 54,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "PathConstraintPositionTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPositionTimeline.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 53,
              "character": 2
            }
          },
          "preview": "class SP_API PathConstraintPositionTimeline : public ConstraintTimeline1 {",
          "supertypes": [
            "ConstraintTimeline1"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPositionTimeline.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPositionTimeline.h",
                  "range": {
                    "start": {
                      "line": 41,
                      "character": 0
                    },
                    "end": {
                      "line": 41,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPositionTimeline.h",
                  "range": {
                    "start": {
                      "line": 41,
                      "character": 0
                    },
                    "end": {
                      "line": 41,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "ENTRIES",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPositionTimeline.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 26
                }
              },
              "preview": "static const int ENTRIES;"
            },
            {
              "name": "PathConstraintPositionTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPositionTimeline.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 105
                }
              },
              "preview": "explicit PathConstraintPositionTimeline(size_t frameCount, size_t bezierCount, int pathConstraintIndex);"
            },
            {
              "name": "~PathConstraintPositionTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPositionTimeline.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 43
                }
              },
              "preview": "virtual ~PathConstraintPositionTimeline();"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintPositionTimeline.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 46
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintSpacingTimeline.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 52,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "PathConstraintSpacingTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintSpacingTimeline.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 51,
              "character": 2
            }
          },
          "preview": "class SP_API PathConstraintSpacingTimeline : public ConstraintTimeline1 {",
          "documentation": "Changes a path constraint's PathConstraintPose::getSpacing().",
          "supertypes": [
            "ConstraintTimeline1"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintSpacingTimeline.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintSpacingTimeline.h",
                  "range": {
                    "start": {
                      "line": 41,
                      "character": 0
                    },
                    "end": {
                      "line": 41,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintSpacingTimeline.h",
                  "range": {
                    "start": {
                      "line": 41,
                      "character": 0
                    },
                    "end": {
                      "line": 41,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "PathConstraintSpacingTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintSpacingTimeline.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 104
                }
              },
              "preview": "explicit PathConstraintSpacingTimeline(size_t frameCount, size_t bezierCount, int pathConstraintIndex);"
            },
            {
              "name": "~PathConstraintSpacingTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintSpacingTimeline.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 42
                }
              },
              "preview": "virtual ~PathConstraintSpacingTimeline();"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PathConstraintSpacingTimeline.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 46
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Physics.h",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 47,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "documentation": "Determines how physics and other non-deterministic updates are applied.",
      "children": [
        {
          "name": "Physics",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Physics.h",
          "range": {
            "start": {
              "line": 34,
              "character": 0
            },
            "end": {
              "line": 46,
              "character": 5
            }
          },
          "preview": "enum Physics {",
          "children": [
            {
              "name": "Physics_None",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Physics.h",
              "range": {
                "start": {
                  "line": 36,
                  "character": 0
                },
                "end": {
                  "line": 36,
                  "character": 20
                }
              },
              "preview": "Physics_None,",
              "documentation": "Physics are not updated or applied."
            },
            {
              "name": "Physics_Reset",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Physics.h",
              "range": {
                "start": {
                  "line": 39,
                  "character": 0
                },
                "end": {
                  "line": 39,
                  "character": 21
                }
              },
              "preview": "Physics_Reset,",
              "documentation": "Physics are reset to the current pose."
            },
            {
              "name": "Physics_Update",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Physics.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 22
                }
              },
              "preview": "Physics_Update,",
              "documentation": "Physics are updated and the pose from physics is applied."
            },
            {
              "name": "Physics_Pose",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Physics.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 20
                }
              },
              "preview": "Physics_Pose",
              "documentation": "Physics are not updated but the pose from physics is applied."
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 91,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "BonePose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 40,
              "character": 15
            }
          },
          "preview": "class BonePose;",
          "supertypes": [
            "Update",
            "BoneLocal"
          ]
        },
        {
          "name": "PhysicsConstraintPose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 28
            }
          },
          "preview": "class PhysicsConstraintPose;"
        },
        {
          "name": "PhysicsConstraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
          "range": {
            "start": {
              "line": 46,
              "character": 0
            },
            "end": {
              "line": 90,
              "character": 2
            }
          },
          "preview": "class SP_API PhysicsConstraint : public ConstraintGeneric<PhysicsConstraint, PhysicsConstraintData, PhysicsConstraintPose> {",
          "documentation": "Stores the current pose for a physics constraint. A physics constraint applies physics to bones.\nSee https://esotericsoftware.com/spine-physics-constraints Physics constraints in the Spine User Guide.",
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 11
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
                  "range": {
                    "start": {
                      "line": 59,
                      "character": 0
                    },
                    "end": {
                      "line": 59,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
                  "range": {
                    "start": {
                      "line": 59,
                      "character": 0
                    },
                    "end": {
                      "line": 59,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "PhysicsConstraint",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 68
                }
              },
              "preview": "PhysicsConstraint(PhysicsConstraintData& data, Skeleton& skeleton);"
            },
            {
              "name": "update",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 59
                }
              },
              "preview": "void update(Skeleton& skeleton, Physics physics) override;"
            },
            {
              "name": "sort",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 40
                }
              },
              "preview": "void sort(Skeleton& skeleton) override;"
            },
            {
              "name": "isSourceActive",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 32
                }
              },
              "preview": "bool isSourceActive() override;"
            },
            {
              "name": "copy",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 66,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 45
                }
              },
              "preview": "PhysicsConstraint* copy(Skeleton& skeleton);"
            },
            {
              "name": "reset",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 32
                }
              },
              "preview": "void reset(Skeleton& skeleton);"
            },
            {
              "name": "translate",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 34
                }
              },
              "preview": "void translate(float x, float y);",
              "documentation": "Translates the physics constraint so next update() forces are applied as if the bone moved an additional amount in world space."
            },
            {
              "name": "rotate",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 46
                }
              },
              "preview": "void rotate(float x, float y, float degrees);",
              "documentation": "Rotates the physics constraint so next update() forces are applied as if the bone rotated around the specified point in world space."
            },
            {
              "name": "getBone",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 21
                }
              },
              "preview": "BonePose& getBone();",
              "documentation": "The bone constrained by this physics constraint."
            },
            {
              "name": "setBone",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 78,
                  "character": 0
                },
                "end": {
                  "line": 78,
                  "character": 30
                }
              },
              "preview": "void setBone(BonePose& bone);"
            },
            {
              "name": "_bone",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 17
                }
              },
              "preview": "BonePose* _bone;"
            },
            {
              "name": "_reset",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 13
                }
              },
              "preview": "bool _reset;"
            },
            {
              "name": "_ux",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 11
                }
              },
              "preview": "float _ux, _uy, _cx, _cy, _tx, _ty;"
            },
            {
              "name": "_uy",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 16
                }
              },
              "preview": "float _ux, _uy, _cx, _cy, _tx, _ty;"
            },
            {
              "name": "_cx",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 21
                }
              },
              "preview": "float _ux, _uy, _cx, _cy, _tx, _ty;"
            },
            {
              "name": "_cy",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 26
                }
              },
              "preview": "float _ux, _uy, _cx, _cy, _tx, _ty;"
            },
            {
              "name": "_tx",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 31
                }
              },
              "preview": "float _ux, _uy, _cx, _cy, _tx, _ty;"
            },
            {
              "name": "_ty",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 36
                }
              },
              "preview": "float _ux, _uy, _cx, _cy, _tx, _ty;"
            },
            {
              "name": "_xOffset",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 16
                }
              },
              "preview": "float _xOffset, _xLag, _xVelocity;"
            },
            {
              "name": "_xLag",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 23
                }
              },
              "preview": "float _xOffset, _xLag, _xVelocity;"
            },
            {
              "name": "_xVelocity",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 35
                }
              },
              "preview": "float _xOffset, _xLag, _xVelocity;"
            },
            {
              "name": "_yOffset",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 86,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 16
                }
              },
              "preview": "float _yOffset, _yLag, _yVelocity;"
            },
            {
              "name": "_yLag",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 86,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 23
                }
              },
              "preview": "float _yOffset, _yLag, _yVelocity;"
            },
            {
              "name": "_yVelocity",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 86,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 35
                }
              },
              "preview": "float _yOffset, _yLag, _yVelocity;"
            },
            {
              "name": "_rotateOffset",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 21
                }
              },
              "preview": "float _rotateOffset, _rotateLag, _rotateVelocity;"
            },
            {
              "name": "_rotateLag",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 33
                }
              },
              "preview": "float _rotateOffset, _rotateLag, _rotateVelocity;"
            },
            {
              "name": "_rotateVelocity",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 50
                }
              },
              "preview": "float _rotateOffset, _rotateLag, _rotateVelocity;"
            },
            {
              "name": "_scaleOffset",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 88,
                  "character": 20
                }
              },
              "preview": "float _scaleOffset, _scaleLag, _scaleVelocity;"
            },
            {
              "name": "_scaleLag",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 88,
                  "character": 31
                }
              },
              "preview": "float _scaleOffset, _scaleLag, _scaleVelocity;"
            },
            {
              "name": "_scaleVelocity",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 88,
                  "character": 47
                }
              },
              "preview": "float _scaleOffset, _scaleLag, _scaleVelocity;"
            },
            {
              "name": "_remaining",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 89,
                  "character": 0
                },
                "end": {
                  "line": 89,
                  "character": 18
                }
              },
              "preview": "float _remaining, _lastTime;"
            },
            {
              "name": "_lastTime",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraint.h",
              "range": {
                "start": {
                  "line": 89,
                  "character": 0
                },
                "end": {
                  "line": 89,
                  "character": 29
                }
              },
              "preview": "float _remaining, _lastTime;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 106,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "BoneData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 15
            }
          },
          "preview": "class BoneData;"
        },
        {
          "name": "PhysicsConstraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 24
            }
          },
          "preview": "class PhysicsConstraint;"
        },
        {
          "name": "PhysicsConstraintData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 105,
              "character": 2
            }
          },
          "preview": "class SP_API PhysicsConstraintData : public ConstraintDataGeneric<PhysicsConstraint, PhysicsConstraintPose> {",
          "documentation": "Stores the setup pose for a PhysicsConstraint.\nSee https://esotericsoftware.com/spine-physics-constraints Physics constraints in the Spine User Guide.",
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 11
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
                  "range": {
                    "start": {
                      "line": 49,
                      "character": 0
                    },
                    "end": {
                      "line": 49,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
                  "range": {
                    "start": {
                      "line": 49,
                      "character": 0
                    },
                    "end": {
                      "line": 49,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "PhysicsConstraintData",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 52
                }
              },
              "preview": "explicit PhysicsConstraintData(const String &name);"
            },
            {
              "name": "create",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 57
                }
              },
              "preview": "virtual Constraint* create(Skeleton& skeleton) override;"
            },
            {
              "name": "getBone",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 21
                }
              },
              "preview": "BoneData* getBone();",
              "documentation": "The bone constrained by this physics constraint."
            },
            {
              "name": "setBone",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 30
                }
              },
              "preview": "void setBone(BoneData* bone);"
            },
            {
              "name": "getStep",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 17
                }
              },
              "preview": "float getStep();"
            },
            {
              "name": "setStep",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 26
                }
              },
              "preview": "void setStep(float step);"
            },
            {
              "name": "getX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 14
                }
              },
              "preview": "float getX();"
            },
            {
              "name": "setX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 20
                }
              },
              "preview": "void setX(float x);"
            },
            {
              "name": "getY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 14
                }
              },
              "preview": "float getY();"
            },
            {
              "name": "setY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 66,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 20
                }
              },
              "preview": "void setY(float y);"
            },
            {
              "name": "getRotate",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 19
                }
              },
              "preview": "float getRotate();"
            },
            {
              "name": "setRotate",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 30
                }
              },
              "preview": "void setRotate(float rotate);"
            },
            {
              "name": "getScaleX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 19
                }
              },
              "preview": "float getScaleX();"
            },
            {
              "name": "setScaleX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 30
                }
              },
              "preview": "void setScaleX(float scaleX);"
            },
            {
              "name": "getShearX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 19
                }
              },
              "preview": "float getShearX();"
            },
            {
              "name": "setShearX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 30
                }
              },
              "preview": "void setShearX(float shearX);"
            },
            {
              "name": "getLimit",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 18
                }
              },
              "preview": "float getLimit();"
            },
            {
              "name": "setLimit",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 78,
                  "character": 0
                },
                "end": {
                  "line": 78,
                  "character": 28
                }
              },
              "preview": "void setLimit(float limit);"
            },
            {
              "name": "getInertiaGlobal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 25
                }
              },
              "preview": "bool getInertiaGlobal();"
            },
            {
              "name": "setInertiaGlobal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 43
                }
              },
              "preview": "void setInertiaGlobal(bool inertiaGlobal);"
            },
            {
              "name": "getStrengthGlobal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 26
                }
              },
              "preview": "bool getStrengthGlobal();"
            },
            {
              "name": "setStrengthGlobal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 45
                }
              },
              "preview": "void setStrengthGlobal(bool strengthGlobal);"
            },
            {
              "name": "getDampingGlobal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 86,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 25
                }
              },
              "preview": "bool getDampingGlobal();"
            },
            {
              "name": "setDampingGlobal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 43
                }
              },
              "preview": "void setDampingGlobal(bool dampingGlobal);"
            },
            {
              "name": "getMassGlobal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 89,
                  "character": 0
                },
                "end": {
                  "line": 89,
                  "character": 22
                }
              },
              "preview": "bool getMassGlobal();"
            },
            {
              "name": "setMassGlobal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 90,
                  "character": 0
                },
                "end": {
                  "line": 90,
                  "character": 37
                }
              },
              "preview": "void setMassGlobal(bool massGlobal);"
            },
            {
              "name": "getWindGlobal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 92,
                  "character": 0
                },
                "end": {
                  "line": 92,
                  "character": 22
                }
              },
              "preview": "bool getWindGlobal();"
            },
            {
              "name": "setWindGlobal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 93,
                  "character": 0
                },
                "end": {
                  "line": 93,
                  "character": 37
                }
              },
              "preview": "void setWindGlobal(bool windGlobal);"
            },
            {
              "name": "getGravityGlobal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 95,
                  "character": 0
                },
                "end": {
                  "line": 95,
                  "character": 25
                }
              },
              "preview": "bool getGravityGlobal();"
            },
            {
              "name": "setGravityGlobal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 96,
                  "character": 0
                },
                "end": {
                  "line": 96,
                  "character": 43
                }
              },
              "preview": "void setGravityGlobal(bool gravityGlobal);"
            },
            {
              "name": "getMixGlobal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 98,
                  "character": 0
                },
                "end": {
                  "line": 98,
                  "character": 21
                }
              },
              "preview": "bool getMixGlobal();"
            },
            {
              "name": "setMixGlobal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 99,
                  "character": 0
                },
                "end": {
                  "line": 99,
                  "character": 35
                }
              },
              "preview": "void setMixGlobal(bool mixGlobal);"
            },
            {
              "name": "_bone",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 102,
                  "character": 0
                },
                "end": {
                  "line": 102,
                  "character": 17
                }
              },
              "preview": "BoneData* _bone;"
            },
            {
              "name": "_x",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 10
                }
              },
              "preview": "float _x, _y, _rotate, _scaleX, _shearX, _limit, _step;"
            },
            {
              "name": "_y",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 14
                }
              },
              "preview": "float _x, _y, _rotate, _scaleX, _shearX, _limit, _step;"
            },
            {
              "name": "_rotate",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 23
                }
              },
              "preview": "float _x, _y, _rotate, _scaleX, _shearX, _limit, _step;"
            },
            {
              "name": "_scaleX",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 32
                }
              },
              "preview": "float _x, _y, _rotate, _scaleX, _shearX, _limit, _step;"
            },
            {
              "name": "_shearX",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 41
                }
              },
              "preview": "float _x, _y, _rotate, _scaleX, _shearX, _limit, _step;"
            },
            {
              "name": "_limit",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 49
                }
              },
              "preview": "float _x, _y, _rotate, _scaleX, _shearX, _limit, _step;"
            },
            {
              "name": "_step",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 56
                }
              },
              "preview": "float _x, _y, _rotate, _scaleX, _shearX, _limit, _step;"
            },
            {
              "name": "_inertiaGlobal",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 21
                }
              },
              "preview": "bool _inertiaGlobal, _strengthGlobal, _dampingGlobal, _massGlobal, _windGlobal, _gravityGlobal, _mixGlobal;"
            },
            {
              "name": "_strengthGlobal",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 38
                }
              },
              "preview": "bool _inertiaGlobal, _strengthGlobal, _dampingGlobal, _massGlobal, _windGlobal, _gravityGlobal, _mixGlobal;"
            },
            {
              "name": "_dampingGlobal",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 54
                }
              },
              "preview": "bool _inertiaGlobal, _strengthGlobal, _dampingGlobal, _massGlobal, _windGlobal, _gravityGlobal, _mixGlobal;"
            },
            {
              "name": "_massGlobal",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 67
                }
              },
              "preview": "bool _inertiaGlobal, _strengthGlobal, _dampingGlobal, _massGlobal, _windGlobal, _gravityGlobal, _mixGlobal;"
            },
            {
              "name": "_windGlobal",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 80
                }
              },
              "preview": "bool _inertiaGlobal, _strengthGlobal, _dampingGlobal, _massGlobal, _windGlobal, _gravityGlobal, _mixGlobal;"
            },
            {
              "name": "_gravityGlobal",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 96
                }
              },
              "preview": "bool _inertiaGlobal, _strengthGlobal, _dampingGlobal, _massGlobal, _windGlobal, _gravityGlobal, _mixGlobal;"
            },
            {
              "name": "_mixGlobal",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintData.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 108
                }
              },
              "preview": "bool _inertiaGlobal, _strengthGlobal, _dampingGlobal, _massGlobal, _windGlobal, _gravityGlobal, _mixGlobal;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 78,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "PhysicsConstraintPose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 77,
              "character": 5
            }
          },
          "preview": "class SP_API PhysicsConstraintPose : public Pose<PhysicsConstraintPose> {",
          "documentation": "Stores a pose for a physics constraint.",
          "children": [
            {
              "name": "_inertia",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 22
                }
              },
              "preview": "float _inertia;"
            },
            {
              "name": "_strength",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 43,
                  "character": 0
                },
                "end": {
                  "line": 43,
                  "character": 23
                }
              },
              "preview": "float _strength;"
            },
            {
              "name": "_damping",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 22
                }
              },
              "preview": "float _damping;"
            },
            {
              "name": "_massInverse",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 26
                }
              },
              "preview": "float _massInverse;"
            },
            {
              "name": "_wind",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 19
                }
              },
              "preview": "float _wind;"
            },
            {
              "name": "_gravity",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 22
                }
              },
              "preview": "float _gravity;"
            },
            {
              "name": "_mix",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 18
                }
              },
              "preview": "float _mix;"
            },
            {
              "name": "PhysicsConstraintPose",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 31
                }
              },
              "preview": "PhysicsConstraintPose();"
            },
            {
              "name": "~PhysicsConstraintPose",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 40
                }
              },
              "preview": "virtual ~PhysicsConstraintPose();"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 62
                }
              },
              "preview": "virtual void set(PhysicsConstraintPose& pose) override;"
            },
            {
              "name": "getInertia",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 26
                }
              },
              "preview": "float getInertia();"
            },
            {
              "name": "setInertia",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 38
                }
              },
              "preview": "void setInertia(float inertia);"
            },
            {
              "name": "getStrength",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 27
                }
              },
              "preview": "float getStrength();"
            },
            {
              "name": "setStrength",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 40
                }
              },
              "preview": "void setStrength(float strength);"
            },
            {
              "name": "getDamping",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 26
                }
              },
              "preview": "float getDamping();"
            },
            {
              "name": "setDamping",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 38
                }
              },
              "preview": "void setDamping(float damping);"
            },
            {
              "name": "getMassInverse",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 30
                }
              },
              "preview": "float getMassInverse();"
            },
            {
              "name": "setMassInverse",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 66,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 46
                }
              },
              "preview": "void setMassInverse(float massInverse);"
            },
            {
              "name": "getWind",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 23
                }
              },
              "preview": "float getWind();"
            },
            {
              "name": "setWind",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 32
                }
              },
              "preview": "void setWind(float wind);"
            },
            {
              "name": "getGravity",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 26
                }
              },
              "preview": "float getGravity();"
            },
            {
              "name": "setGravity",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 38
                }
              },
              "preview": "void setGravity(float gravity);"
            },
            {
              "name": "getMix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 22
                }
              },
              "preview": "float getMix();",
              "documentation": "A percentage (0-1) that controls the mix between the constrained and unconstrained poses."
            },
            {
              "name": "setMix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintPose.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 30
                }
              },
              "preview": "void setMix(float mix);"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 257,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "PhysicsConstraintTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 61,
              "character": 2
            }
          },
          "preview": "class SP_API PhysicsConstraintTimeline : public CurveTimeline1, public ConstraintTimeline {",
          "supertypes": [
            "ConstraintTimeline",
            "CurveTimeline1"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 45,
                      "character": 0
                    },
                    "end": {
                      "line": 45,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 45,
                      "character": 0
                    },
                    "end": {
                      "line": 45,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "PhysicsConstraintTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 122
                }
              },
              "preview": "explicit PhysicsConstraintTimeline(size_t frameCount, size_t bezierCount, int physicsConstraintIndex, Property property);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 55
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            },
            {
              "name": "get",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 55,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 58
                }
              },
              "preview": "virtual float get(PhysicsConstraintPose &pose) = 0;"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 70
                }
              },
              "preview": "virtual void set(PhysicsConstraintPose &pose, float value) = 0;"
            },
            {
              "name": "global",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 70
                }
              },
              "preview": "virtual bool global(PhysicsConstraintData &constraintData) = 0;"
            },
            {
              "name": "_constraintIndex",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 22
                }
              },
              "preview": "int _constraintIndex;"
            }
          ]
        },
        {
          "name": "PhysicsConstraintInertiaTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
          "range": {
            "start": {
              "line": 63,
              "character": 0
            },
            "end": {
              "line": 85,
              "character": 5
            }
          },
          "preview": "class SP_API PhysicsConstraintInertiaTimeline : public PhysicsConstraintTimeline {",
          "supertypes": [
            "PhysicsConstraintTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 13
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 68,
                      "character": 0
                    },
                    "end": {
                      "line": 68,
                      "character": 13
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 68,
                      "character": 0
                    },
                    "end": {
                      "line": 68,
                      "character": 13
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "PhysicsConstraintInertiaTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 230
                }
              },
              "preview": "explicit PhysicsConstraintInertiaTimeline(size_t frameCount, size_t bezierCount, int physicsConstraintIndex): PhysicsConstraintTimeline(frameCount, bezierCount, physicsConstraintIndex, Property_PhysicsConstraintInertia) {};"
            },
            {
              "name": "get",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 9
                }
              },
              "preview": "float get(PhysicsConstraintPose &pose) override {"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 78,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 9
                }
              },
              "preview": "void set(PhysicsConstraintPose &pose, float value) override {"
            },
            {
              "name": "global",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 82,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 9
                }
              },
              "preview": "bool global(PhysicsConstraintData &constraintData) override {"
            }
          ]
        },
        {
          "name": "PhysicsConstraintStrengthTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
          "range": {
            "start": {
              "line": 87,
              "character": 0
            },
            "end": {
              "line": 109,
              "character": 5
            }
          },
          "preview": "class SP_API PhysicsConstraintStrengthTimeline : public PhysicsConstraintTimeline {",
          "supertypes": [
            "PhysicsConstraintTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 92,
                  "character": 0
                },
                "end": {
                  "line": 92,
                  "character": 13
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 92,
                      "character": 0
                    },
                    "end": {
                      "line": 92,
                      "character": 13
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 92,
                      "character": 0
                    },
                    "end": {
                      "line": 92,
                      "character": 13
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "PhysicsConstraintStrengthTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 95,
                  "character": 0
                },
                "end": {
                  "line": 95,
                  "character": 232
                }
              },
              "preview": "explicit PhysicsConstraintStrengthTimeline(size_t frameCount, size_t bezierCount, int physicsConstraintIndex): PhysicsConstraintTimeline(frameCount, bezierCount, physicsConstraintIndex, Property_PhysicsConstraintStrength) {};"
            },
            {
              "name": "get",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 98,
                  "character": 0
                },
                "end": {
                  "line": 100,
                  "character": 9
                }
              },
              "preview": "float get(PhysicsConstraintPose &pose) override {"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 102,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 9
                }
              },
              "preview": "void set(PhysicsConstraintPose &pose, float value) override {"
            },
            {
              "name": "global",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 106,
                  "character": 0
                },
                "end": {
                  "line": 108,
                  "character": 9
                }
              },
              "preview": "bool global(PhysicsConstraintData &constraintData) override {"
            }
          ]
        },
        {
          "name": "PhysicsConstraintDampingTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
          "range": {
            "start": {
              "line": 111,
              "character": 0
            },
            "end": {
              "line": 133,
              "character": 5
            }
          },
          "preview": "class SP_API PhysicsConstraintDampingTimeline : public PhysicsConstraintTimeline {",
          "supertypes": [
            "PhysicsConstraintTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 116,
                  "character": 0
                },
                "end": {
                  "line": 116,
                  "character": 13
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 116,
                      "character": 0
                    },
                    "end": {
                      "line": 116,
                      "character": 13
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 116,
                      "character": 0
                    },
                    "end": {
                      "line": 116,
                      "character": 13
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "PhysicsConstraintDampingTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 119,
                  "character": 0
                },
                "end": {
                  "line": 119,
                  "character": 230
                }
              },
              "preview": "explicit PhysicsConstraintDampingTimeline(size_t frameCount, size_t bezierCount, int physicsConstraintIndex): PhysicsConstraintTimeline(frameCount, bezierCount, physicsConstraintIndex, Property_PhysicsConstraintDamping) {};"
            },
            {
              "name": "get",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 122,
                  "character": 0
                },
                "end": {
                  "line": 124,
                  "character": 9
                }
              },
              "preview": "float get(PhysicsConstraintPose &pose) override {"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 126,
                  "character": 0
                },
                "end": {
                  "line": 128,
                  "character": 9
                }
              },
              "preview": "void set(PhysicsConstraintPose &pose, float value) override {"
            },
            {
              "name": "global",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 132,
                  "character": 9
                }
              },
              "preview": "bool global(PhysicsConstraintData &constraintData) override {"
            }
          ]
        },
        {
          "name": "PhysicsConstraintMassTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
          "range": {
            "start": {
              "line": 135,
              "character": 0
            },
            "end": {
              "line": 157,
              "character": 5
            }
          },
          "preview": "class SP_API PhysicsConstraintMassTimeline : public PhysicsConstraintTimeline {",
          "supertypes": [
            "PhysicsConstraintTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 140,
                  "character": 0
                },
                "end": {
                  "line": 140,
                  "character": 13
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 140,
                      "character": 0
                    },
                    "end": {
                      "line": 140,
                      "character": 13
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 140,
                      "character": 0
                    },
                    "end": {
                      "line": 140,
                      "character": 13
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "PhysicsConstraintMassTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 143,
                  "character": 0
                },
                "end": {
                  "line": 143,
                  "character": 224
                }
              },
              "preview": "explicit PhysicsConstraintMassTimeline(size_t frameCount, size_t bezierCount, int physicsConstraintIndex): PhysicsConstraintTimeline(frameCount, bezierCount, physicsConstraintIndex, Property_PhysicsConstraintMass) {};"
            },
            {
              "name": "get",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 146,
                  "character": 0
                },
                "end": {
                  "line": 148,
                  "character": 9
                }
              },
              "preview": "float get(PhysicsConstraintPose &pose) override {"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 150,
                  "character": 0
                },
                "end": {
                  "line": 152,
                  "character": 9
                }
              },
              "preview": "void set(PhysicsConstraintPose &pose, float value) override {"
            },
            {
              "name": "global",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 154,
                  "character": 0
                },
                "end": {
                  "line": 156,
                  "character": 9
                }
              },
              "preview": "bool global(PhysicsConstraintData &constraintData) override {"
            }
          ]
        },
        {
          "name": "PhysicsConstraintWindTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
          "range": {
            "start": {
              "line": 159,
              "character": 0
            },
            "end": {
              "line": 181,
              "character": 5
            }
          },
          "preview": "class SP_API PhysicsConstraintWindTimeline : public PhysicsConstraintTimeline {",
          "supertypes": [
            "PhysicsConstraintTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 164,
                  "character": 0
                },
                "end": {
                  "line": 164,
                  "character": 13
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 164,
                      "character": 0
                    },
                    "end": {
                      "line": 164,
                      "character": 13
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 164,
                      "character": 0
                    },
                    "end": {
                      "line": 164,
                      "character": 13
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "PhysicsConstraintWindTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 167,
                  "character": 0
                },
                "end": {
                  "line": 167,
                  "character": 224
                }
              },
              "preview": "explicit PhysicsConstraintWindTimeline(size_t frameCount, size_t bezierCount, int physicsConstraintIndex): PhysicsConstraintTimeline(frameCount, bezierCount, physicsConstraintIndex, Property_PhysicsConstraintWind) {};"
            },
            {
              "name": "get",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 170,
                  "character": 0
                },
                "end": {
                  "line": 172,
                  "character": 9
                }
              },
              "preview": "float get(PhysicsConstraintPose &pose) override {"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 174,
                  "character": 0
                },
                "end": {
                  "line": 176,
                  "character": 9
                }
              },
              "preview": "void set(PhysicsConstraintPose &pose, float value) override {"
            },
            {
              "name": "global",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 178,
                  "character": 0
                },
                "end": {
                  "line": 180,
                  "character": 9
                }
              },
              "preview": "bool global(PhysicsConstraintData &constraintData) override {"
            }
          ]
        },
        {
          "name": "PhysicsConstraintGravityTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
          "range": {
            "start": {
              "line": 183,
              "character": 0
            },
            "end": {
              "line": 205,
              "character": 5
            }
          },
          "preview": "class SP_API PhysicsConstraintGravityTimeline : public PhysicsConstraintTimeline {",
          "supertypes": [
            "PhysicsConstraintTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 188,
                  "character": 0
                },
                "end": {
                  "line": 188,
                  "character": 13
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 188,
                      "character": 0
                    },
                    "end": {
                      "line": 188,
                      "character": 13
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 188,
                      "character": 0
                    },
                    "end": {
                      "line": 188,
                      "character": 13
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "PhysicsConstraintGravityTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 191,
                  "character": 0
                },
                "end": {
                  "line": 191,
                  "character": 230
                }
              },
              "preview": "explicit PhysicsConstraintGravityTimeline(size_t frameCount, size_t bezierCount, int physicsConstraintIndex): PhysicsConstraintTimeline(frameCount, bezierCount, physicsConstraintIndex, Property_PhysicsConstraintGravity) {};"
            },
            {
              "name": "get",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 194,
                  "character": 0
                },
                "end": {
                  "line": 196,
                  "character": 9
                }
              },
              "preview": "float get(PhysicsConstraintPose &pose) override {"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 198,
                  "character": 0
                },
                "end": {
                  "line": 200,
                  "character": 9
                }
              },
              "preview": "void set(PhysicsConstraintPose &pose, float value) override {"
            },
            {
              "name": "global",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 202,
                  "character": 0
                },
                "end": {
                  "line": 204,
                  "character": 9
                }
              },
              "preview": "bool global(PhysicsConstraintData &constraintData) override {"
            }
          ]
        },
        {
          "name": "PhysicsConstraintMixTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
          "range": {
            "start": {
              "line": 207,
              "character": 0
            },
            "end": {
              "line": 229,
              "character": 5
            }
          },
          "preview": "class SP_API PhysicsConstraintMixTimeline : public PhysicsConstraintTimeline {",
          "supertypes": [
            "PhysicsConstraintTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 212,
                  "character": 0
                },
                "end": {
                  "line": 212,
                  "character": 13
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 212,
                      "character": 0
                    },
                    "end": {
                      "line": 212,
                      "character": 13
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 212,
                      "character": 0
                    },
                    "end": {
                      "line": 212,
                      "character": 13
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "PhysicsConstraintMixTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 215,
                  "character": 0
                },
                "end": {
                  "line": 215,
                  "character": 222
                }
              },
              "preview": "explicit PhysicsConstraintMixTimeline(size_t frameCount, size_t bezierCount, int physicsConstraintIndex): PhysicsConstraintTimeline(frameCount, bezierCount, physicsConstraintIndex, Property_PhysicsConstraintMix) {};"
            },
            {
              "name": "get",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 218,
                  "character": 0
                },
                "end": {
                  "line": 220,
                  "character": 9
                }
              },
              "preview": "float get(PhysicsConstraintPose &pose) override {"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 222,
                  "character": 0
                },
                "end": {
                  "line": 224,
                  "character": 9
                }
              },
              "preview": "void set(PhysicsConstraintPose &pose, float value) override {"
            },
            {
              "name": "global",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 226,
                  "character": 0
                },
                "end": {
                  "line": 228,
                  "character": 9
                }
              },
              "preview": "bool global(PhysicsConstraintData &constraintData) override {"
            }
          ]
        },
        {
          "name": "PhysicsConstraintResetTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
          "range": {
            "start": {
              "line": 231,
              "character": 0
            },
            "end": {
              "line": 256,
              "character": 5
            }
          },
          "preview": "class SP_API PhysicsConstraintResetTimeline : public Timeline, public ConstraintTimeline {",
          "supertypes": [
            "Timeline",
            "ConstraintTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 236,
                  "character": 0
                },
                "end": {
                  "line": 236,
                  "character": 13
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 236,
                      "character": 0
                    },
                    "end": {
                      "line": 236,
                      "character": 13
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 236,
                      "character": 0
                    },
                    "end": {
                      "line": 236,
                      "character": 13
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "PhysicsConstraintResetTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 239,
                  "character": 0
                },
                "end": {
                  "line": 242,
                  "character": 9
                }
              },
              "preview": "explicit PhysicsConstraintResetTimeline(size_t frameCount, int physicsConstraintIndex): Timeline(frameCount, 1), ConstraintTimeline(physicsConstraintIndex) {"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 245,
                  "character": 0
                },
                "end": {
                  "line": 246,
                  "character": 64
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            },
            {
              "name": "getFrameCount",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 248,
                  "character": 0
                },
                "end": {
                  "line": 248,
                  "character": 59
                }
              },
              "preview": "int getFrameCount() { return (int)_frames.size(); }"
            },
            {
              "name": "setFrame",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 251,
                  "character": 0
                },
                "end": {
                  "line": 253,
                  "character": 9
                }
              },
              "preview": "void setFrame(int frame, float time) {",
              "documentation": "Sets the time for the specified frame."
            },
            {
              "name": "_constraintIndex",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PhysicsConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 255,
                  "character": 0
                },
                "end": {
                  "line": 255,
                  "character": 28
                }
              },
              "preview": "int _constraintIndex;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 79,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Bone",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 11
            }
          },
          "preview": "class Bone;"
        },
        {
          "name": "BonePose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 15
            }
          },
          "preview": "class BonePose;"
        },
        {
          "name": "PointAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
          "range": {
            "start": {
              "line": 45,
              "character": 0
            },
            "end": {
              "line": 78,
              "character": 2
            }
          },
          "preview": "class SP_API PointAttachment : public Attachment {",
          "documentation": "An attachment which is a single point and a rotation. This can be used to spawn projectiles, particles, etc. A bone can be\nused in similar ways, but a PointAttachment is slightly less expensive to compute and can be hidden, shown, and placed in a\nskin.\nSee https://esotericsoftware.com/spine-points for Point Attachments in the Spine User Guide.",
          "supertypes": [
            "Attachment"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
                  "range": {
                    "start": {
                      "line": 50,
                      "character": 0
                    },
                    "end": {
                      "line": 50,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
                  "range": {
                    "start": {
                      "line": 50,
                      "character": 0
                    },
                    "end": {
                      "line": 50,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "PointAttachment",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 46
                }
              },
              "preview": "explicit PointAttachment(const String &name);"
            },
            {
              "name": "getX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
              "range": {
                "start": {
                  "line": 55,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 14
                }
              },
              "preview": "float getX();"
            },
            {
              "name": "setX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 26
                }
              },
              "preview": "void setX(float inValue);"
            },
            {
              "name": "getY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 14
                }
              },
              "preview": "float getY();"
            },
            {
              "name": "setY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 26
                }
              },
              "preview": "void setY(float inValue);"
            },
            {
              "name": "getRotation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 21
                }
              },
              "preview": "float getRotation();"
            },
            {
              "name": "setRotation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 33
                }
              },
              "preview": "void setRotation(float inValue);"
            },
            {
              "name": "getColor",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
              "range": {
                "start": {
                  "line": 67,
                  "character": 0
                },
                "end": {
                  "line": 67,
                  "character": 19
                }
              },
              "preview": "Color &getColor();"
            },
            {
              "name": "computeWorldPosition",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 65
                }
              },
              "preview": "void computeWorldPosition(BonePose &bone, float &ox, float &oy);"
            },
            {
              "name": "computeWorldRotation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 44
                }
              },
              "preview": "float computeWorldRotation(BonePose &bone);"
            },
            {
              "name": "copy",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 37
                }
              },
              "preview": "virtual Attachment *copy() override;"
            },
            {
              "name": "_x",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 10
                }
              },
              "preview": "float _x, _y, _rotation;"
            },
            {
              "name": "_y",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 14
                }
              },
              "preview": "float _x, _y, _rotation;"
            },
            {
              "name": "_rotation",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 25
                }
              },
              "preview": "float _x, _y, _rotation;"
            },
            {
              "name": "_color",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PointAttachment.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 14
                }
              },
              "preview": "Color _color;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Pool.h",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 71,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Pool",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Pool.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 70,
              "character": 2
            }
          },
          "preview": "class SP_API Pool : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "Pool",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Pool.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 3
                }
              },
              "preview": "Pool() {"
            },
            {
              "name": "~Pool",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Pool.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 3
                }
              },
              "preview": "~Pool() {"
            },
            {
              "name": "obtain",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Pool.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 3
                }
              },
              "preview": "T *obtain() {"
            },
            {
              "name": "free",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Pool.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 3
                }
              },
              "preview": "void free(T *object) {"
            },
            {
              "name": "_objects",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Pool.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 22
                }
              },
              "preview": "Vector<T *> _objects;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Pose.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 44,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Pose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Pose.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 5
            }
          },
          "preview": "class SP_API Pose : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "Pose",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Pose.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 17
                }
              },
              "preview": "Pose() {};"
            },
            {
              "name": "~Pose",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Pose.h",
              "range": {
                "start": {
                  "line": 39,
                  "character": 0
                },
                "end": {
                  "line": 39,
                  "character": 26
                }
              },
              "preview": "virtual ~Pose() {};"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Pose.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 37
                }
              },
              "preview": "virtual void set(P& pose) = 0;",
              "documentation": "Sets the pose values."
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 132,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Posed",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 50,
              "character": 2
            }
          },
          "preview": "class SP_API Posed {",
          "children": [
            {
              "name": "Posed",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 12
                }
              },
              "preview": "Posed() {}"
            },
            {
              "name": "~Posed",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 39,
                  "character": 0
                },
                "end": {
                  "line": 39,
                  "character": 21
                }
              },
              "preview": "virtual ~Posed() {}"
            },
            {
              "name": "setupPose",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 30
                }
              },
              "preview": "virtual void setupPose() = 0;"
            },
            {
              "name": "pose",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 43,
                  "character": 0
                },
                "end": {
                  "line": 43,
                  "character": 25
                }
              },
              "preview": "virtual void pose() = 0;"
            },
            {
              "name": "constrained",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 32
                }
              },
              "preview": "virtual void constrained() = 0;"
            },
            {
              "name": "resetConstrained",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 37
                }
              },
              "preview": "virtual void resetConstrained() = 0;"
            },
            {
              "name": "isPoseEqualToApplied",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 47
                }
              },
              "preview": "virtual bool isPoseEqualToApplied() const = 0;"
            }
          ]
        },
        {
          "name": "PosedGeneric",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
          "range": {
            "start": {
              "line": 53,
              "character": 0
            },
            "end": {
              "line": 131,
              "character": 2
            }
          },
          "preview": "class SP_API PosedGeneric : public Posed, public SpineObject {",
          "supertypes": [
            "SpineObject",
            "Posed"
          ],
          "children": [
            {
              "name": "PosedGeneric",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 3
                }
              },
              "preview": "PosedGeneric(D &data) : _data(data), _pose(), _constrained(), _applied(&_pose) {"
            },
            {
              "name": "~PosedGeneric",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 89,
                  "character": 3
                }
              },
              "preview": "virtual ~PosedGeneric() {"
            },
            {
              "name": "setupPose",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 91,
                  "character": 0
                },
                "end": {
                  "line": 93,
                  "character": 3
                }
              },
              "preview": "virtual void setupPose() override {"
            },
            {
              "name": "getData",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 96,
                  "character": 0
                },
                "end": {
                  "line": 98,
                  "character": 3
                }
              },
              "preview": "D &getData() {",
              "documentation": "The constraint's setup pose data."
            },
            {
              "name": "getPose",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 100,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 3
                }
              },
              "preview": "P &getPose() {"
            },
            {
              "name": "getAppliedPose",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 106,
                  "character": 0
                },
                "end": {
                  "line": 108,
                  "character": 3
                }
              },
              "preview": "A &getAppliedPose() {"
            },
            {
              "name": "resetConstrained",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 110,
                  "character": 0
                },
                "end": {
                  "line": 112,
                  "character": 3
                }
              },
              "preview": "virtual void resetConstrained() override {"
            },
            {
              "name": "pose",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 114,
                  "character": 0
                },
                "end": {
                  "line": 116,
                  "character": 3
                }
              },
              "preview": "virtual void pose() override {"
            },
            {
              "name": "constrained",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 118,
                  "character": 0
                },
                "end": {
                  "line": 120,
                  "character": 3
                }
              },
              "preview": "virtual void constrained() override {"
            },
            {
              "name": "isPoseEqualToApplied",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 122,
                  "character": 0
                },
                "end": {
                  "line": 124,
                  "character": 3
                }
              },
              "preview": "virtual bool isPoseEqualToApplied() const override {"
            },
            {
              "name": "_data",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 127,
                  "character": 0
                },
                "end": {
                  "line": 127,
                  "character": 10
                }
              },
              "preview": "D &_data;"
            },
            {
              "name": "_pose",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 128,
                  "character": 0
                },
                "end": {
                  "line": 128,
                  "character": 9
                }
              },
              "preview": "A _pose;       ///< Stored as A type (concrete pose type) to match Java behavior"
            },
            {
              "name": "_constrained",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 129,
                  "character": 0
                },
                "end": {
                  "line": 129,
                  "character": 16
                }
              },
              "preview": "A _constrained;///< Stored as A type (concrete pose type) to match Java behavior"
            },
            {
              "name": "_applied",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Posed.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 130,
                  "character": 13
                }
              },
              "preview": "A *_applied;   ///< Points to either _pose or _constrained, reassignable like Java"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedActive.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 47,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "PosedActive",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedActive.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 46,
              "character": 2
            }
          },
          "preview": "class SP_API PosedActive {",
          "documentation": "Simple mixin class that adds active state tracking",
          "children": [
            {
              "name": "_active",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedActive.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 14
                }
              },
              "preview": "bool _active;"
            },
            {
              "name": "PosedActive",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedActive.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 34
                }
              },
              "preview": "PosedActive() : _active(true) {}"
            },
            {
              "name": "~PosedActive",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedActive.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 27
                }
              },
              "preview": "virtual ~PosedActive() {}"
            },
            {
              "name": "isActive",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedActive.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 43
                }
              },
              "preview": "bool isActive() const { return _active; }"
            },
            {
              "name": "setActive",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedActive.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 51
                }
              },
              "preview": "void setActive(bool active) { _active = active; }"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 131,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Pose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 14
            }
          },
          "preview": "class Pose;"
        },
        {
          "name": "PosedData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 80,
              "character": 5
            }
          },
          "preview": "class SP_API PosedData : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "PosedData",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 44
                }
              },
              "preview": "PosedData(const spine::String& name);"
            },
            {
              "name": "~PosedData",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 28
                }
              },
              "preview": "virtual ~PosedData();"
            },
            {
              "name": "getName",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 62
                }
              },
              "preview": "const spine::String& getName() const { return _name; };",
              "documentation": "The constraint's name, which is unique across all constraints in the skeleton of the same type."
            },
            {
              "name": "isSkinRequired",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 61
                }
              },
              "preview": "bool isSkinRequired() const { return _skinRequired; };",
              "documentation": "When true, Skeleton::updateWorldTransform(Physics) only updates this constraint if the Skeleton::getSkin()\ncontains this constraint.\nSee Skin::getConstraints()."
            },
            {
              "name": "setSkinRequired",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 81
                }
              },
              "preview": "void setSkinRequired(bool skinRequired) { _skinRequired = skinRequired; };"
            },
            {
              "name": "_name",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
              "range": {
                "start": {
                  "line": 78,
                  "character": 0
                },
                "end": {
                  "line": 78,
                  "character": 31
                }
              },
              "preview": "spine::String _name;"
            },
            {
              "name": "_skinRequired",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 79,
                  "character": 30
                }
              },
              "preview": "bool _skinRequired;"
            }
          ]
        },
        {
          "name": "PosedData::PosedData",
          "kind": "constructor",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
          "range": {
            "start": {
              "line": 82,
              "character": 0
            },
            "end": {
              "line": 83,
              "character": 5
            }
          },
          "preview": "inline PosedData::PosedData(const spine::String& name) : _name(name), _skinRequired(false) {"
        },
        {
          "name": "PosedData::~PosedData",
          "kind": "constructor",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
          "range": {
            "start": {
              "line": 85,
              "character": 0
            },
            "end": {
              "line": 86,
              "character": 5
            }
          },
          "preview": "inline PosedData::~PosedData() {"
        },
        {
          "name": "PosedDataGeneric",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
          "range": {
            "start": {
              "line": 90,
              "character": 0
            },
            "end": {
              "line": 130,
              "character": 5
            }
          },
          "preview": "class SP_API PosedDataGeneric : public PosedData {",
          "supertypes": [
            "PosedData"
          ],
          "children": [
            {
              "name": "_setup",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
              "range": {
                "start": {
                  "line": 121,
                  "character": 0
                },
                "end": {
                  "line": 121,
                  "character": 16
                }
              },
              "preview": "P _setup;"
            },
            {
              "name": "PosedDataGeneric",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
              "range": {
                "start": {
                  "line": 124,
                  "character": 0
                },
                "end": {
                  "line": 125,
                  "character": 5
                }
              },
              "preview": "PosedDataGeneric(const spine::String& name): PosedData(name), _setup() {"
            },
            {
              "name": "~PosedDataGeneric",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
              "range": {
                "start": {
                  "line": 126,
                  "character": 0
                },
                "end": {
                  "line": 126,
                  "character": 38
                }
              },
              "preview": "virtual ~PosedDataGeneric() {};"
            },
            {
              "name": "getSetupPose",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
              "range": {
                "start": {
                  "line": 128,
                  "character": 0
                },
                "end": {
                  "line": 128,
                  "character": 44
                }
              },
              "preview": "P& getSetupPose() { return _setup; };"
            },
            {
              "name": "getSetupPose",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PosedData.h",
              "range": {
                "start": {
                  "line": 129,
                  "character": 0
                },
                "end": {
                  "line": 129,
                  "character": 56
                }
              },
              "preview": "const P& getSetupPose() const { return _setup; };"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PositionMode.h",
      "range": {
        "start": {
          "line": 32,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "PositionMode",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PositionMode.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 2
            }
          },
          "preview": "enum PositionMode {",
          "documentation": "Controls how the first bone is positioned along the path.\n@see https://esotericsoftware.com/spine-path-constraints#Position-mode Position mode in the Spine User Guide.",
          "children": [
            {
              "name": "PositionMode_Fixed",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PositionMode.h",
              "range": {
                "start": {
                  "line": 37,
                  "character": 0
                },
                "end": {
                  "line": 37,
                  "character": 24
                }
              },
              "preview": "PositionMode_Fixed = 0,"
            },
            {
              "name": "PositionMode_Percent",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/PositionMode.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 22
                }
              },
              "preview": "PositionMode_Percent"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
      "range": {
        "start": {
          "line": 32,
          "character": 0
        },
        "end": {
          "line": 67,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "PropertyId",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
          "range": {
            "start": {
              "line": 33,
              "character": 0
            },
            "end": {
              "line": 33,
              "character": 29
            }
          },
          "preview": "typedef long long PropertyId;"
        },
        {
          "name": "Property",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
          "range": {
            "start": {
              "line": 34,
              "character": 0
            },
            "end": {
              "line": 66,
              "character": 2
            }
          },
          "preview": "enum Property {",
          "children": [
            {
              "name": "Property_Rotate",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 35,
                  "character": 0
                },
                "end": {
                  "line": 35,
                  "character": 26
                }
              },
              "preview": "Property_Rotate = 1 << 0,"
            },
            {
              "name": "Property_X",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 36,
                  "character": 0
                },
                "end": {
                  "line": 36,
                  "character": 21
                }
              },
              "preview": "Property_X = 1 << 1,"
            },
            {
              "name": "Property_Y",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 37,
                  "character": 0
                },
                "end": {
                  "line": 37,
                  "character": 21
                }
              },
              "preview": "Property_Y = 1 << 2,"
            },
            {
              "name": "Property_ScaleX",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 26
                }
              },
              "preview": "Property_ScaleX = 1 << 3,"
            },
            {
              "name": "Property_ScaleY",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 39,
                  "character": 0
                },
                "end": {
                  "line": 39,
                  "character": 26
                }
              },
              "preview": "Property_ScaleY = 1 << 4,"
            },
            {
              "name": "Property_ShearX",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 40,
                  "character": 0
                },
                "end": {
                  "line": 40,
                  "character": 26
                }
              },
              "preview": "Property_ShearX = 1 << 5,"
            },
            {
              "name": "Property_ShearY",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 26
                }
              },
              "preview": "Property_ShearY = 1 << 6,"
            },
            {
              "name": "Property_Inherit",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 33
                }
              },
              "preview": "Property_Inherit = 1 << 7,"
            },
            {
              "name": "Property_Rgb",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 43,
                  "character": 0
                },
                "end": {
                  "line": 43,
                  "character": 23
                }
              },
              "preview": "Property_Rgb = 1 << 8,"
            },
            {
              "name": "Property_Alpha",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 25
                }
              },
              "preview": "Property_Alpha = 1 << 9,"
            },
            {
              "name": "Property_Rgb2",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 25
                }
              },
              "preview": "Property_Rgb2 = 1 << 10,"
            },
            {
              "name": "Property_Attachment",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 31
                }
              },
              "preview": "Property_Attachment = 1 << 11,"
            },
            {
              "name": "Property_Deform",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 27
                }
              },
              "preview": "Property_Deform = 1 << 12,"
            },
            {
              "name": "Property_Event",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 26
                }
              },
              "preview": "Property_Event = 1 << 13,"
            },
            {
              "name": "Property_DrawOrder",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 30
                }
              },
              "preview": "Property_DrawOrder = 1 << 14,"
            },
            {
              "name": "Property_IkConstraint",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 33
                }
              },
              "preview": "Property_IkConstraint = 1 << 15,"
            },
            {
              "name": "Property_TransformConstraint",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 40
                }
              },
              "preview": "Property_TransformConstraint = 1 << 16,"
            },
            {
              "name": "Property_PathConstraintPosition",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 43
                }
              },
              "preview": "Property_PathConstraintPosition = 1 << 17,"
            },
            {
              "name": "Property_PathConstraintSpacing",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 42
                }
              },
              "preview": "Property_PathConstraintSpacing = 1 << 18,"
            },
            {
              "name": "Property_PathConstraintMix",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 38
                }
              },
              "preview": "Property_PathConstraintMix = 1 << 19,"
            },
            {
              "name": "Property_PhysicsConstraintInertia",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 55,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 51
                }
              },
              "preview": "Property_PhysicsConstraintInertia = 1 << 20,"
            },
            {
              "name": "Property_PhysicsConstraintStrength",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 52
                }
              },
              "preview": "Property_PhysicsConstraintStrength = 1 << 21,"
            },
            {
              "name": "Property_PhysicsConstraintDamping",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 51
                }
              },
              "preview": "Property_PhysicsConstraintDamping = 1 << 22,"
            },
            {
              "name": "Property_PhysicsConstraintMass",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 48
                }
              },
              "preview": "Property_PhysicsConstraintMass = 1 << 23,"
            },
            {
              "name": "Property_PhysicsConstraintWind",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 48
                }
              },
              "preview": "Property_PhysicsConstraintWind = 1 << 24,"
            },
            {
              "name": "Property_PhysicsConstraintGravity",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 51
                }
              },
              "preview": "Property_PhysicsConstraintGravity = 1 << 25,"
            },
            {
              "name": "Property_PhysicsConstraintMix",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 47
                }
              },
              "preview": "Property_PhysicsConstraintMix = 1 << 26,"
            },
            {
              "name": "Property_PhysicsConstraintReset",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 49
                }
              },
              "preview": "Property_PhysicsConstraintReset = 1 << 27,"
            },
            {
              "name": "Property_Sequence",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 29
                }
              },
              "preview": "Property_Sequence = 1 << 28,"
            },
            {
              "name": "Property_SliderTime",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 31
                }
              },
              "preview": "Property_SliderTime = 1 << 29,"
            },
            {
              "name": "Property_SliderMix",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Property.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 30
                }
              },
              "preview": "Property_SliderMix = 1 << 30"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RTTI.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 64,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "RTTI",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RTTI.h",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 63,
              "character": 2
            }
          },
          "preview": "class SP_API RTTI {",
          "children": [
            {
              "name": "RTTI",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RTTI.h",
              "range": {
                "start": {
                  "line": 37,
                  "character": 0
                },
                "end": {
                  "line": 37,
                  "character": 38
                }
              },
              "preview": "explicit RTTI(const char *className);"
            },
            {
              "name": "RTTI",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RTTI.h",
              "range": {
                "start": {
                  "line": 39,
                  "character": 0
                },
                "end": {
                  "line": 39,
                  "character": 51
                }
              },
              "preview": "RTTI(const char *className, const RTTI &baseRTTI);"
            },
            {
              "name": "RTTI",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RTTI.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 34
                }
              },
              "preview": "RTTI(const char *className, const RTTI &baseRTTI,"
            },
            {
              "name": "getClassName",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RTTI.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 34
                }
              },
              "preview": "const char *getClassName() const;"
            },
            {
              "name": "isExactly",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RTTI.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 40
                }
              },
              "preview": "bool isExactly(const RTTI &rtti) const;"
            },
            {
              "name": "instanceOf",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RTTI.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 41
                }
              },
              "preview": "bool instanceOf(const RTTI &rtti) const;"
            },
            {
              "name": "RTTI",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RTTI.h",
              "range": {
                "start": {
                  "line": 55,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 23
                }
              },
              "preview": "RTTI(const RTTI &obj);"
            },
            {
              "name": "operator=",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RTTI.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 34
                }
              },
              "preview": "RTTI &operator=(const RTTI &obj);"
            },
            {
              "name": "_className",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RTTI.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 24
                }
              },
              "preview": "const char *_className;"
            },
            {
              "name": "_pBaseRTTI",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RTTI.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 24
                }
              },
              "preview": "const RTTI *_pBaseRTTI;"
            },
            {
              "name": "_interfaces",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RTTI.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 28
                }
              },
              "preview": "const RTTI *_interfaces[3];  // Support up to 3 interfaces"
            },
            {
              "name": "_interfaceCount",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RTTI.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 21
                }
              },
              "preview": "int _interfaceCount;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 138,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Bone",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 11
            }
          },
          "preview": "class Bone;"
        },
        {
          "name": "Slot",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 44,
              "character": 11
            }
          },
          "preview": "class Slot;"
        },
        {
          "name": "RegionAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
          "range": {
            "start": {
              "line": 47,
              "character": 0
            },
            "end": {
              "line": 137,
              "character": 2
            }
          },
          "preview": "class SP_API RegionAttachment : public Attachment {",
          "documentation": "Attachment that displays a texture region.",
          "supertypes": [
            "Attachment"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
                  "range": {
                    "start": {
                      "line": 54,
                      "character": 0
                    },
                    "end": {
                      "line": 54,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
                  "range": {
                    "start": {
                      "line": 54,
                      "character": 0
                    },
                    "end": {
                      "line": 54,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "RegionAttachment",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 47
                }
              },
              "preview": "explicit RegionAttachment(const String &name);"
            },
            {
              "name": "~RegionAttachment",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 29
                }
              },
              "preview": "virtual ~RegionAttachment();"
            },
            {
              "name": "updateRegion",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 21
                }
              },
              "preview": "void updateRegion();"
            },
            {
              "name": "computeWorldVertices",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 95
                }
              },
              "preview": "void computeWorldVertices(Slot &slot, float *worldVertices, size_t offset, size_t stride = 2);",
              "documentation": "Transforms the attachment's four vertices to world coordinates.\n@param slot The parent slot.\n@param worldVertices The output world vertices. Must have a length greater than or equal to offset + 8.\n@param offset The worldVertices index to begin writing values.\n@param stride The number of worldVertices entries between the value pairs written."
            },
            {
              "name": "computeWorldVertices",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 103
                }
              },
              "preview": "void computeWorldVertices(Slot &slot, Vector<float> &worldVertices, size_t offset, size_t stride = 2);"
            },
            {
              "name": "getX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 14
                }
              },
              "preview": "float getX();"
            },
            {
              "name": "setX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 26
                }
              },
              "preview": "void setX(float inValue);"
            },
            {
              "name": "getY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 14
                }
              },
              "preview": "float getY();"
            },
            {
              "name": "setY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 78,
                  "character": 0
                },
                "end": {
                  "line": 78,
                  "character": 26
                }
              },
              "preview": "void setY(float inValue);"
            },
            {
              "name": "getRotation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 21
                }
              },
              "preview": "float getRotation();"
            },
            {
              "name": "setRotation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 82,
                  "character": 0
                },
                "end": {
                  "line": 82,
                  "character": 33
                }
              },
              "preview": "void setRotation(float inValue);"
            },
            {
              "name": "getScaleX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 19
                }
              },
              "preview": "float getScaleX();"
            },
            {
              "name": "setScaleX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 86,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 31
                }
              },
              "preview": "void setScaleX(float inValue);"
            },
            {
              "name": "getScaleY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 88,
                  "character": 19
                }
              },
              "preview": "float getScaleY();"
            },
            {
              "name": "setScaleY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 90,
                  "character": 0
                },
                "end": {
                  "line": 90,
                  "character": 31
                }
              },
              "preview": "void setScaleY(float inValue);"
            },
            {
              "name": "getWidth",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 92,
                  "character": 0
                },
                "end": {
                  "line": 92,
                  "character": 18
                }
              },
              "preview": "float getWidth();"
            },
            {
              "name": "setWidth",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 94,
                  "character": 30
                }
              },
              "preview": "void setWidth(float inValue);"
            },
            {
              "name": "getHeight",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 96,
                  "character": 0
                },
                "end": {
                  "line": 96,
                  "character": 19
                }
              },
              "preview": "float getHeight();"
            },
            {
              "name": "setHeight",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 98,
                  "character": 0
                },
                "end": {
                  "line": 98,
                  "character": 31
                }
              },
              "preview": "void setHeight(float inValue);"
            },
            {
              "name": "getColor",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 100,
                  "character": 0
                },
                "end": {
                  "line": 100,
                  "character": 19
                }
              },
              "preview": "Color &getColor();"
            },
            {
              "name": "getPath",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 102,
                  "character": 0
                },
                "end": {
                  "line": 102,
                  "character": 25
                }
              },
              "preview": "const String &getPath();"
            },
            {
              "name": "setPath",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 37
                }
              },
              "preview": "void setPath(const String &inValue);"
            },
            {
              "name": "getRegion",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 106,
                  "character": 0
                },
                "end": {
                  "line": 106,
                  "character": 28
                }
              },
              "preview": "TextureRegion *getRegion();"
            },
            {
              "name": "setRegion",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 108,
                  "character": 0
                },
                "end": {
                  "line": 108,
                  "character": 39
                }
              },
              "preview": "void setRegion(TextureRegion *region);"
            },
            {
              "name": "getSequence",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 110,
                  "character": 0
                },
                "end": {
                  "line": 110,
                  "character": 25
                }
              },
              "preview": "Sequence *getSequence();"
            },
            {
              "name": "setSequence",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 112,
                  "character": 0
                },
                "end": {
                  "line": 112,
                  "character": 38
                }
              },
              "preview": "void setSequence(Sequence *sequence);"
            },
            {
              "name": "getOffset",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 114,
                  "character": 0
                },
                "end": {
                  "line": 114,
                  "character": 28
                }
              },
              "preview": "Vector<float> &getOffset();"
            },
            {
              "name": "getUVs",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 116,
                  "character": 0
                },
                "end": {
                  "line": 116,
                  "character": 25
                }
              },
              "preview": "Vector<float> &getUVs();"
            },
            {
              "name": "copy",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 118,
                  "character": 0
                },
                "end": {
                  "line": 118,
                  "character": 37
                }
              },
              "preview": "virtual Attachment *copy() override;"
            },
            {
              "name": "BLX",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 121,
                  "character": 0
                },
                "end": {
                  "line": 121,
                  "character": 22
                }
              },
              "preview": "static const int BLX;"
            },
            {
              "name": "BLY",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 122,
                  "character": 0
                },
                "end": {
                  "line": 122,
                  "character": 22
                }
              },
              "preview": "static const int BLY;"
            },
            {
              "name": "ULX",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 123,
                  "character": 0
                },
                "end": {
                  "line": 123,
                  "character": 22
                }
              },
              "preview": "static const int ULX;"
            },
            {
              "name": "ULY",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 124,
                  "character": 0
                },
                "end": {
                  "line": 124,
                  "character": 22
                }
              },
              "preview": "static const int ULY;"
            },
            {
              "name": "URX",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 125,
                  "character": 0
                },
                "end": {
                  "line": 125,
                  "character": 22
                }
              },
              "preview": "static const int URX;"
            },
            {
              "name": "URY",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 126,
                  "character": 0
                },
                "end": {
                  "line": 126,
                  "character": 22
                }
              },
              "preview": "static const int URY;"
            },
            {
              "name": "BRX",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 127,
                  "character": 0
                },
                "end": {
                  "line": 127,
                  "character": 22
                }
              },
              "preview": "static const int BRX;"
            },
            {
              "name": "BRY",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 128,
                  "character": 0
                },
                "end": {
                  "line": 128,
                  "character": 22
                }
              },
              "preview": "static const int BRY;"
            },
            {
              "name": "_x",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 130,
                  "character": 10
                }
              },
              "preview": "float _x, _y, _rotation, _scaleX, _scaleY, _width, _height;"
            },
            {
              "name": "_y",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 130,
                  "character": 14
                }
              },
              "preview": "float _x, _y, _rotation, _scaleX, _scaleY, _width, _height;"
            },
            {
              "name": "_rotation",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 130,
                  "character": 25
                }
              },
              "preview": "float _x, _y, _rotation, _scaleX, _scaleY, _width, _height;"
            },
            {
              "name": "_scaleX",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 130,
                  "character": 34
                }
              },
              "preview": "float _x, _y, _rotation, _scaleX, _scaleY, _width, _height;"
            },
            {
              "name": "_scaleY",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 130,
                  "character": 43
                }
              },
              "preview": "float _x, _y, _rotation, _scaleX, _scaleY, _width, _height;"
            },
            {
              "name": "_width",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 130,
                  "character": 51
                }
              },
              "preview": "float _x, _y, _rotation, _scaleX, _scaleY, _width, _height;"
            },
            {
              "name": "_height",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 130,
                  "character": 60
                }
              },
              "preview": "float _x, _y, _rotation, _scaleX, _scaleY, _width, _height;"
            },
            {
              "name": "_vertexOffset",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 131,
                  "character": 0
                },
                "end": {
                  "line": 131,
                  "character": 29
                }
              },
              "preview": "Vector<float> _vertexOffset;"
            },
            {
              "name": "_uvs",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 132,
                  "character": 0
                },
                "end": {
                  "line": 132,
                  "character": 20
                }
              },
              "preview": "Vector<float> _uvs;"
            },
            {
              "name": "_path",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 133,
                  "character": 0
                },
                "end": {
                  "line": 133,
                  "character": 14
                }
              },
              "preview": "String _path;"
            },
            {
              "name": "_color",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 134,
                  "character": 0
                },
                "end": {
                  "line": 134,
                  "character": 14
                }
              },
              "preview": "Color _color;"
            },
            {
              "name": "_region",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 135,
                  "character": 0
                },
                "end": {
                  "line": 135,
                  "character": 24
                }
              },
              "preview": "TextureRegion *_region;"
            },
            {
              "name": "_sequence",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RegionAttachment.h",
              "range": {
                "start": {
                  "line": 136,
                  "character": 0
                },
                "end": {
                  "line": 136,
                  "character": 21
                }
              },
              "preview": "Sequence *_sequence;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RotateMode.h",
      "range": {
        "start": {
          "line": 32,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "RotateMode",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RotateMode.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 2
            }
          },
          "preview": "enum RotateMode {",
          "documentation": "Controls how bones are rotated, translated, and scaled to match the path.\n@see https://esotericsoftware.com/spine-path-constraints#Rotate-Mix Rotate mode in the Spine User Guide.",
          "children": [
            {
              "name": "RotateMode_Tangent",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RotateMode.h",
              "range": {
                "start": {
                  "line": 37,
                  "character": 0
                },
                "end": {
                  "line": 37,
                  "character": 24
                }
              },
              "preview": "RotateMode_Tangent = 0,"
            },
            {
              "name": "RotateMode_Chain",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RotateMode.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 18
                }
              },
              "preview": "RotateMode_Chain,"
            },
            {
              "name": "RotateMode_ChainScale",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RotateMode.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 23
                }
              },
              "preview": "RotateMode_ChainScale",
              "documentation": "When chain scale, constrained bones should all have the same parent. That way when the path constraint scales a bone, it\ndoesn't affect other constrained bones."
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RotateTimeline.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 52,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "RotateTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RotateTimeline.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 51,
              "character": 2
            }
          },
          "preview": "class SP_API RotateTimeline : public BoneTimeline1 {",
          "documentation": "Changes a bone's local rotation.",
          "supertypes": [
            "BoneTimeline1"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RotateTimeline.h",
              "range": {
                "start": {
                  "line": 43,
                  "character": 0
                },
                "end": {
                  "line": 43,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RotateTimeline.h",
                  "range": {
                    "start": {
                      "line": 43,
                      "character": 0
                    },
                    "end": {
                      "line": 43,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RotateTimeline.h",
                  "range": {
                    "start": {
                      "line": 43,
                      "character": 0
                    },
                    "end": {
                      "line": 43,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "RotateTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RotateTimeline.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 79
                }
              },
              "preview": "explicit RotateTimeline(size_t frameCount, size_t bezierCount, int boneIndex);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/RotateTimeline.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 41
                }
              },
              "preview": "virtual void apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 82,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "ScaleTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 49,
              "character": 2
            }
          },
          "preview": "class SP_API ScaleTimeline : public BoneTimeline2 {",
          "documentation": "Changes a bone's local scale X and Y.",
          "supertypes": [
            "BoneTimeline2"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
                  "range": {
                    "start": {
                      "line": 41,
                      "character": 0
                    },
                    "end": {
                      "line": 41,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
                  "range": {
                    "start": {
                      "line": 41,
                      "character": 0
                    },
                    "end": {
                      "line": 41,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "ScaleTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 78
                }
              },
              "preview": "explicit ScaleTimeline(size_t frameCount, size_t bezierCount, int boneIndex);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 41
                }
              },
              "preview": "virtual void apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
            }
          ]
        },
        {
          "name": "ScaleXTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
          "range": {
            "start": {
              "line": 52,
              "character": 0
            },
            "end": {
              "line": 65,
              "character": 2
            }
          },
          "preview": "class SP_API ScaleXTimeline : public BoneTimeline1 {",
          "documentation": "Changes a bone's local scale X.",
          "supertypes": [
            "BoneTimeline1"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
                  "range": {
                    "start": {
                      "line": 57,
                      "character": 0
                    },
                    "end": {
                      "line": 57,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
                  "range": {
                    "start": {
                      "line": 57,
                      "character": 0
                    },
                    "end": {
                      "line": 57,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "ScaleXTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 79
                }
              },
              "preview": "explicit ScaleXTimeline(size_t frameCount, size_t bezierCount, int boneIndex);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 41
                }
              },
              "preview": "virtual void apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
            }
          ]
        },
        {
          "name": "ScaleYTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
          "range": {
            "start": {
              "line": 68,
              "character": 0
            },
            "end": {
              "line": 81,
              "character": 2
            }
          },
          "preview": "class SP_API ScaleYTimeline : public BoneTimeline1 {",
          "documentation": "Changes a bone's local scale Y.",
          "supertypes": [
            "BoneTimeline1"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
                  "range": {
                    "start": {
                      "line": 73,
                      "character": 0
                    },
                    "end": {
                      "line": 73,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
                  "range": {
                    "start": {
                      "line": 73,
                      "character": 0
                    },
                    "end": {
                      "line": 73,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "ScaleYTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 79
                }
              },
              "preview": "explicit ScaleYTimeline(size_t frameCount, size_t bezierCount, int boneIndex);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ScaleTimeline.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 41
                }
              },
              "preview": "virtual void apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 98,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "SlotPose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 15
            }
          },
          "preview": "class SlotPose;"
        },
        {
          "name": "Attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 17
            }
          },
          "preview": "class Attachment;"
        },
        {
          "name": "SkeletonBinary",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 21
            }
          },
          "preview": "class SkeletonBinary;"
        },
        {
          "name": "SkeletonJson",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 19
            }
          },
          "preview": "class SkeletonJson;"
        },
        {
          "name": "Sequence",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 87,
              "character": 2
            }
          },
          "preview": "class SP_API Sequence : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "Sequence",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 21
                }
              },
              "preview": "Sequence(int count);"
            },
            {
              "name": "~Sequence",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 13
                }
              },
              "preview": "~Sequence();"
            },
            {
              "name": "copy",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 18
                }
              },
              "preview": "Sequence* copy();"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 52
                }
              },
              "preview": "void apply(SlotPose* slot, Attachment* attachment);"
            },
            {
              "name": "getPath",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 51
                }
              },
              "preview": "String getPath(const String &basePath, int index);"
            },
            {
              "name": "getId",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 29
                }
              },
              "preview": "int getId() { return _id; }",
              "documentation": "Returns a unique ID for this attachment."
            },
            {
              "name": "setId",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 34
                }
              },
              "preview": "void setId(int id) { _id = id; }"
            },
            {
              "name": "getStart",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 35
                }
              },
              "preview": "int getStart() { return _start; }"
            },
            {
              "name": "setStart",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 46
                }
              },
              "preview": "void setStart(int start) { _start = start; }"
            },
            {
              "name": "getDigits",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 67,
                  "character": 0
                },
                "end": {
                  "line": 67,
                  "character": 37
                }
              },
              "preview": "int getDigits() { return _digits; }"
            },
            {
              "name": "setDigits",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 50
                }
              },
              "preview": "void setDigits(int digits) { _digits = digits; }"
            },
            {
              "name": "getSetupIndex",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 45
                }
              },
              "preview": "int getSetupIndex() { return _setupIndex; }",
              "documentation": "The index of the region to show for the setup pose."
            },
            {
              "name": "setSetupIndex",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 66
                }
              },
              "preview": "void setSetupIndex(int setupIndex) { _setupIndex = setupIndex; }"
            },
            {
              "name": "getRegions",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 60
                }
              },
              "preview": "Vector<TextureRegion *> &getRegions() { return _regions; }"
            },
            {
              "name": "_nextID",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 79,
                  "character": 20
                }
              },
              "preview": "static int _nextID;"
            },
            {
              "name": "_id",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 9
                }
              },
              "preview": "int _id;"
            },
            {
              "name": "_regions",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 34
                }
              },
              "preview": "Vector<TextureRegion *> _regions;"
            },
            {
              "name": "_start",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 82,
                  "character": 0
                },
                "end": {
                  "line": 82,
                  "character": 12
                }
              },
              "preview": "int _start;"
            },
            {
              "name": "_digits",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 13
                }
              },
              "preview": "int _digits;"
            },
            {
              "name": "_setupIndex",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 17
                }
              },
              "preview": "int _setupIndex;"
            },
            {
              "name": "nextID",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 86,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 21
                }
              },
              "preview": "static int nextID();"
            }
          ]
        },
        {
          "name": "SequenceMode",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
          "range": {
            "start": {
              "line": 89,
              "character": 0
            },
            "end": {
              "line": 97,
              "character": 2
            }
          },
          "preview": "enum SequenceMode {",
          "children": [
            {
              "name": "SequenceMode_hold",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 90,
                  "character": 0
                },
                "end": {
                  "line": 90,
                  "character": 23
                }
              },
              "preview": "SequenceMode_hold = 0,"
            },
            {
              "name": "SequenceMode_once",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 91,
                  "character": 0
                },
                "end": {
                  "line": 91,
                  "character": 23
                }
              },
              "preview": "SequenceMode_once = 1,"
            },
            {
              "name": "SequenceMode_loop",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 92,
                  "character": 0
                },
                "end": {
                  "line": 92,
                  "character": 23
                }
              },
              "preview": "SequenceMode_loop = 2,"
            },
            {
              "name": "SequenceMode_pingpong",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 93,
                  "character": 0
                },
                "end": {
                  "line": 93,
                  "character": 27
                }
              },
              "preview": "SequenceMode_pingpong = 3,"
            },
            {
              "name": "SequenceMode_onceReverse",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 94,
                  "character": 30
                }
              },
              "preview": "SequenceMode_onceReverse = 4,"
            },
            {
              "name": "SequenceMode_loopReverse",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 95,
                  "character": 0
                },
                "end": {
                  "line": 95,
                  "character": 30
                }
              },
              "preview": "SequenceMode_loopReverse = 5,"
            },
            {
              "name": "SequenceMode_pingpongReverse",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Sequence.h",
              "range": {
                "start": {
                  "line": 96,
                  "character": 0
                },
                "end": {
                  "line": 96,
                  "character": 34
                }
              },
              "preview": "SequenceMode_pingpongReverse = 6"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SequenceTimeline.h",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 67,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SequenceTimeline.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 17
            }
          },
          "preview": "class Attachment;"
        },
        {
          "name": "HasTextureRegion",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SequenceTimeline.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 23
            }
          },
          "preview": "class HasTextureRegion;"
        },
        {
          "name": "SequenceTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SequenceTimeline.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 66,
              "character": 2
            }
          },
          "preview": "class SP_API SequenceTimeline : public Timeline, public SlotTimeline {",
          "supertypes": [
            "Timeline",
            "SlotTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SequenceTimeline.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SequenceTimeline.h",
                  "range": {
                    "start": {
                      "line": 45,
                      "character": 0
                    },
                    "end": {
                      "line": 45,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SequenceTimeline.h",
                  "range": {
                    "start": {
                      "line": 45,
                      "character": 0
                    },
                    "end": {
                      "line": 45,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "SequenceTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SequenceTimeline.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 92
                }
              },
              "preview": "explicit SequenceTimeline(size_t frameCount, int slotIndex, spine::Attachment *attachment);"
            },
            {
              "name": "~SequenceTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SequenceTimeline.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 29
                }
              },
              "preview": "virtual ~SequenceTimeline();"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SequenceTimeline.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 55
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            },
            {
              "name": "setFrame",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SequenceTimeline.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 81
                }
              },
              "preview": "void setFrame(int frame, float time, SequenceMode mode, int index, float delay);"
            },
            {
              "name": "getAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SequenceTimeline.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 66
                }
              },
              "preview": "Attachment *getAttachment() { return (Attachment*)_attachment; }"
            },
            {
              "name": "_attachment",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SequenceTimeline.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 31
                }
              },
              "preview": "HasTextureRegion *_attachment;"
            },
            {
              "name": "ENTRIES",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SequenceTimeline.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 30
                }
              },
              "preview": "static const int ENTRIES = 3;"
            },
            {
              "name": "MODE",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SequenceTimeline.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 27
                }
              },
              "preview": "static const int MODE = 1;"
            },
            {
              "name": "DELAY",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SequenceTimeline.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 28
                }
              },
              "preview": "static const int DELAY = 2;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 82,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "ShearTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 49,
              "character": 2
            }
          },
          "preview": "class SP_API ShearTimeline : public BoneTimeline2 {",
          "documentation": "Changes a bone's local shear X and Y.",
          "supertypes": [
            "BoneTimeline2"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
                  "range": {
                    "start": {
                      "line": 41,
                      "character": 0
                    },
                    "end": {
                      "line": 41,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
                  "range": {
                    "start": {
                      "line": 41,
                      "character": 0
                    },
                    "end": {
                      "line": 41,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "ShearTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 78
                }
              },
              "preview": "explicit ShearTimeline(size_t frameCount, size_t bezierCount, int boneIndex);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 41
                }
              },
              "preview": "virtual void apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
            }
          ]
        },
        {
          "name": "ShearXTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
          "range": {
            "start": {
              "line": 52,
              "character": 0
            },
            "end": {
              "line": 65,
              "character": 2
            }
          },
          "preview": "class SP_API ShearXTimeline : public BoneTimeline1 {",
          "documentation": "Changes a bone's local shear X.",
          "supertypes": [
            "BoneTimeline1"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
                  "range": {
                    "start": {
                      "line": 57,
                      "character": 0
                    },
                    "end": {
                      "line": 57,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
                  "range": {
                    "start": {
                      "line": 57,
                      "character": 0
                    },
                    "end": {
                      "line": 57,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "ShearXTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 79
                }
              },
              "preview": "explicit ShearXTimeline(size_t frameCount, size_t bezierCount, int boneIndex);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 41
                }
              },
              "preview": "virtual void apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
            }
          ]
        },
        {
          "name": "ShearYTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
          "range": {
            "start": {
              "line": 68,
              "character": 0
            },
            "end": {
              "line": 81,
              "character": 2
            }
          },
          "preview": "class SP_API ShearYTimeline : public BoneTimeline1 {",
          "documentation": "Changes a bone's local shear Y.",
          "supertypes": [
            "BoneTimeline1"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
                  "range": {
                    "start": {
                      "line": 73,
                      "character": 0
                    },
                    "end": {
                      "line": 73,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
                  "range": {
                    "start": {
                      "line": 73,
                      "character": 0
                    },
                    "end": {
                      "line": 73,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "ShearYTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 79
                }
              },
              "preview": "explicit ShearYTimeline(size_t frameCount, size_t bezierCount, int boneIndex);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/ShearTimeline.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 41
                }
              },
              "preview": "virtual void apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 326,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "SkeletonData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 19
            }
          },
          "preview": "class SkeletonData;"
        },
        {
          "name": "Bone",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
          "range": {
            "start": {
              "line": 45,
              "character": 0
            },
            "end": {
              "line": 45,
              "character": 11
            }
          },
          "preview": "class Bone;"
        },
        {
          "name": "BonePose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
          "range": {
            "start": {
              "line": 47,
              "character": 0
            },
            "end": {
              "line": 47,
              "character": 15
            }
          },
          "preview": "class BonePose;"
        },
        {
          "name": "Updatable",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
          "range": {
            "start": {
              "line": 49,
              "character": 0
            },
            "end": {
              "line": 49,
              "character": 16
            }
          },
          "preview": "class Updatable;"
        },
        {
          "name": "Slot",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
          "range": {
            "start": {
              "line": 51,
              "character": 0
            },
            "end": {
              "line": 51,
              "character": 11
            }
          },
          "preview": "class Slot;"
        },
        {
          "name": "IkConstraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
          "range": {
            "start": {
              "line": 53,
              "character": 0
            },
            "end": {
              "line": 53,
              "character": 19
            }
          },
          "preview": "class IkConstraint;"
        },
        {
          "name": "PathConstraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
          "range": {
            "start": {
              "line": 55,
              "character": 0
            },
            "end": {
              "line": 55,
              "character": 21
            }
          },
          "preview": "class PathConstraint;"
        },
        {
          "name": "PhysicsConstraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
          "range": {
            "start": {
              "line": 57,
              "character": 0
            },
            "end": {
              "line": 57,
              "character": 24
            }
          },
          "preview": "class PhysicsConstraint;"
        },
        {
          "name": "TransformConstraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
          "range": {
            "start": {
              "line": 59,
              "character": 0
            },
            "end": {
              "line": 59,
              "character": 26
            }
          },
          "preview": "class TransformConstraint;"
        },
        {
          "name": "Skin",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
          "range": {
            "start": {
              "line": 61,
              "character": 0
            },
            "end": {
              "line": 61,
              "character": 11
            }
          },
          "preview": "class Skin;"
        },
        {
          "name": "Attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
          "range": {
            "start": {
              "line": 63,
              "character": 0
            },
            "end": {
              "line": 63,
              "character": 17
            }
          },
          "preview": "class Attachment;"
        },
        {
          "name": "SkeletonClipping",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
          "range": {
            "start": {
              "line": 65,
              "character": 0
            },
            "end": {
              "line": 65,
              "character": 23
            }
          },
          "preview": "class SkeletonClipping;"
        },
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
          "range": {
            "start": {
              "line": 67,
              "character": 0
            },
            "end": {
              "line": 325,
              "character": 2
            }
          },
          "preview": "class SP_API Skeleton : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "Skeleton",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 153,
                  "character": 0
                },
                "end": {
                  "line": 153,
                  "character": 47
                }
              },
              "preview": "explicit Skeleton(SkeletonData &skeletonData);"
            },
            {
              "name": "~Skeleton",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 155,
                  "character": 0
                },
                "end": {
                  "line": 155,
                  "character": 13
                }
              },
              "preview": "~Skeleton();"
            },
            {
              "name": "updateCache",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 159,
                  "character": 0
                },
                "end": {
                  "line": 159,
                  "character": 20
                }
              },
              "preview": "void updateCache();",
              "documentation": "Caches information about bones and constraints. Must be called if bones, constraints or weighted path attachments are added\nor removed."
            },
            {
              "name": "printUpdateCache",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 161,
                  "character": 0
                },
                "end": {
                  "line": 161,
                  "character": 25
                }
              },
              "preview": "void printUpdateCache();"
            },
            {
              "name": "constrained",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 163,
                  "character": 0
                },
                "end": {
                  "line": 163,
                  "character": 33
                }
              },
              "preview": "void constrained(Posed &object);"
            },
            {
              "name": "sortBone",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 165,
                  "character": 0
                },
                "end": {
                  "line": 165,
                  "character": 27
                }
              },
              "preview": "void sortBone(Bone *bone);"
            },
            {
              "name": "sortReset",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 167,
                  "character": 0
                },
                "end": {
                  "line": 167,
                  "character": 46
                }
              },
              "preview": "static void sortReset(Vector<Bone *> &bones);"
            },
            {
              "name": "updateWorldTransform",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 173,
                  "character": 0
                },
                "end": {
                  "line": 173,
                  "character": 44
                }
              },
              "preview": "void updateWorldTransform(Physics physics);",
              "documentation": "Updates the world transform for each bone and applies all constraints.\nSee [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\nRuntimes Guide."
            },
            {
              "name": "updateWorldTransform",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 175,
                  "character": 0
                },
                "end": {
                  "line": 175,
                  "character": 62
                }
              },
              "preview": "void updateWorldTransform(Physics physics, BonePose *parent);"
            },
            {
              "name": "setupPose",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 178,
                  "character": 0
                },
                "end": {
                  "line": 178,
                  "character": 18
                }
              },
              "preview": "void setupPose();",
              "documentation": "Sets the bones, constraints, and slots to their setup pose values."
            },
            {
              "name": "setupPoseBones",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 181,
                  "character": 0
                },
                "end": {
                  "line": 181,
                  "character": 23
                }
              },
              "preview": "void setupPoseBones();",
              "documentation": "Sets the bones and constraints to their setup pose values."
            },
            {
              "name": "setupPoseSlots",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 183,
                  "character": 0
                },
                "end": {
                  "line": 183,
                  "character": 23
                }
              },
              "preview": "void setupPoseSlots();"
            },
            {
              "name": "getData",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 185,
                  "character": 0
                },
                "end": {
                  "line": 185,
                  "character": 25
                }
              },
              "preview": "SkeletonData *getData();"
            },
            {
              "name": "getBones",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 187,
                  "character": 0
                },
                "end": {
                  "line": 187,
                  "character": 28
                }
              },
              "preview": "Vector<Bone *> &getBones();"
            },
            {
              "name": "getUpdateCache",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 189,
                  "character": 0
                },
                "end": {
                  "line": 189,
                  "character": 36
                }
              },
              "preview": "Vector<Update *> &getUpdateCache();"
            },
            {
              "name": "getRootBone",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 191,
                  "character": 0
                },
                "end": {
                  "line": 191,
                  "character": 21
                }
              },
              "preview": "Bone *getRootBone();"
            },
            {
              "name": "findBone",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 194,
                  "character": 0
                },
                "end": {
                  "line": 194,
                  "character": 40
                }
              },
              "preview": "Bone *findBone(const String &boneName);",
              "documentation": "@return May be NULL."
            },
            {
              "name": "getSlots",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 196,
                  "character": 0
                },
                "end": {
                  "line": 196,
                  "character": 28
                }
              },
              "preview": "Vector<Slot *> &getSlots();"
            },
            {
              "name": "findSlot",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 199,
                  "character": 0
                },
                "end": {
                  "line": 199,
                  "character": 40
                }
              },
              "preview": "Slot *findSlot(const String &slotName);",
              "documentation": "@return May be NULL."
            },
            {
              "name": "getDrawOrder",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 201,
                  "character": 0
                },
                "end": {
                  "line": 201,
                  "character": 32
                }
              },
              "preview": "Vector<Slot *> &getDrawOrder();"
            },
            {
              "name": "getSkin",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 203,
                  "character": 0
                },
                "end": {
                  "line": 203,
                  "character": 17
                }
              },
              "preview": "Skin *getSkin();"
            },
            {
              "name": "setSkin",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 206,
                  "character": 0
                },
                "end": {
                  "line": 206,
                  "character": 38
                }
              },
              "preview": "void setSkin(const String &skinName);",
              "documentation": "Sets a skin by name (see setSkin)."
            },
            {
              "name": "setSkin",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 215,
                  "character": 0
                },
                "end": {
                  "line": 215,
                  "character": 29
                }
              },
              "preview": "void setSkin(Skin *newSkin);",
              "documentation": "Attachments from the new skin are attached if the corresponding attachment from the old skin was attached.\nIf there was no old skin, each slot's setup mode attachment is attached from the new skin.\nAfter changing the skin, the visible attachments can be reset to those attached in the setup pose by calling\nSee Skeleton::setSlotsToSetupPose()\nAlso, often AnimationState::apply(Skeleton&) is called before the next time the\nskeleton is rendered to allow any attachment keys in the current animation(s) to hide or show attachments from the new skin.\n@param newSkin May be NULL."
            },
            {
              "name": "getAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 218,
                  "character": 0
                },
                "end": {
                  "line": 218,
                  "character": 81
                }
              },
              "preview": "Attachment *getAttachment(const String &slotName, const String &attachmentName);",
              "documentation": "@return May be NULL."
            },
            {
              "name": "getAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 221,
                  "character": 0
                },
                "end": {
                  "line": 221,
                  "character": 72
                }
              },
              "preview": "Attachment *getAttachment(int slotIndex, const String &attachmentName);",
              "documentation": "@return May be NULL."
            },
            {
              "name": "setAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 224,
                  "character": 0
                },
                "end": {
                  "line": 224,
                  "character": 74
                }
              },
              "preview": "void setAttachment(const String &slotName, const String &attachmentName);",
              "documentation": "@param attachmentName May be empty."
            },
            {
              "name": "getConstraints",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 226,
                  "character": 0
                },
                "end": {
                  "line": 226,
                  "character": 40
                }
              },
              "preview": "Vector<Constraint *> &getConstraints();"
            },
            {
              "name": "getPhysicsConstraints",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 228,
                  "character": 0
                },
                "end": {
                  "line": 228,
                  "character": 54
                }
              },
              "preview": "Vector<PhysicsConstraint *> &getPhysicsConstraints();"
            },
            {
              "name": "findConstraint",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 231,
                  "character": 0
                },
                "end": {
                  "line": 242,
                  "character": 3
                }
              },
              "preview": "T *findConstraint(const String &constraintName) {"
            },
            {
              "name": "getBounds",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 251,
                  "character": 0
                },
                "end": {
                  "line": 251,
                  "character": 109
                }
              },
              "preview": "void getBounds(float &outX, float &outY, float &outWidth, float &outHeight, Vector<float> &outVertexBuffer);"
            },
            {
              "name": "getBounds",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 252,
                  "character": 0
                },
                "end": {
                  "line": 252,
                  "character": 136
                }
              },
              "preview": "void getBounds(float &outX, float &outY, float &outWidth, float &outHeight, Vector<float> &outVertexBuffer, SkeletonClipping *clipper);"
            },
            {
              "name": "getColor",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 254,
                  "character": 0
                },
                "end": {
                  "line": 254,
                  "character": 19
                }
              },
              "preview": "Color &getColor();"
            },
            {
              "name": "setColor",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 256,
                  "character": 0
                },
                "end": {
                  "line": 256,
                  "character": 29
                }
              },
              "preview": "void setColor(Color &color);"
            },
            {
              "name": "setColor",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 258,
                  "character": 0
                },
                "end": {
                  "line": 258,
                  "character": 51
                }
              },
              "preview": "void setColor(float r, float g, float b, float a);"
            },
            {
              "name": "getScaleX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 260,
                  "character": 0
                },
                "end": {
                  "line": 260,
                  "character": 19
                }
              },
              "preview": "float getScaleX();"
            },
            {
              "name": "setScaleX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 262,
                  "character": 0
                },
                "end": {
                  "line": 262,
                  "character": 31
                }
              },
              "preview": "void setScaleX(float inValue);"
            },
            {
              "name": "getScaleY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 264,
                  "character": 0
                },
                "end": {
                  "line": 264,
                  "character": 19
                }
              },
              "preview": "float getScaleY();"
            },
            {
              "name": "setScaleY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 266,
                  "character": 0
                },
                "end": {
                  "line": 266,
                  "character": 31
                }
              },
              "preview": "void setScaleY(float inValue);"
            },
            {
              "name": "setScale",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 268,
                  "character": 0
                },
                "end": {
                  "line": 268,
                  "character": 43
                }
              },
              "preview": "void setScale(float scaleX, float scaleY);"
            },
            {
              "name": "getX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 270,
                  "character": 0
                },
                "end": {
                  "line": 270,
                  "character": 14
                }
              },
              "preview": "float getX();"
            },
            {
              "name": "setX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 272,
                  "character": 0
                },
                "end": {
                  "line": 272,
                  "character": 26
                }
              },
              "preview": "void setX(float inValue);"
            },
            {
              "name": "getY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 274,
                  "character": 0
                },
                "end": {
                  "line": 274,
                  "character": 14
                }
              },
              "preview": "float getY();"
            },
            {
              "name": "setY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 276,
                  "character": 0
                },
                "end": {
                  "line": 276,
                  "character": 26
                }
              },
              "preview": "void setY(float inValue);"
            },
            {
              "name": "setPosition",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 278,
                  "character": 0
                },
                "end": {
                  "line": 278,
                  "character": 36
                }
              },
              "preview": "void setPosition(float x, float y);"
            },
            {
              "name": "getWindX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 280,
                  "character": 0
                },
                "end": {
                  "line": 280,
                  "character": 18
                }
              },
              "preview": "float getWindX();"
            },
            {
              "name": "setWindX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 282,
                  "character": 0
                },
                "end": {
                  "line": 282,
                  "character": 28
                }
              },
              "preview": "void setWindX(float windX);"
            },
            {
              "name": "getWindY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 284,
                  "character": 0
                },
                "end": {
                  "line": 284,
                  "character": 18
                }
              },
              "preview": "float getWindY();"
            },
            {
              "name": "setWindY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 286,
                  "character": 0
                },
                "end": {
                  "line": 286,
                  "character": 28
                }
              },
              "preview": "void setWindY(float windY);"
            },
            {
              "name": "getGravityX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 288,
                  "character": 0
                },
                "end": {
                  "line": 288,
                  "character": 21
                }
              },
              "preview": "float getGravityX();"
            },
            {
              "name": "setGravityX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 290,
                  "character": 0
                },
                "end": {
                  "line": 290,
                  "character": 34
                }
              },
              "preview": "void setGravityX(float gravityX);"
            },
            {
              "name": "getGravityY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 292,
                  "character": 0
                },
                "end": {
                  "line": 292,
                  "character": 21
                }
              },
              "preview": "float getGravityY();"
            },
            {
              "name": "setGravityY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 294,
                  "character": 0
                },
                "end": {
                  "line": 294,
                  "character": 34
                }
              },
              "preview": "void setGravityY(float gravityY);"
            },
            {
              "name": "physicsTranslate",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 298,
                  "character": 0
                },
                "end": {
                  "line": 298,
                  "character": 41
                }
              },
              "preview": "void physicsTranslate(float x, float y);",
              "documentation": "Rotates the physics constraint so next {@link #update(Physics)} forces are applied as if the bone rotated around the\nspecified point in world space."
            },
            {
              "name": "physicsRotate",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 301,
                  "character": 0
                },
                "end": {
                  "line": 301,
                  "character": 53
                }
              },
              "preview": "void physicsRotate(float x, float y, float degrees);",
              "documentation": "Calls {@link PhysicsConstraint#rotate(float, float, float)} for each physics constraint. */"
            },
            {
              "name": "getTime",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 303,
                  "character": 0
                },
                "end": {
                  "line": 303,
                  "character": 17
                }
              },
              "preview": "float getTime();"
            },
            {
              "name": "setTime",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 305,
                  "character": 0
                },
                "end": {
                  "line": 305,
                  "character": 26
                }
              },
              "preview": "void setTime(float time);"
            },
            {
              "name": "update",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 307,
                  "character": 0
                },
                "end": {
                  "line": 307,
                  "character": 26
                }
              },
              "preview": "void update(float delta);"
            },
            {
              "name": "_data",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 310,
                  "character": 0
                },
                "end": {
                  "line": 310,
                  "character": 21
                }
              },
              "preview": "SkeletonData &_data;"
            },
            {
              "name": "_bones",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 311,
                  "character": 0
                },
                "end": {
                  "line": 311,
                  "character": 23
                }
              },
              "preview": "Vector<Bone *> _bones;"
            },
            {
              "name": "_slots",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 312,
                  "character": 0
                },
                "end": {
                  "line": 312,
                  "character": 23
                }
              },
              "preview": "Vector<Slot *> _slots;"
            },
            {
              "name": "_drawOrder",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 313,
                  "character": 0
                },
                "end": {
                  "line": 313,
                  "character": 27
                }
              },
              "preview": "Vector<Slot *> _drawOrder;"
            },
            {
              "name": "_constraints",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 314,
                  "character": 0
                },
                "end": {
                  "line": 314,
                  "character": 35
                }
              },
              "preview": "Vector<Constraint *> _constraints;"
            },
            {
              "name": "_physics",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 315,
                  "character": 0
                },
                "end": {
                  "line": 315,
                  "character": 38
                }
              },
              "preview": "Vector<PhysicsConstraint *> _physics;"
            },
            {
              "name": "_updateCache",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 316,
                  "character": 0
                },
                "end": {
                  "line": 316,
                  "character": 31
                }
              },
              "preview": "Vector<Update *> _updateCache;"
            },
            {
              "name": "_resetCache",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 317,
                  "character": 0
                },
                "end": {
                  "line": 317,
                  "character": 29
                }
              },
              "preview": "Vector<Posed *> _resetCache;"
            },
            {
              "name": "_skin",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 318,
                  "character": 0
                },
                "end": {
                  "line": 318,
                  "character": 13
                }
              },
              "preview": "Skin *_skin;"
            },
            {
              "name": "_color",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 319,
                  "character": 0
                },
                "end": {
                  "line": 319,
                  "character": 14
                }
              },
              "preview": "Color _color;"
            },
            {
              "name": "_x",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 320,
                  "character": 0
                },
                "end": {
                  "line": 320,
                  "character": 10
                }
              },
              "preview": "float _x, _y;"
            },
            {
              "name": "_y",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 320,
                  "character": 0
                },
                "end": {
                  "line": 320,
                  "character": 14
                }
              },
              "preview": "float _x, _y;"
            },
            {
              "name": "_scaleX",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 321,
                  "character": 0
                },
                "end": {
                  "line": 321,
                  "character": 15
                }
              },
              "preview": "float _scaleX, _scaleY;"
            },
            {
              "name": "_scaleY",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 321,
                  "character": 0
                },
                "end": {
                  "line": 321,
                  "character": 24
                }
              },
              "preview": "float _scaleX, _scaleY;"
            },
            {
              "name": "_windX",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 322,
                  "character": 0
                },
                "end": {
                  "line": 322,
                  "character": 14
                }
              },
              "preview": "float _windX, _windY, _gravityX, _gravityY;"
            },
            {
              "name": "_windY",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 322,
                  "character": 0
                },
                "end": {
                  "line": 322,
                  "character": 22
                }
              },
              "preview": "float _windX, _windY, _gravityX, _gravityY;"
            },
            {
              "name": "_gravityX",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 322,
                  "character": 0
                },
                "end": {
                  "line": 322,
                  "character": 33
                }
              },
              "preview": "float _windX, _windY, _gravityX, _gravityY;"
            },
            {
              "name": "_gravityY",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 322,
                  "character": 0
                },
                "end": {
                  "line": 322,
                  "character": 44
                }
              },
              "preview": "float _windX, _windY, _gravityX, _gravityY;"
            },
            {
              "name": "_time",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 323,
                  "character": 0
                },
                "end": {
                  "line": 323,
                  "character": 13
                }
              },
              "preview": "float _time;"
            },
            {
              "name": "_update",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skeleton.h",
              "range": {
                "start": {
                  "line": 324,
                  "character": 0
                },
                "end": {
                  "line": 324,
                  "character": 13
                }
              },
              "preview": "int _update;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 175,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "SkeletonData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 19
            }
          },
          "preview": "class SkeletonData;"
        },
        {
          "name": "Atlas",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 12
            }
          },
          "preview": "class Atlas;"
        },
        {
          "name": "AttachmentLoader",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 23
            }
          },
          "preview": "class AttachmentLoader;"
        },
        {
          "name": "LinkedMesh",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
          "range": {
            "start": {
              "line": 45,
              "character": 0
            },
            "end": {
              "line": 45,
              "character": 17
            }
          },
          "preview": "class LinkedMesh;"
        },
        {
          "name": "Skin",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
          "range": {
            "start": {
              "line": 47,
              "character": 0
            },
            "end": {
              "line": 47,
              "character": 11
            }
          },
          "preview": "class Skin;"
        },
        {
          "name": "Attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
          "range": {
            "start": {
              "line": 49,
              "character": 0
            },
            "end": {
              "line": 49,
              "character": 17
            }
          },
          "preview": "class Attachment;"
        },
        {
          "name": "VertexAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
          "range": {
            "start": {
              "line": 51,
              "character": 0
            },
            "end": {
              "line": 51,
              "character": 23
            }
          },
          "preview": "class VertexAttachment;"
        },
        {
          "name": "Animation",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
          "range": {
            "start": {
              "line": 53,
              "character": 0
            },
            "end": {
              "line": 53,
              "character": 16
            }
          },
          "preview": "class Animation;"
        },
        {
          "name": "Timeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
          "range": {
            "start": {
              "line": 55,
              "character": 0
            },
            "end": {
              "line": 55,
              "character": 15
            }
          },
          "preview": "class Timeline;"
        },
        {
          "name": "CurveTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
          "range": {
            "start": {
              "line": 57,
              "character": 0
            },
            "end": {
              "line": 57,
              "character": 20
            }
          },
          "preview": "class CurveTimeline;"
        },
        {
          "name": "CurveTimeline1",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
          "range": {
            "start": {
              "line": 59,
              "character": 0
            },
            "end": {
              "line": 59,
              "character": 21
            }
          },
          "preview": "class CurveTimeline1;"
        },
        {
          "name": "CurveTimeline2",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
          "range": {
            "start": {
              "line": 61,
              "character": 0
            },
            "end": {
              "line": 61,
              "character": 21
            }
          },
          "preview": "class CurveTimeline2;"
        },
        {
          "name": "Sequence",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
          "range": {
            "start": {
              "line": 63,
              "character": 0
            },
            "end": {
              "line": 63,
              "character": 15
            }
          },
          "preview": "class Sequence;"
        },
        {
          "name": "SkeletonBinary",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
          "range": {
            "start": {
              "line": 65,
              "character": 0
            },
            "end": {
              "line": 174,
              "character": 2
            }
          },
          "preview": "class SP_API SkeletonBinary : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "BONE_ROTATE",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 67,
                  "character": 0
                },
                "end": {
                  "line": 67,
                  "character": 34
                }
              },
              "preview": "static const int BONE_ROTATE = 0;"
            },
            {
              "name": "BONE_TRANSLATE",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 37
                }
              },
              "preview": "static const int BONE_TRANSLATE = 1;"
            },
            {
              "name": "BONE_TRANSLATEX",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 38
                }
              },
              "preview": "static const int BONE_TRANSLATEX = 2;"
            },
            {
              "name": "BONE_TRANSLATEY",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 38
                }
              },
              "preview": "static const int BONE_TRANSLATEY = 3;"
            },
            {
              "name": "BONE_SCALE",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 33
                }
              },
              "preview": "static const int BONE_SCALE = 4;"
            },
            {
              "name": "BONE_SCALEX",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 34
                }
              },
              "preview": "static const int BONE_SCALEX = 5;"
            },
            {
              "name": "BONE_SCALEY",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 34
                }
              },
              "preview": "static const int BONE_SCALEY = 6;"
            },
            {
              "name": "BONE_SHEAR",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 33
                }
              },
              "preview": "static const int BONE_SHEAR = 7;"
            },
            {
              "name": "BONE_SHEARX",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 34
                }
              },
              "preview": "static const int BONE_SHEARX = 8;"
            },
            {
              "name": "BONE_SHEARY",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 34
                }
              },
              "preview": "static const int BONE_SHEARY = 9;"
            },
            {
              "name": "BONE_INHERIT",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 42
                }
              },
              "preview": "static const int BONE_INHERIT = 10;"
            },
            {
              "name": "SLOT_ATTACHMENT",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 79,
                  "character": 38
                }
              },
              "preview": "static const int SLOT_ATTACHMENT = 0;"
            },
            {
              "name": "SLOT_RGBA",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 32
                }
              },
              "preview": "static const int SLOT_RGBA = 1;"
            },
            {
              "name": "SLOT_RGB",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 31
                }
              },
              "preview": "static const int SLOT_RGB = 2;"
            },
            {
              "name": "SLOT_RGBA2",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 82,
                  "character": 0
                },
                "end": {
                  "line": 82,
                  "character": 33
                }
              },
              "preview": "static const int SLOT_RGBA2 = 3;"
            },
            {
              "name": "SLOT_RGB2",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 32
                }
              },
              "preview": "static const int SLOT_RGB2 = 4;"
            },
            {
              "name": "SLOT_ALPHA",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 33
                }
              },
              "preview": "static const int SLOT_ALPHA = 5;"
            },
            {
              "name": "ATTACHMENT_DEFORM",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 86,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 40
                }
              },
              "preview": "static const int ATTACHMENT_DEFORM = 0;"
            },
            {
              "name": "ATTACHMENT_SEQUENCE",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 42
                }
              },
              "preview": "static const int ATTACHMENT_SEQUENCE = 1;"
            },
            {
              "name": "PATH_POSITION",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 89,
                  "character": 0
                },
                "end": {
                  "line": 89,
                  "character": 36
                }
              },
              "preview": "static const int PATH_POSITION = 0;"
            },
            {
              "name": "PATH_SPACING",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 90,
                  "character": 0
                },
                "end": {
                  "line": 90,
                  "character": 35
                }
              },
              "preview": "static const int PATH_SPACING = 1;"
            },
            {
              "name": "PATH_MIX",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 91,
                  "character": 0
                },
                "end": {
                  "line": 91,
                  "character": 31
                }
              },
              "preview": "static const int PATH_MIX = 2;"
            },
            {
              "name": "PHYSICS_INERTIA",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 93,
                  "character": 0
                },
                "end": {
                  "line": 93,
                  "character": 44
                }
              },
              "preview": "static const int PHYSICS_INERTIA = 0;"
            },
            {
              "name": "PHYSICS_STRENGTH",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 94,
                  "character": 45
                }
              },
              "preview": "static const int PHYSICS_STRENGTH = 1;"
            },
            {
              "name": "PHYSICS_DAMPING",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 95,
                  "character": 0
                },
                "end": {
                  "line": 95,
                  "character": 44
                }
              },
              "preview": "static const int PHYSICS_DAMPING = 2;"
            },
            {
              "name": "PHYSICS_MASS",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 96,
                  "character": 0
                },
                "end": {
                  "line": 96,
                  "character": 41
                }
              },
              "preview": "static const int PHYSICS_MASS = 4;"
            },
            {
              "name": "PHYSICS_WIND",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 97,
                  "character": 0
                },
                "end": {
                  "line": 97,
                  "character": 41
                }
              },
              "preview": "static const int PHYSICS_WIND = 5;"
            },
            {
              "name": "PHYSICS_GRAVITY",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 98,
                  "character": 0
                },
                "end": {
                  "line": 98,
                  "character": 44
                }
              },
              "preview": "static const int PHYSICS_GRAVITY = 6;"
            },
            {
              "name": "PHYSICS_MIX",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 99,
                  "character": 0
                },
                "end": {
                  "line": 99,
                  "character": 40
                }
              },
              "preview": "static const int PHYSICS_MIX = 7;"
            },
            {
              "name": "PHYSICS_RESET",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 100,
                  "character": 0
                },
                "end": {
                  "line": 100,
                  "character": 42
                }
              },
              "preview": "static const int PHYSICS_RESET = 8;"
            },
            {
              "name": "CURVE_LINEAR",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 102,
                  "character": 0
                },
                "end": {
                  "line": 102,
                  "character": 35
                }
              },
              "preview": "static const int CURVE_LINEAR = 0;"
            },
            {
              "name": "CURVE_STEPPED",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 36
                }
              },
              "preview": "static const int CURVE_STEPPED = 1;"
            },
            {
              "name": "CURVE_BEZIER",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 35
                }
              },
              "preview": "static const int CURVE_BEZIER = 2;"
            },
            {
              "name": "SkeletonBinary",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 106,
                  "character": 0
                },
                "end": {
                  "line": 106,
                  "character": 44
                }
              },
              "preview": "explicit SkeletonBinary(Atlas *atlasArray);"
            },
            {
              "name": "SkeletonBinary",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 108,
                  "character": 0
                },
                "end": {
                  "line": 108,
                  "character": 86
                }
              },
              "preview": "explicit SkeletonBinary(AttachmentLoader *attachmentLoader, bool ownsLoader = false);"
            },
            {
              "name": "~SkeletonBinary",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 110,
                  "character": 0
                },
                "end": {
                  "line": 110,
                  "character": 19
                }
              },
              "preview": "~SkeletonBinary();"
            },
            {
              "name": "readSkeletonData",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 112,
                  "character": 0
                },
                "end": {
                  "line": 112,
                  "character": 73
                }
              },
              "preview": "SkeletonData *readSkeletonData(const unsigned char *binary, int length);"
            },
            {
              "name": "readSkeletonDataFile",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 114,
                  "character": 0
                },
                "end": {
                  "line": 114,
                  "character": 56
                }
              },
              "preview": "SkeletonData *readSkeletonDataFile(const String &path);"
            },
            {
              "name": "setScale",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 116,
                  "character": 0
                },
                "end": {
                  "line": 116,
                  "character": 48
                }
              },
              "preview": "void setScale(float scale) { _scale = scale; }"
            },
            {
              "name": "getError",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 118,
                  "character": 0
                },
                "end": {
                  "line": 118,
                  "character": 39
                }
              },
              "preview": "String &getError() { return _error; }"
            },
            {
              "name": "DataInput",
              "kind": "class",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 121,
                  "character": 0
                },
                "end": {
                  "line": 124,
                  "character": 3
                }
              },
              "preview": "struct DataInput : public SpineObject {",
              "supertypes": [
                "SpineObject"
              ],
              "children": [
                {
                  "name": "cursor",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
                  "range": {
                    "start": {
                      "line": 122,
                      "character": 0
                    },
                    "end": {
                      "line": 122,
                      "character": 30
                    }
                  },
                  "preview": "const unsigned char *cursor;"
                },
                {
                  "name": "end",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
                  "range": {
                    "start": {
                      "line": 123,
                      "character": 0
                    },
                    "end": {
                      "line": 123,
                      "character": 27
                    }
                  },
                  "preview": "const unsigned char *end;"
                }
              ]
            },
            {
              "name": "_attachmentLoader",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 126,
                  "character": 0
                },
                "end": {
                  "line": 126,
                  "character": 37
                }
              },
              "preview": "AttachmentLoader *_attachmentLoader;"
            },
            {
              "name": "_linkedMeshes",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 127,
                  "character": 0
                },
                "end": {
                  "line": 127,
                  "character": 36
                }
              },
              "preview": "Vector<LinkedMesh *> _linkedMeshes;"
            },
            {
              "name": "_error",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 128,
                  "character": 0
                },
                "end": {
                  "line": 128,
                  "character": 15
                }
              },
              "preview": "String _error;"
            },
            {
              "name": "_scale",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 129,
                  "character": 0
                },
                "end": {
                  "line": 129,
                  "character": 14
                }
              },
              "preview": "float _scale;"
            },
            {
              "name": "_ownsLoader",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 130,
                  "character": 24
                }
              },
              "preview": "const bool _ownsLoader;"
            },
            {
              "name": "setError",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 132,
                  "character": 0
                },
                "end": {
                  "line": 132,
                  "character": 55
                }
              },
              "preview": "void setError(const char *value1, const char *value2);"
            },
            {
              "name": "readString",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 134,
                  "character": 0
                },
                "end": {
                  "line": 134,
                  "character": 36
                }
              },
              "preview": "char *readString(DataInput *input);"
            },
            {
              "name": "readStringRef",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 136,
                  "character": 0
                },
                "end": {
                  "line": 136,
                  "character": 67
                }
              },
              "preview": "char *readStringRef(DataInput *input, SkeletonData *skeletonData);"
            },
            {
              "name": "readFloat",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 138,
                  "character": 0
                },
                "end": {
                  "line": 138,
                  "character": 35
                }
              },
              "preview": "float readFloat(DataInput *input);"
            },
            {
              "name": "readByte",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 140,
                  "character": 0
                },
                "end": {
                  "line": 140,
                  "character": 42
                }
              },
              "preview": "unsigned char readByte(DataInput *input);"
            },
            {
              "name": "readSByte",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 142,
                  "character": 0
                },
                "end": {
                  "line": 142,
                  "character": 41
                }
              },
              "preview": "signed char readSByte(DataInput *input);"
            },
            {
              "name": "readBoolean",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 144,
                  "character": 0
                },
                "end": {
                  "line": 144,
                  "character": 36
                }
              },
              "preview": "bool readBoolean(DataInput *input);"
            },
            {
              "name": "readInt",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 146,
                  "character": 0
                },
                "end": {
                  "line": 146,
                  "character": 31
                }
              },
              "preview": "int readInt(DataInput *input);"
            },
            {
              "name": "readColor",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 148,
                  "character": 0
                },
                "end": {
                  "line": 148,
                  "character": 48
                }
              },
              "preview": "void readColor(DataInput *input, Color &color);"
            },
            {
              "name": "readVarint",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 150,
                  "character": 0
                },
                "end": {
                  "line": 150,
                  "character": 57
                }
              },
              "preview": "int readVarint(DataInput *input, bool optimizePositive);"
            },
            {
              "name": "readSkin",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 152,
                  "character": 0
                },
                "end": {
                  "line": 152,
                  "character": 99
                }
              },
              "preview": "Skin *readSkin(DataInput *input, bool defaultSkin, SkeletonData *skeletonData, bool nonessential);"
            },
            {
              "name": "readSequence",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 154,
                  "character": 0
                },
                "end": {
                  "line": 154,
                  "character": 42
                }
              },
              "preview": "Sequence *readSequence(DataInput *input);"
            },
            {
              "name": "readAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 156,
                  "character": 0
                },
                "end": {
                  "line": 157,
                  "character": 57
                }
              },
              "preview": "Attachment *readAttachment(DataInput *input, Skin *skin, int slotIndex, const String &attachmentName,"
            },
            {
              "name": "readVertices",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 159,
                  "character": 0
                },
                "end": {
                  "line": 159,
                  "character": 96
                }
              },
              "preview": "int readVertices(DataInput *input, Vector<float> &vertices, Vector<int> &bones, bool weighted);"
            },
            {
              "name": "readFloatArray",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 161,
                  "character": 0
                },
                "end": {
                  "line": 161,
                  "character": 81
                }
              },
              "preview": "void readFloatArray(DataInput *input, int n, float scale, Vector<float> &array);"
            },
            {
              "name": "readShortArray",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 163,
                  "character": 0
                },
                "end": {
                  "line": 163,
                  "character": 77
                }
              },
              "preview": "void readShortArray(DataInput *input, Vector<unsigned short> &array, int n);"
            },
            {
              "name": "readAnimation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 165,
                  "character": 0
                },
                "end": {
                  "line": 165,
                  "character": 92
                }
              },
              "preview": "Animation *readAnimation(const String &name, DataInput *input, SkeletonData *skeletonData);"
            },
            {
              "name": "setBezier",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 168,
                  "character": 0
                },
                "end": {
                  "line": 169,
                  "character": 46
                }
              },
              "preview": "setBezier(DataInput *input, CurveTimeline *timeline, int bezier, int frame, int value, float time1, float time2,"
            },
            {
              "name": "readTimeline",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 171,
                  "character": 0
                },
                "end": {
                  "line": 171,
                  "character": 106
                }
              },
              "preview": "void readTimeline(DataInput *input, Vector<Timeline*> &timelines, CurveTimeline1 *timeline, float scale);"
            },
            {
              "name": "readTimeline2",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBinary.h",
              "range": {
                "start": {
                  "line": 173,
                  "character": 0
                },
                "end": {
                  "line": 173,
                  "character": 107
                }
              },
              "preview": "void readTimeline2(DataInput *input, Vector<Timeline*> &timelines, CurveTimeline2 *timeline, float scale);"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 118,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "BoundingBoxAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 28
            }
          },
          "preview": "class BoundingBoxAttachment;"
        },
        {
          "name": "Polygon",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 14
            }
          },
          "preview": "class Polygon;",
          "supertypes": [
            "SpineObject"
          ]
        },
        {
          "name": "SkeletonBounds",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
          "range": {
            "start": {
              "line": 45,
              "character": 0
            },
            "end": {
              "line": 107,
              "character": 2
            }
          },
          "preview": "class SP_API SkeletonBounds : public SpineObject {",
          "documentation": "Collects each BoundingBoxAttachment that is visible and computes the world vertices for its polygon.\nThe polygon vertices are provided along with convenience methods for doing hit detection.",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "SkeletonBounds",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 18
                }
              },
              "preview": "SkeletonBounds();"
            },
            {
              "name": "~SkeletonBounds",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 19
                }
              },
              "preview": "~SkeletonBounds();"
            },
            {
              "name": "update",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 50
                }
              },
              "preview": "void update(Skeleton &skeleton, bool updateAabb);",
              "documentation": "Clears any previous polygons, finds all visible bounding box attachments,\nand computes the world vertices for each bounding box's polygon.\n@param skeleton The skeleton.\n@param updateAabb\nIf true, the axis aligned bounding box containing all the polygons is computed.\nIf false, the SkeletonBounds AABB methods will always return true."
            },
            {
              "name": "aabbContainsPoint",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 42
                }
              },
              "preview": "bool aabbContainsPoint(float x, float y);",
              "documentation": "Returns true if the axis aligned bounding box contains the point."
            },
            {
              "name": "aabbIntersectsSegment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 68
                }
              },
              "preview": "bool aabbIntersectsSegment(float x1, float y1, float x2, float y2);",
              "documentation": "Returns true if the axis aligned bounding box intersects the line segment."
            },
            {
              "name": "aabbIntersectsSkeleton",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 67,
                  "character": 0
                },
                "end": {
                  "line": 67,
                  "character": 53
                }
              },
              "preview": "bool aabbIntersectsSkeleton(SkeletonBounds &bounds);",
              "documentation": "Returns true if the axis aligned bounding box intersects the axis aligned bounding box of the specified bounds."
            },
            {
              "name": "containsPoint",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 56
                }
              },
              "preview": "bool containsPoint(Polygon *polygon, float x, float y);",
              "documentation": "Returns true if the polygon contains the point."
            },
            {
              "name": "containsPoint",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 56
                }
              },
              "preview": "BoundingBoxAttachment *containsPoint(float x, float y);",
              "documentation": "Returns the first bounding box attachment that contains the point, or null. When doing many checks, it is usually more\nefficient to only call this method if aabbContainsPoint(float, float) returns true."
            },
            {
              "name": "intersectsSegment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 78,
                  "character": 0
                },
                "end": {
                  "line": 78,
                  "character": 82
                }
              },
              "preview": "BoundingBoxAttachment *intersectsSegment(float x1, float y1, float x2, float y2);",
              "documentation": "Returns the first bounding box attachment that contains any part of the line segment, or null. When doing many checks, it\nis usually more efficient to only call this method if aabbIntersectsSegment(float, float, float, float) returns true."
            },
            {
              "name": "intersectsSegment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 82
                }
              },
              "preview": "bool intersectsSegment(Polygon *polygon, float x1, float y1, float x2, float y2);",
              "documentation": "Returns true if the polygon contains any part of the line segment."
            },
            {
              "name": "getPolygon",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 56
                }
              },
              "preview": "Polygon *getPolygon(BoundingBoxAttachment *attachment);",
              "documentation": "Returns the polygon for the given bounding box attachment or null if no\npolygon can be found for the attachment. Requires a call to update() first."
            },
            {
              "name": "getBoundingBox",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 88,
                  "character": 64
                }
              },
              "preview": "BoundingBoxAttachment * getBoundingBox(Polygon *polygon);",
              "documentation": "Returns the bounding box for the given polygon or null. Requires a call to update() first."
            },
            {
              "name": "getPolygons",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 91,
                  "character": 0
                },
                "end": {
                  "line": 91,
                  "character": 40
                }
              },
              "preview": "Vector<Polygon *> &getPolygons();",
              "documentation": "Returns all polygons or an empty vector. Requires a call to update() first."
            },
            {
              "name": "getBoundingBoxes",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 94,
                  "character": 59
                }
              },
              "preview": "Vector<BoundingBoxAttachment *> &getBoundingBoxes();",
              "documentation": "Returns all bounding boxes. Requires a call to update() first."
            },
            {
              "name": "getWidth",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 96,
                  "character": 0
                },
                "end": {
                  "line": 96,
                  "character": 18
                }
              },
              "preview": "float getWidth();"
            },
            {
              "name": "getHeight",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 98,
                  "character": 0
                },
                "end": {
                  "line": 98,
                  "character": 19
                }
              },
              "preview": "float getHeight();"
            },
            {
              "name": "_polygonPool",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 101,
                  "character": 0
                },
                "end": {
                  "line": 101,
                  "character": 29
                }
              },
              "preview": "Pool <Polygon> _polygonPool;"
            },
            {
              "name": "_boundingBoxes",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 102,
                  "character": 0
                },
                "end": {
                  "line": 102,
                  "character": 48
                }
              },
              "preview": "Vector<BoundingBoxAttachment *> _boundingBoxes;"
            },
            {
              "name": "_polygons",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 29
                }
              },
              "preview": "Vector<Polygon *> _polygons;"
            },
            {
              "name": "_minX",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 13
                }
              },
              "preview": "float _minX, _minY, _maxX, _maxY;"
            },
            {
              "name": "_minY",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 20
                }
              },
              "preview": "float _minX, _minY, _maxX, _maxY;"
            },
            {
              "name": "_maxX",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 27
                }
              },
              "preview": "float _minX, _minY, _maxX, _maxY;"
            },
            {
              "name": "_maxY",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 34
                }
              },
              "preview": "float _minX, _minY, _maxX, _maxY;"
            },
            {
              "name": "aabbCompute",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 106,
                  "character": 0
                },
                "end": {
                  "line": 106,
                  "character": 20
                }
              },
              "preview": "void aabbCompute();"
            }
          ]
        },
        {
          "name": "Polygon",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
          "range": {
            "start": {
              "line": 109,
              "character": 0
            },
            "end": {
              "line": 117,
              "character": 2
            }
          },
          "preview": "class Polygon : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "_vertices",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 111,
                  "character": 0
                },
                "end": {
                  "line": 111,
                  "character": 25
                }
              },
              "preview": "Vector<float> _vertices;"
            },
            {
              "name": "_count",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 112,
                  "character": 0
                },
                "end": {
                  "line": 112,
                  "character": 12
                }
              },
              "preview": "int _count;"
            },
            {
              "name": "Polygon",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonBounds.h",
              "range": {
                "start": {
                  "line": 114,
                  "character": 0
                },
                "end": {
                  "line": 116,
                  "character": 3
                }
              },
              "preview": "Polygon() : _count(0) {"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 85,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Slot",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 11
            }
          },
          "preview": "class Slot;"
        },
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "ClippingAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 25
            }
          },
          "preview": "class ClippingAttachment;"
        },
        {
          "name": "SkeletonClipping",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 84,
              "character": 2
            }
          },
          "preview": "class SP_API SkeletonClipping : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "SkeletonClipping",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 20
                }
              },
              "preview": "SkeletonClipping();"
            },
            {
              "name": "clipStart",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 76
                }
              },
              "preview": "size_t clipStart(Skeleton &skeleton, Slot &slot, ClippingAttachment *clip);"
            },
            {
              "name": "clipEnd",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 26
                }
              },
              "preview": "void clipEnd(Slot &slot);"
            },
            {
              "name": "clipEnd",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 16
                }
              },
              "preview": "void clipEnd();"
            },
            {
              "name": "clipTriangles",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 89
                }
              },
              "preview": "clipTriangles(float *vertices, unsigned short *triangles, size_t trianglesLength);"
            },
            {
              "name": "clipTriangles",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 110
                }
              },
              "preview": "clipTriangles(float *vertices, unsigned short *triangles, size_t trianglesLength, float *uvs, size_t stride);"
            },
            {
              "name": "clipTriangles",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 110
                }
              },
              "preview": "clipTriangles(Vector<float> &vertices, Vector<unsigned short> &triangles, Vector<float> &uvs, size_t stride);"
            },
            {
              "name": "isClipping",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 19
                }
              },
              "preview": "bool isClipping();"
            },
            {
              "name": "getClippedVertices",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 37
                }
              },
              "preview": "Vector<float> &getClippedVertices();"
            },
            {
              "name": "getClippedTriangles",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 47
                }
              },
              "preview": "Vector<unsigned short> &getClippedTriangles();"
            },
            {
              "name": "getClippedUVs",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 32
                }
              },
              "preview": "Vector<float> &getClippedUVs();"
            },
            {
              "name": "_triangulator",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 28
                }
              },
              "preview": "Triangulator _triangulator;"
            },
            {
              "name": "_clippingPolygon",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 32
                }
              },
              "preview": "Vector<float> _clippingPolygon;"
            },
            {
              "name": "_clipOutput",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 27
                }
              },
              "preview": "Vector<float> _clipOutput;"
            },
            {
              "name": "_clippedVertices",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 32
                }
              },
              "preview": "Vector<float> _clippedVertices;"
            },
            {
              "name": "_clippedTriangles",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 42
                }
              },
              "preview": "Vector<unsigned short> _clippedTriangles;"
            },
            {
              "name": "_clippedUVs",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 27
                }
              },
              "preview": "Vector<float> _clippedUVs;"
            },
            {
              "name": "_scratch",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 24
                }
              },
              "preview": "Vector<float> _scratch;"
            },
            {
              "name": "_clipAttachment",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 37
                }
              },
              "preview": "ClippingAttachment *_clipAttachment;"
            },
            {
              "name": "_clippingPolygons",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 44
                }
              },
              "preview": "Vector<Vector<float> *> *_clippingPolygons;"
            },
            {
              "name": "clip",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 28
                }
              },
              "preview": "bool clip(float x1, float y1, float x2, float y2, float x3, float y3, Vector<float> *clippingArea,",
              "documentation": "Clips the input triangle against the convex, clockwise clipping area. If the triangle lies entirely within the clipping\narea, false is returned. The clipping area must duplicate the first vertex at the end of the vertices list."
            },
            {
              "name": "makeClockwise",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonClipping.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 51
                }
              },
              "preview": "static void makeClockwise(Vector<float> &polygon);"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 232,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "BoneData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 15
            }
          },
          "preview": "class BoneData;"
        },
        {
          "name": "SlotData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 15
            }
          },
          "preview": "class SlotData;"
        },
        {
          "name": "Skin",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 11
            }
          },
          "preview": "class Skin;"
        },
        {
          "name": "EventData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 16
            }
          },
          "preview": "class EventData;"
        },
        {
          "name": "Animation",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
          "range": {
            "start": {
              "line": 45,
              "character": 0
            },
            "end": {
              "line": 45,
              "character": 16
            }
          },
          "preview": "class Animation;"
        },
        {
          "name": "IkConstraintData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
          "range": {
            "start": {
              "line": 47,
              "character": 0
            },
            "end": {
              "line": 47,
              "character": 23
            }
          },
          "preview": "class IkConstraintData;"
        },
        {
          "name": "TransformConstraintData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
          "range": {
            "start": {
              "line": 49,
              "character": 0
            },
            "end": {
              "line": 49,
              "character": 30
            }
          },
          "preview": "class TransformConstraintData;"
        },
        {
          "name": "PathConstraintData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
          "range": {
            "start": {
              "line": 51,
              "character": 0
            },
            "end": {
              "line": 51,
              "character": 25
            }
          },
          "preview": "class PathConstraintData;"
        },
        {
          "name": "PhysicsConstraintData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
          "range": {
            "start": {
              "line": 53,
              "character": 0
            },
            "end": {
              "line": 53,
              "character": 31
            }
          },
          "preview": "class PhysicsConstraintData;"
        },
        {
          "name": "ConstraintData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
          "range": {
            "start": {
              "line": 55,
              "character": 0
            },
            "end": {
              "line": 55,
              "character": 21
            }
          },
          "preview": "class ConstraintData;",
          "supertypes": [
            "SpineObject"
          ]
        },
        {
          "name": "SkeletonData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
          "range": {
            "start": {
              "line": 61,
              "character": 0
            },
            "end": {
              "line": 231,
              "character": 2
            }
          },
          "preview": "class SP_API SkeletonData : public SpineObject {",
          "documentation": "Stores the setup pose and all of the stateless data for a skeleton.\nSee <a href=\"https://esotericsoftware.com/spine-runtime-architecture#Data-objects\">Data objects</a> in the Spine Runtimes\nGuide.",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "SkeletonData",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 16
                }
              },
              "preview": "SkeletonData();"
            },
            {
              "name": "~SkeletonData",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 17
                }
              },
              "preview": "~SkeletonData();"
            },
            {
              "name": "findBone",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 44
                }
              },
              "preview": "BoneData *findBone(const String &boneName);",
              "documentation": "Finds a bone by comparing each bone's name.\nIt is more efficient to cache the results of this method than to call it multiple times.\n@return May be NULL."
            },
            {
              "name": "findSlot",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 79,
                  "character": 44
                }
              },
              "preview": "SlotData *findSlot(const String &slotName);",
              "documentation": "@return May be NULL."
            },
            {
              "name": "findSkin",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 82,
                  "character": 0
                },
                "end": {
                  "line": 82,
                  "character": 40
                }
              },
              "preview": "Skin *findSkin(const String &skinName);",
              "documentation": "@return May be NULL."
            },
            {
              "name": "findEvent",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 58
                }
              },
              "preview": "spine::EventData *findEvent(const String &eventDataName);",
              "documentation": "@return May be NULL."
            },
            {
              "name": "findAnimation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 88,
                  "character": 55
                }
              },
              "preview": "Animation *findAnimation(const String &animationName);",
              "documentation": "@return May be NULL."
            },
            {
              "name": "findIkConstraint",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 91,
                  "character": 0
                },
                "end": {
                  "line": 91,
                  "character": 66
                }
              },
              "preview": "IkConstraintData *findIkConstraint(const String &constraintName);",
              "documentation": "@return May be NULL."
            },
            {
              "name": "findTransformConstraint",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 94,
                  "character": 80
                }
              },
              "preview": "TransformConstraintData *findTransformConstraint(const String &constraintName);",
              "documentation": "@return May be NULL."
            },
            {
              "name": "findPathConstraint",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 97,
                  "character": 0
                },
                "end": {
                  "line": 97,
                  "character": 70
                }
              },
              "preview": "PathConstraintData *findPathConstraint(const String &constraintName);",
              "documentation": "@return May be NULL."
            },
            {
              "name": "findPhysicsConstraint",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 100,
                  "character": 0
                },
                "end": {
                  "line": 100,
                  "character": 82
                }
              },
              "preview": "PhysicsConstraintData *findPhysicsConstraint(const String &constraintName);",
              "documentation": "@return May be NULL."
            },
            {
              "name": "getName",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 25
                }
              },
              "preview": "const String &getName();",
              "documentation": "The skeleton's name, which by default is the name of the skeleton data file when possible, or null when a name hasn't been\nset."
            },
            {
              "name": "setName",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 106,
                  "character": 0
                },
                "end": {
                  "line": 106,
                  "character": 37
                }
              },
              "preview": "void setName(const String &inValue);"
            },
            {
              "name": "getBones",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 109,
                  "character": 0
                },
                "end": {
                  "line": 109,
                  "character": 32
                }
              },
              "preview": "Vector<BoneData *> &getBones();",
              "documentation": "The skeleton's bones, sorted parent first. The root bone is always the first bone."
            },
            {
              "name": "getSlots",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 112,
                  "character": 0
                },
                "end": {
                  "line": 112,
                  "character": 32
                }
              },
              "preview": "Vector<SlotData *> &getSlots();",
              "documentation": "The skeleton's slots in the setup pose draw order."
            },
            {
              "name": "getSkins",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 115,
                  "character": 0
                },
                "end": {
                  "line": 115,
                  "character": 28
                }
              },
              "preview": "Vector<Skin *> &getSkins();",
              "documentation": "All skins, including the default skin."
            },
            {
              "name": "getDefaultSkin",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 120,
                  "character": 0
                },
                "end": {
                  "line": 120,
                  "character": 24
                }
              },
              "preview": "Skin *getDefaultSkin();",
              "documentation": "The skeleton's default skin.\nBy default this skin contains all attachments that were not in a skin in Spine.\n@return May be NULL."
            },
            {
              "name": "setDefaultSkin",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 122,
                  "character": 0
                },
                "end": {
                  "line": 122,
                  "character": 36
                }
              },
              "preview": "void setDefaultSkin(Skin *inValue);"
            },
            {
              "name": "getEvents",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 125,
                  "character": 0
                },
                "end": {
                  "line": 125,
                  "character": 41
                }
              },
              "preview": "Vector<spine::EventData *> &getEvents();",
              "documentation": "The skeleton's events."
            },
            {
              "name": "getAnimations",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 128,
                  "character": 0
                },
                "end": {
                  "line": 128,
                  "character": 38
                }
              },
              "preview": "Vector<Animation *> &getAnimations();",
              "documentation": "The skeleton's animations."
            },
            {
              "name": "getIkConstraints",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 130,
                  "character": 48
                }
              },
              "preview": "Vector<IkConstraintData *> &getIkConstraints();"
            },
            {
              "name": "getTransformConstraints",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 132,
                  "character": 0
                },
                "end": {
                  "line": 132,
                  "character": 62
                }
              },
              "preview": "Vector<TransformConstraintData *> &getTransformConstraints();"
            },
            {
              "name": "getPathConstraints",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 134,
                  "character": 0
                },
                "end": {
                  "line": 134,
                  "character": 52
                }
              },
              "preview": "Vector<PathConstraintData *> &getPathConstraints();"
            },
            {
              "name": "getPhysicsConstraints",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 136,
                  "character": 0
                },
                "end": {
                  "line": 136,
                  "character": 64
                }
              },
              "preview": "Vector<PhysicsConstraintData *> &getPhysicsConstraints();"
            },
            {
              "name": "getConstraints",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 139,
                  "character": 0
                },
                "end": {
                  "line": 139,
                  "character": 44
                }
              },
              "preview": "Vector<ConstraintData *> &getConstraints();",
              "documentation": "The skeleton's constraints."
            },
            {
              "name": "findConstraint",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 144,
                  "character": 0
                },
                "end": {
                  "line": 155,
                  "character": 3
                }
              },
              "preview": "T *findConstraint(const String &constraintName) {"
            },
            {
              "name": "getX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 158,
                  "character": 0
                },
                "end": {
                  "line": 158,
                  "character": 14
                }
              },
              "preview": "float getX();",
              "documentation": "The X coordinate of the skeleton's axis aligned bounding box in the setup pose."
            },
            {
              "name": "setX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 160,
                  "character": 0
                },
                "end": {
                  "line": 160,
                  "character": 26
                }
              },
              "preview": "void setX(float inValue);"
            },
            {
              "name": "getY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 163,
                  "character": 0
                },
                "end": {
                  "line": 163,
                  "character": 14
                }
              },
              "preview": "float getY();",
              "documentation": "The Y coordinate of the skeleton's axis aligned bounding box in the setup pose."
            },
            {
              "name": "setY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 165,
                  "character": 0
                },
                "end": {
                  "line": 165,
                  "character": 26
                }
              },
              "preview": "void setY(float inValue);"
            },
            {
              "name": "getWidth",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 168,
                  "character": 0
                },
                "end": {
                  "line": 168,
                  "character": 18
                }
              },
              "preview": "float getWidth();",
              "documentation": "The width of the skeleton's axis aligned bounding box in the setup pose."
            },
            {
              "name": "setWidth",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 170,
                  "character": 0
                },
                "end": {
                  "line": 170,
                  "character": 30
                }
              },
              "preview": "void setWidth(float inValue);"
            },
            {
              "name": "getHeight",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 173,
                  "character": 0
                },
                "end": {
                  "line": 173,
                  "character": 19
                }
              },
              "preview": "float getHeight();",
              "documentation": "The height of the skeleton's axis aligned bounding box in the setup pose."
            },
            {
              "name": "setHeight",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 175,
                  "character": 0
                },
                "end": {
                  "line": 175,
                  "character": 31
                }
              },
              "preview": "void setHeight(float inValue);"
            },
            {
              "name": "getReferenceScale",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 179,
                  "character": 0
                },
                "end": {
                  "line": 179,
                  "character": 33
                }
              },
              "preview": "float getReferenceScale();",
              "documentation": "Baseline scale factor for applying physics and other effects based on distance to non-scalable properties, such as angle or\nscale. Default is 100."
            },
            {
              "name": "setReferenceScale",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 181,
                  "character": 0
                },
                "end": {
                  "line": 181,
                  "character": 45
                }
              },
              "preview": "void setReferenceScale(float inValue);"
            },
            {
              "name": "getVersion",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 184,
                  "character": 0
                },
                "end": {
                  "line": 184,
                  "character": 28
                }
              },
              "preview": "const String &getVersion();",
              "documentation": "The Spine version used to export this data, or NULL."
            },
            {
              "name": "setVersion",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 186,
                  "character": 0
                },
                "end": {
                  "line": 186,
                  "character": 40
                }
              },
              "preview": "void setVersion(const String &inValue);"
            },
            {
              "name": "getHash",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 189,
                  "character": 0
                },
                "end": {
                  "line": 189,
                  "character": 25
                }
              },
              "preview": "const String &getHash();",
              "documentation": "The skeleton data hash. This value will change if any of the skeleton data has changed."
            },
            {
              "name": "setHash",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 191,
                  "character": 0
                },
                "end": {
                  "line": 191,
                  "character": 37
                }
              },
              "preview": "void setHash(const String &inValue);"
            },
            {
              "name": "getImagesPath",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 194,
                  "character": 0
                },
                "end": {
                  "line": 194,
                  "character": 31
                }
              },
              "preview": "const String &getImagesPath();",
              "documentation": "The path to the images directory as defined in Spine, or null if nonessential data was not exported."
            },
            {
              "name": "setImagesPath",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 196,
                  "character": 0
                },
                "end": {
                  "line": 196,
                  "character": 43
                }
              },
              "preview": "void setImagesPath(const String &inValue);"
            },
            {
              "name": "getAudioPath",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 199,
                  "character": 0
                },
                "end": {
                  "line": 199,
                  "character": 30
                }
              },
              "preview": "const String &getAudioPath();",
              "documentation": "The path to the audio directory as defined in Spine, or null if nonessential data was not exported."
            },
            {
              "name": "setAudioPath",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 201,
                  "character": 0
                },
                "end": {
                  "line": 201,
                  "character": 42
                }
              },
              "preview": "void setAudioPath(const String &inValue);"
            },
            {
              "name": "getFps",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 204,
                  "character": 0
                },
                "end": {
                  "line": 204,
                  "character": 16
                }
              },
              "preview": "float getFps();",
              "documentation": "The dopesheet FPS in Spine. Available only when nonessential data was exported."
            },
            {
              "name": "setFps",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 206,
                  "character": 0
                },
                "end": {
                  "line": 206,
                  "character": 28
                }
              },
              "preview": "void setFps(float inValue);"
            },
            {
              "name": "_name",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 209,
                  "character": 0
                },
                "end": {
                  "line": 209,
                  "character": 14
                }
              },
              "preview": "String _name;"
            },
            {
              "name": "_bones",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 210,
                  "character": 0
                },
                "end": {
                  "line": 210,
                  "character": 27
                }
              },
              "preview": "Vector<BoneData *> _bones; // Ordered parents first"
            },
            {
              "name": "_slots",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 211,
                  "character": 0
                },
                "end": {
                  "line": 211,
                  "character": 27
                }
              },
              "preview": "Vector<SlotData *> _slots; // Setup pose draw order."
            },
            {
              "name": "_skins",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 212,
                  "character": 0
                },
                "end": {
                  "line": 212,
                  "character": 23
                }
              },
              "preview": "Vector<Skin *> _skins;"
            },
            {
              "name": "_defaultSkin",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 213,
                  "character": 0
                },
                "end": {
                  "line": 213,
                  "character": 20
                }
              },
              "preview": "Skin *_defaultSkin;"
            },
            {
              "name": "_events",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 214,
                  "character": 0
                },
                "end": {
                  "line": 214,
                  "character": 29
                }
              },
              "preview": "Vector<EventData *> _events;"
            },
            {
              "name": "_animations",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 215,
                  "character": 0
                },
                "end": {
                  "line": 215,
                  "character": 33
                }
              },
              "preview": "Vector<Animation *> _animations;"
            },
            {
              "name": "_ikConstraints",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 216,
                  "character": 0
                },
                "end": {
                  "line": 216,
                  "character": 43
                }
              },
              "preview": "Vector<IkConstraintData *> _ikConstraints;"
            },
            {
              "name": "_transformConstraints",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 217,
                  "character": 0
                },
                "end": {
                  "line": 217,
                  "character": 57
                }
              },
              "preview": "Vector<TransformConstraintData *> _transformConstraints;"
            },
            {
              "name": "_pathConstraints",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 218,
                  "character": 0
                },
                "end": {
                  "line": 218,
                  "character": 47
                }
              },
              "preview": "Vector<PathConstraintData *> _pathConstraints;"
            },
            {
              "name": "_physicsConstraints",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 219,
                  "character": 0
                },
                "end": {
                  "line": 219,
                  "character": 59
                }
              },
              "preview": "Vector<PhysicsConstraintData *> _physicsConstraints;"
            },
            {
              "name": "_constraints",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 220,
                  "character": 0
                },
                "end": {
                  "line": 220,
                  "character": 39
                }
              },
              "preview": "Vector<ConstraintData *> _constraints;"
            },
            {
              "name": "_x",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 221,
                  "character": 0
                },
                "end": {
                  "line": 221,
                  "character": 10
                }
              },
              "preview": "float _x, _y, _width, _height;"
            },
            {
              "name": "_y",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 221,
                  "character": 0
                },
                "end": {
                  "line": 221,
                  "character": 14
                }
              },
              "preview": "float _x, _y, _width, _height;"
            },
            {
              "name": "_width",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 221,
                  "character": 0
                },
                "end": {
                  "line": 221,
                  "character": 22
                }
              },
              "preview": "float _x, _y, _width, _height;"
            },
            {
              "name": "_height",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 221,
                  "character": 0
                },
                "end": {
                  "line": 221,
                  "character": 31
                }
              },
              "preview": "float _x, _y, _width, _height;"
            },
            {
              "name": "_referenceScale",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 222,
                  "character": 0
                },
                "end": {
                  "line": 222,
                  "character": 29
                }
              },
              "preview": "float _referenceScale;"
            },
            {
              "name": "_version",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 223,
                  "character": 0
                },
                "end": {
                  "line": 223,
                  "character": 17
                }
              },
              "preview": "String _version;"
            },
            {
              "name": "_hash",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 224,
                  "character": 0
                },
                "end": {
                  "line": 224,
                  "character": 14
                }
              },
              "preview": "String _hash;"
            },
            {
              "name": "_strings",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 225,
                  "character": 0
                },
                "end": {
                  "line": 225,
                  "character": 25
                }
              },
              "preview": "Vector<char *> _strings;"
            },
            {
              "name": "_fps",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 228,
                  "character": 0
                },
                "end": {
                  "line": 228,
                  "character": 12
                }
              },
              "preview": "float _fps;"
            },
            {
              "name": "_imagesPath",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 229,
                  "character": 0
                },
                "end": {
                  "line": 229,
                  "character": 20
                }
              },
              "preview": "String _imagesPath;"
            },
            {
              "name": "_audioPath",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonData.h",
              "range": {
                "start": {
                  "line": 230,
                  "character": 0
                },
                "end": {
                  "line": 230,
                  "character": 19
                }
              },
              "preview": "String _audioPath;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 111,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Timeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 15
            }
          },
          "preview": "class Timeline;"
        },
        {
          "name": "CurveTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 20
            }
          },
          "preview": "class CurveTimeline;"
        },
        {
          "name": "CurveTimeline1",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 21
            }
          },
          "preview": "class CurveTimeline1;"
        },
        {
          "name": "CurveTimeline2",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 21
            }
          },
          "preview": "class CurveTimeline2;"
        },
        {
          "name": "VertexAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
          "range": {
            "start": {
              "line": 45,
              "character": 0
            },
            "end": {
              "line": 45,
              "character": 23
            }
          },
          "preview": "class VertexAttachment;"
        },
        {
          "name": "Animation",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
          "range": {
            "start": {
              "line": 47,
              "character": 0
            },
            "end": {
              "line": 47,
              "character": 16
            }
          },
          "preview": "class Animation;"
        },
        {
          "name": "Json",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
          "range": {
            "start": {
              "line": 49,
              "character": 0
            },
            "end": {
              "line": 49,
              "character": 11
            }
          },
          "preview": "class Json;"
        },
        {
          "name": "SkeletonData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
          "range": {
            "start": {
              "line": 51,
              "character": 0
            },
            "end": {
              "line": 51,
              "character": 19
            }
          },
          "preview": "class SkeletonData;"
        },
        {
          "name": "Atlas",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
          "range": {
            "start": {
              "line": 53,
              "character": 0
            },
            "end": {
              "line": 53,
              "character": 12
            }
          },
          "preview": "class Atlas;"
        },
        {
          "name": "AttachmentLoader",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
          "range": {
            "start": {
              "line": 55,
              "character": 0
            },
            "end": {
              "line": 55,
              "character": 23
            }
          },
          "preview": "class AttachmentLoader;"
        },
        {
          "name": "LinkedMesh",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
          "range": {
            "start": {
              "line": 57,
              "character": 0
            },
            "end": {
              "line": 57,
              "character": 17
            }
          },
          "preview": "class LinkedMesh;"
        },
        {
          "name": "String",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
          "range": {
            "start": {
              "line": 59,
              "character": 0
            },
            "end": {
              "line": 59,
              "character": 13
            }
          },
          "preview": "class String;",
          "supertypes": [
            "SpineObject"
          ]
        },
        {
          "name": "Sequence",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
          "range": {
            "start": {
              "line": 61,
              "character": 0
            },
            "end": {
              "line": 61,
              "character": 15
            }
          },
          "preview": "class Sequence;"
        },
        {
          "name": "SkeletonJson",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
          "range": {
            "start": {
              "line": 63,
              "character": 0
            },
            "end": {
              "line": 110,
              "character": 2
            }
          },
          "preview": "class SP_API SkeletonJson : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "SkeletonJson",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 37
                }
              },
              "preview": "explicit SkeletonJson(Atlas *atlas);"
            },
            {
              "name": "SkeletonJson",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 67,
                  "character": 0
                },
                "end": {
                  "line": 67,
                  "character": 84
                }
              },
              "preview": "explicit SkeletonJson(AttachmentLoader *attachmentLoader, bool ownsLoader = false);"
            },
            {
              "name": "~SkeletonJson",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 17
                }
              },
              "preview": "~SkeletonJson();"
            },
            {
              "name": "readSkeletonDataFile",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 56
                }
              },
              "preview": "SkeletonData *readSkeletonDataFile(const String &path);"
            },
            {
              "name": "readSkeletonData",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 50
                }
              },
              "preview": "SkeletonData *readSkeletonData(const char *json);"
            },
            {
              "name": "setScale",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 48
                }
              },
              "preview": "void setScale(float scale) { _scale = scale; }"
            },
            {
              "name": "getError",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 39
                }
              },
              "preview": "String &getError() { return _error; }"
            },
            {
              "name": "_attachmentLoader",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 37
                }
              },
              "preview": "AttachmentLoader *_attachmentLoader;"
            },
            {
              "name": "_linkedMeshes",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 36
                }
              },
              "preview": "Vector<LinkedMesh *> _linkedMeshes;"
            },
            {
              "name": "_scale",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 82,
                  "character": 0
                },
                "end": {
                  "line": 82,
                  "character": 14
                }
              },
              "preview": "float _scale;"
            },
            {
              "name": "_ownsLoader",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 24
                }
              },
              "preview": "const bool _ownsLoader;"
            },
            {
              "name": "_error",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 15
                }
              },
              "preview": "String _error;"
            },
            {
              "name": "readSequence",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 86,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 47
                }
              },
              "preview": "static Sequence *readSequence(Json *sequence);"
            },
            {
              "name": "setBezier",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 89,
                  "character": 0
                },
                "end": {
                  "line": 91,
                  "character": 54
                }
              },
              "preview": "setBezier(CurveTimeline *timeline, int frame, int value, int bezier, float time1, float value1, float cx1,"
            },
            {
              "name": "readCurve",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 95,
                  "character": 46
                }
              },
              "preview": "readCurve(Json *curve, CurveTimeline *timeline, int bezier, int frame, int value, float time1, float time2,"
            },
            {
              "name": "readTimeline",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 97,
                  "character": 0
                },
                "end": {
                  "line": 97,
                  "character": 104
                }
              },
              "preview": "static Timeline *readTimeline(Json *keyMap, CurveTimeline1 *timeline, float defaultValue, float scale);"
            },
            {
              "name": "readTimeline",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 100,
                  "character": 0
                },
                "end": {
                  "line": 101,
                  "character": 18
                }
              },
              "preview": "readTimeline(Json *keyMap, CurveTimeline2 *timeline, const char *name1, const char *name2, float defaultValue,"
            },
            {
              "name": "readAnimation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 66
                }
              },
              "preview": "Animation *readAnimation(Json *root, SkeletonData *skeletonData);"
            },
            {
              "name": "readVertices",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 105,
                  "character": 0
                },
                "end": {
                  "line": 105,
                  "character": 93
                }
              },
              "preview": "void readVertices(Json *attachmentMap, VertexAttachment *attachment, size_t verticesLength);"
            },
            {
              "name": "setError",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 107,
                  "character": 0
                },
                "end": {
                  "line": 107,
                  "character": 71
                }
              },
              "preview": "void setError(Json *root, const String &value1, const String &value2);"
            },
            {
              "name": "findSlotIndex",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonJson.h",
              "range": {
                "start": {
                  "line": 109,
                  "character": 0
                },
                "end": {
                  "line": 109,
                  "character": 101
                }
              },
              "preview": "int findSlotIndex(SkeletonData *skeletonData, const String &slotName, Vector<Timeline *> timelines);"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 66,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 18
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "RenderCommand",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 50,
              "character": 5
            }
          },
          "preview": "struct SP_API RenderCommand {",
          "children": [
            {
              "name": "positions",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 40,
                  "character": 0
                },
                "end": {
                  "line": 40,
                  "character": 24
                }
              },
              "preview": "float *positions;"
            },
            {
              "name": "uvs",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 18
                }
              },
              "preview": "float *uvs;"
            },
            {
              "name": "colors",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 24
                }
              },
              "preview": "uint32_t *colors;"
            },
            {
              "name": "darkColors",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 43,
                  "character": 0
                },
                "end": {
                  "line": 43,
                  "character": 28
                }
              },
              "preview": "uint32_t *darkColors;"
            },
            {
              "name": "numVertices",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 27
                }
              },
              "preview": "int32_t numVertices;"
            },
            {
              "name": "indices",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 25
                }
              },
              "preview": "uint16_t *indices;"
            },
            {
              "name": "numIndices",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 26
                }
              },
              "preview": "int32_t numIndices;"
            },
            {
              "name": "blendMode",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 27
                }
              },
              "preview": "BlendMode blendMode;"
            },
            {
              "name": "texture",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 21
                }
              },
              "preview": "void *texture;"
            },
            {
              "name": "next",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 27
                }
              },
              "preview": "RenderCommand *next;"
            }
          ]
        },
        {
          "name": "SkeletonRenderer",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
          "range": {
            "start": {
              "line": 52,
              "character": 0
            },
            "end": {
              "line": 65,
              "character": 5
            }
          },
          "preview": "class SP_API SkeletonRenderer: public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "SkeletonRenderer",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 35
                }
              },
              "preview": "explicit SkeletonRenderer();"
            },
            {
              "name": "~SkeletonRenderer",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 27
                }
              },
              "preview": "~SkeletonRenderer();"
            },
            {
              "name": "render",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 49
                }
              },
              "preview": "RenderCommand *render(Skeleton &skeleton);"
            },
            {
              "name": "_allocator",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 33
                }
              },
              "preview": "BlockAllocator _allocator;"
            },
            {
              "name": "_worldVertices",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 36
                }
              },
              "preview": "Vector<float> _worldVertices;"
            },
            {
              "name": "_quadIndices",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 43
                }
              },
              "preview": "Vector<unsigned short> _quadIndices;"
            },
            {
              "name": "_clipping",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 34
                }
              },
              "preview": "SkeletonClipping _clipping;"
            },
            {
              "name": "_renderCommands",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SkeletonRenderer.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 47
                }
              },
              "preview": "Vector<RenderCommand *> _renderCommands;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 168,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 17
            }
          },
          "preview": "class Attachment;"
        },
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "BoneData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 15
            }
          },
          "preview": "class BoneData;"
        },
        {
          "name": "ConstraintData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 21
            }
          },
          "preview": "class ConstraintData;"
        },
        {
          "name": "Skin",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
          "range": {
            "start": {
              "line": 48,
              "character": 0
            },
            "end": {
              "line": 167,
              "character": 2
            }
          },
          "preview": "class SP_API Skin : public SpineObject {",
          "documentation": "Stores attachments by slot index and attachment name.\nSee SkeletonData::getDefaultSkin, Skeleton::getSkin, and\nhttp://esotericsoftware.com/spine-runtime-skins in the Spine Runtimes Guide.",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "AttachmentMap",
              "kind": "class",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 116,
                  "character": 3
                }
              },
              "preview": "class SP_API AttachmentMap : public SpineObject {",
              "supertypes": [
                "SpineObject"
              ],
              "children": [
                {
                  "name": "Entry",
                  "kind": "class",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                  "range": {
                    "start": {
                      "line": 56,
                      "character": 0
                    },
                    "end": {
                      "line": 66,
                      "character": 4
                    }
                  },
                  "preview": "struct SP_API Entry {",
                  "children": [
                    {
                      "name": "_slotIndex",
                      "kind": "field",
                      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                      "range": {
                        "start": {
                          "line": 57,
                          "character": 0
                        },
                        "end": {
                          "line": 57,
                          "character": 21
                        }
                      },
                      "preview": "size_t _slotIndex;"
                    },
                    {
                      "name": "_name",
                      "kind": "field",
                      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                      "range": {
                        "start": {
                          "line": 58,
                          "character": 0
                        },
                        "end": {
                          "line": 58,
                          "character": 16
                        }
                      },
                      "preview": "String _name;"
                    },
                    {
                      "name": "_attachment",
                      "kind": "field",
                      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                      "range": {
                        "start": {
                          "line": 59,
                          "character": 0
                        },
                        "end": {
                          "line": 59,
                          "character": 27
                        }
                      },
                      "preview": "Attachment *_attachment;"
                    },
                    {
                      "name": "Entry",
                      "kind": "constructor",
                      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                      "range": {
                        "start": {
                          "line": 61,
                          "character": 0
                        },
                        "end": {
                          "line": 65,
                          "character": 5
                        }
                      },
                      "preview": "Entry(size_t slotIndex, const String &name, Attachment *attachment) :"
                    }
                  ]
                },
                {
                  "name": "Entries",
                  "kind": "class",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                  "range": {
                    "start": {
                      "line": 68,
                      "character": 0
                    },
                    "end": {
                      "line": 98,
                      "character": 4
                    }
                  },
                  "preview": "class SP_API Entries {",
                  "children": [
                    {
                      "name": "hasNext",
                      "kind": "method",
                      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                      "range": {
                        "start": {
                          "line": 72,
                          "character": 0
                        },
                        "end": {
                          "line": 82,
                          "character": 5
                        }
                      },
                      "preview": "bool hasNext() {"
                    },
                    {
                      "name": "next",
                      "kind": "method",
                      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                      "range": {
                        "start": {
                          "line": 84,
                          "character": 0
                        },
                        "end": {
                          "line": 88,
                          "character": 5
                        }
                      },
                      "preview": "Entry &next() {"
                    },
                    {
                      "name": "Entries",
                      "kind": "constructor",
                      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                      "range": {
                        "start": {
                          "line": 91,
                          "character": 0
                        },
                        "end": {
                          "line": 92,
                          "character": 5
                        }
                      },
                      "preview": "Entries(Vector <Vector<Entry>> &buckets) : _buckets(buckets), _slotIndex(0), _bucketIndex(0) {"
                    },
                    {
                      "name": "_buckets",
                      "kind": "field",
                      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                      "range": {
                        "start": {
                          "line": 95,
                          "character": 0
                        },
                        "end": {
                          "line": 95,
                          "character": 36
                        }
                      },
                      "preview": "Vector <Vector<Entry>> &_buckets;"
                    },
                    {
                      "name": "_slotIndex",
                      "kind": "field",
                      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                      "range": {
                        "start": {
                          "line": 96,
                          "character": 0
                        },
                        "end": {
                          "line": 96,
                          "character": 21
                        }
                      },
                      "preview": "size_t _slotIndex;"
                    },
                    {
                      "name": "_bucketIndex",
                      "kind": "field",
                      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                      "range": {
                        "start": {
                          "line": 97,
                          "character": 0
                        },
                        "end": {
                          "line": 97,
                          "character": 23
                        }
                      },
                      "preview": "size_t _bucketIndex;"
                    }
                  ]
                },
                {
                  "name": "put",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                  "range": {
                    "start": {
                      "line": 100,
                      "character": 0
                    },
                    "end": {
                      "line": 100,
                      "character": 83
                    }
                  },
                  "preview": "void put(size_t slotIndex, const String &attachmentName, Attachment *attachment);"
                },
                {
                  "name": "get",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                  "range": {
                    "start": {
                      "line": 102,
                      "character": 0
                    },
                    "end": {
                      "line": 102,
                      "character": 66
                    }
                  },
                  "preview": "Attachment *get(size_t slotIndex, const String &attachmentName);"
                },
                {
                  "name": "remove",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                  "range": {
                    "start": {
                      "line": 104,
                      "character": 0
                    },
                    "end": {
                      "line": 104,
                      "character": 62
                    }
                  },
                  "preview": "void remove(size_t slotIndex, const String &attachmentName);"
                },
                {
                  "name": "getEntries",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                  "range": {
                    "start": {
                      "line": 106,
                      "character": 0
                    },
                    "end": {
                      "line": 106,
                      "character": 23
                    }
                  },
                  "preview": "Entries getEntries();"
                },
                {
                  "name": "AttachmentMap",
                  "kind": "constructor",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                  "range": {
                    "start": {
                      "line": 109,
                      "character": 0
                    },
                    "end": {
                      "line": 109,
                      "character": 18
                    }
                  },
                  "preview": "AttachmentMap();"
                },
                {
                  "name": "findInBucket",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                  "range": {
                    "start": {
                      "line": 113,
                      "character": 0
                    },
                    "end": {
                      "line": 113,
                      "character": 67
                    }
                  },
                  "preview": "int findInBucket(Vector <Entry> &, const String &attachmentName);"
                },
                {
                  "name": "_buckets",
                  "kind": "field",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
                  "range": {
                    "start": {
                      "line": 115,
                      "character": 0
                    },
                    "end": {
                      "line": 115,
                      "character": 34
                    }
                  },
                  "preview": "Vector <Vector<Entry>> _buckets;"
                }
              ]
            },
            {
              "name": "Skin",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 118,
                  "character": 0
                },
                "end": {
                  "line": 118,
                  "character": 35
                }
              },
              "preview": "explicit Skin(const String &name);"
            },
            {
              "name": "~Skin",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 120,
                  "character": 0
                },
                "end": {
                  "line": 120,
                  "character": 9
                }
              },
              "preview": "~Skin();"
            },
            {
              "name": "setAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 124,
                  "character": 0
                },
                "end": {
                  "line": 124,
                  "character": 82
                }
              },
              "preview": "void setAttachment(size_t slotIndex, const String &name, Attachment *attachment);",
              "documentation": "Adds an attachment to the skin for the specified slot index and name.\nIf the name already exists for the slot, the previous value is replaced."
            },
            {
              "name": "getAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 127,
                  "character": 0
                },
                "end": {
                  "line": 127,
                  "character": 65
                }
              },
              "preview": "Attachment *getAttachment(size_t slotIndex, const String &name);",
              "documentation": "Returns the attachment for the specified slot index and name, or NULL."
            },
            {
              "name": "removeAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 130,
                  "character": 61
                }
              },
              "preview": "void removeAttachment(size_t slotIndex, const String &name);"
            },
            {
              "name": "findNamesForSlot",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 135,
                  "character": 0
                },
                "end": {
                  "line": 135,
                  "character": 65
                }
              },
              "preview": "void findNamesForSlot(size_t slotIndex, Vector <String> &names);",
              "documentation": "Finds the skin keys for a given slot. The results are added to the passed array of names.\n@param slotIndex The target slotIndex. To find the slot index, use SkeletonData::findSlot and SlotData::getIndex.\n@param names Found skin key names will be added to this array."
            },
            {
              "name": "findAttachmentsForSlot",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 140,
                  "character": 0
                },
                "end": {
                  "line": 140,
                  "character": 82
                }
              },
              "preview": "void findAttachmentsForSlot(size_t slotIndex, Vector<Attachment *> &attachments);",
              "documentation": "Finds the attachments for a given slot. The results are added to the passed array of Attachments.\n@param slotIndex The target slotIndex. To find the slot index, use SkeletonData::findSlot and SlotData::getIndex.\n@param attachments Found Attachments will be added to this array."
            },
            {
              "name": "getName",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 142,
                  "character": 0
                },
                "end": {
                  "line": 142,
                  "character": 25
                }
              },
              "preview": "const String &getName();"
            },
            {
              "name": "addSkin",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 145,
                  "character": 0
                },
                "end": {
                  "line": 145,
                  "character": 27
                }
              },
              "preview": "void addSkin(Skin *other);",
              "documentation": "Adds all attachments, bones, and constraints from the specified skin to this skin."
            },
            {
              "name": "copySkin",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 148,
                  "character": 0
                },
                "end": {
                  "line": 148,
                  "character": 28
                }
              },
              "preview": "void copySkin(Skin *other);",
              "documentation": "Adds all attachments, bones, and constraints from the specified skin to this skin. Attachments are deep copied."
            },
            {
              "name": "getAttachments",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 150,
                  "character": 0
                },
                "end": {
                  "line": 150,
                  "character": 41
                }
              },
              "preview": "AttachmentMap::Entries getAttachments();"
            },
            {
              "name": "getBones",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 152,
                  "character": 0
                },
                "end": {
                  "line": 152,
                  "character": 32
                }
              },
              "preview": "Vector<BoneData *> &getBones();"
            },
            {
              "name": "getConstraints",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 154,
                  "character": 0
                },
                "end": {
                  "line": 154,
                  "character": 44
                }
              },
              "preview": "Vector<ConstraintData *> &getConstraints();"
            },
            {
              "name": "getColor",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 156,
                  "character": 0
                },
                "end": {
                  "line": 156,
                  "character": 44
                }
              },
              "preview": "Color &getColor() { return _color; }"
            },
            {
              "name": "_name",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 159,
                  "character": 0
                },
                "end": {
                  "line": 159,
                  "character": 20
                }
              },
              "preview": "const String _name;"
            },
            {
              "name": "_attachments",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 160,
                  "character": 0
                },
                "end": {
                  "line": 160,
                  "character": 28
                }
              },
              "preview": "AttachmentMap _attachments;"
            },
            {
              "name": "_bones",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 161,
                  "character": 0
                },
                "end": {
                  "line": 161,
                  "character": 27
                }
              },
              "preview": "Vector<BoneData *> _bones;"
            },
            {
              "name": "_constraints",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 162,
                  "character": 0
                },
                "end": {
                  "line": 162,
                  "character": 39
                }
              },
              "preview": "Vector<ConstraintData *> _constraints;"
            },
            {
              "name": "_color",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 163,
                  "character": 0
                },
                "end": {
                  "line": 163,
                  "character": 20
                }
              },
              "preview": "Color _color;"
            },
            {
              "name": "attachAll",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Skin.h",
              "range": {
                "start": {
                  "line": 166,
                  "character": 0
                },
                "end": {
                  "line": 166,
                  "character": 51
                }
              },
              "preview": "void attachAll(Skeleton &skeleton, Skin &oldSkin);",
              "documentation": "Attach all attachments from this skin if the corresponding attachment from the old skin is currently attached."
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slider.h",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 70,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slider.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "Bone",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slider.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 11
            }
          },
          "preview": "class Bone;"
        },
        {
          "name": "Animation",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slider.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 16
            }
          },
          "preview": "class Animation;"
        },
        {
          "name": "Slider",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slider.h",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 69,
              "character": 2
            }
          },
          "preview": "class SP_API Slider : public ConstraintGeneric<Slider, SliderData, SliderPose> {",
          "documentation": "Stores the setup pose for a PhysicsConstraint.\nSee https://esotericsoftware.com/spine-physics-constraints Physics constraints in the Spine User Guide.",
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slider.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 11
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slider.h",
                  "range": {
                    "start": {
                      "line": 49,
                      "character": 0
                    },
                    "end": {
                      "line": 49,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slider.h",
                  "range": {
                    "start": {
                      "line": 49,
                      "character": 0
                    },
                    "end": {
                      "line": 49,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "Slider",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slider.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 46
                }
              },
              "preview": "Slider(SliderData& data, Skeleton& skeleton);"
            },
            {
              "name": "copy",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slider.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 34
                }
              },
              "preview": "Slider* copy(Skeleton& skeleton);"
            },
            {
              "name": "update",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slider.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 67
                }
              },
              "preview": "virtual void update(Skeleton& skeleton, Physics physics) override;"
            },
            {
              "name": "sort",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slider.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 48
                }
              },
              "preview": "virtual void sort(Skeleton& skeleton) override;"
            },
            {
              "name": "isSourceActive",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slider.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 40
                }
              },
              "preview": "virtual bool isSourceActive() override;"
            },
            {
              "name": "getBone",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slider.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 17
                }
              },
              "preview": "Bone* getBone();"
            },
            {
              "name": "setBone",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slider.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 26
                }
              },
              "preview": "void setBone(Bone* bone);"
            },
            {
              "name": "_bone",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slider.h",
              "range": {
                "start": {
                  "line": 67,
                  "character": 0
                },
                "end": {
                  "line": 67,
                  "character": 13
                }
              },
              "preview": "Bone* _bone;"
            },
            {
              "name": "_offsets",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slider.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 26
                }
              },
              "preview": "static float _offsets[6];"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 96,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Animation",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 16
            }
          },
          "preview": "class Animation;"
        },
        {
          "name": "BoneData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 15
            }
          },
          "preview": "class BoneData;"
        },
        {
          "name": "FromProperty",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 40,
              "character": 19
            }
          },
          "preview": "class FromProperty;"
        },
        {
          "name": "Slider",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 13
            }
          },
          "preview": "class Slider;"
        },
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "SliderData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
          "range": {
            "start": {
              "line": 47,
              "character": 0
            },
            "end": {
              "line": 95,
              "character": 2
            }
          },
          "preview": "class SP_API SliderData : public ConstraintDataGeneric<Slider, SliderPose> {",
          "documentation": "Stores the setup pose for a PhysicsConstraint.\nSee https://esotericsoftware.com/spine-physics-constraints Physics constraints in the Spine User Guide.",
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 11
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
                  "range": {
                    "start": {
                      "line": 54,
                      "character": 0
                    },
                    "end": {
                      "line": 54,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
                  "range": {
                    "start": {
                      "line": 54,
                      "character": 0
                    },
                    "end": {
                      "line": 54,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "SliderData",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 41
                }
              },
              "preview": "explicit SliderData(const String &name);"
            },
            {
              "name": "create",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 57
                }
              },
              "preview": "virtual Constraint* create(Skeleton& skeleton) override;",
              "documentation": "Creates a slider instance."
            },
            {
              "name": "getAnimation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 27
                }
              },
              "preview": "Animation* getAnimation();"
            },
            {
              "name": "setAnimation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 41
                }
              },
              "preview": "void setAnimation(Animation* animation);"
            },
            {
              "name": "getAdditive",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 20
                }
              },
              "preview": "bool getAdditive();"
            },
            {
              "name": "setAdditive",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 66,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 33
                }
              },
              "preview": "void setAdditive(bool additive);"
            },
            {
              "name": "getLoop",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 16
                }
              },
              "preview": "bool getLoop();"
            },
            {
              "name": "setLoop",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 25
                }
              },
              "preview": "void setLoop(bool loop);"
            },
            {
              "name": "getBone",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 21
                }
              },
              "preview": "BoneData* getBone();"
            },
            {
              "name": "setBone",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 30
                }
              },
              "preview": "void setBone(BoneData* bone);"
            },
            {
              "name": "getProperty",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 29
                }
              },
              "preview": "FromProperty* getProperty();"
            },
            {
              "name": "setProperty",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 42
                }
              },
              "preview": "void setProperty(FromProperty* property);"
            },
            {
              "name": "getScale",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 18
                }
              },
              "preview": "float getScale();"
            },
            {
              "name": "setScale",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 78,
                  "character": 0
                },
                "end": {
                  "line": 78,
                  "character": 28
                }
              },
              "preview": "void setScale(float scale);"
            },
            {
              "name": "getOffset",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 19
                }
              },
              "preview": "float getOffset();"
            },
            {
              "name": "setOffset",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 30
                }
              },
              "preview": "void setOffset(float offset);"
            },
            {
              "name": "getLocal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 17
                }
              },
              "preview": "bool getLocal();"
            },
            {
              "name": "setLocal",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 27
                }
              },
              "preview": "void setLocal(bool local);"
            },
            {
              "name": "_animation",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 23
                }
              },
              "preview": "Animation* _animation;"
            },
            {
              "name": "_additive",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 88,
                  "character": 16
                }
              },
              "preview": "bool _additive;"
            },
            {
              "name": "_loop",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 89,
                  "character": 0
                },
                "end": {
                  "line": 89,
                  "character": 12
                }
              },
              "preview": "bool _loop;"
            },
            {
              "name": "_bone",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 90,
                  "character": 0
                },
                "end": {
                  "line": 90,
                  "character": 17
                }
              },
              "preview": "BoneData* _bone;"
            },
            {
              "name": "_property",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 91,
                  "character": 0
                },
                "end": {
                  "line": 91,
                  "character": 25
                }
              },
              "preview": "FromProperty* _property;"
            },
            {
              "name": "_offset",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 92,
                  "character": 0
                },
                "end": {
                  "line": 92,
                  "character": 15
                }
              },
              "preview": "float _offset;"
            },
            {
              "name": "_scale",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 93,
                  "character": 0
                },
                "end": {
                  "line": 93,
                  "character": 14
                }
              },
              "preview": "float _scale;"
            },
            {
              "name": "_local",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderData.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 94,
                  "character": 13
                }
              },
              "preview": "bool _local;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderMixTimeline.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "SliderMixTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderMixTimeline.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 50,
              "character": 2
            }
          },
          "preview": "class SP_API SliderMixTimeline : public ConstraintTimeline1 {",
          "documentation": "Changes a slider's SliderPose::getMix().",
          "supertypes": [
            "ConstraintTimeline1"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderMixTimeline.h",
              "range": {
                "start": {
                  "line": 40,
                  "character": 0
                },
                "end": {
                  "line": 40,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderMixTimeline.h",
                  "range": {
                    "start": {
                      "line": 40,
                      "character": 0
                    },
                    "end": {
                      "line": 40,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderMixTimeline.h",
                  "range": {
                    "start": {
                      "line": 40,
                      "character": 0
                    },
                    "end": {
                      "line": 40,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "SliderMixTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderMixTimeline.h",
              "range": {
                "start": {
                  "line": 43,
                  "character": 0
                },
                "end": {
                  "line": 43,
                  "character": 84
                }
              },
              "preview": "explicit SliderMixTimeline(size_t frameCount, size_t bezierCount, int sliderIndex);"
            },
            {
              "name": "~SliderMixTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderMixTimeline.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 30
                }
              },
              "preview": "virtual ~SliderMixTimeline();"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderMixTimeline.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 46
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderPose.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Slider",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderPose.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 16
            }
          },
          "preview": "class Slider;"
        },
        {
          "name": "SliderPose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderPose.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 57,
              "character": 5
            }
          },
          "preview": "class SP_API SliderPose : public Pose<SliderPose> {",
          "documentation": "Stores a pose for a slider.",
          "children": [
            {
              "name": "_time",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderPose.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 19
                }
              },
              "preview": "float _time, _mix;"
            },
            {
              "name": "_mix",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderPose.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 25
                }
              },
              "preview": "float _time, _mix;"
            },
            {
              "name": "SliderPose",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderPose.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 20
                }
              },
              "preview": "SliderPose();"
            },
            {
              "name": "~SliderPose",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderPose.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 29
                }
              },
              "preview": "virtual ~SliderPose();"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderPose.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 51
                }
              },
              "preview": "virtual void set(SliderPose& pose) override;"
            },
            {
              "name": "getTime",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderPose.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 23
                }
              },
              "preview": "float getTime();"
            },
            {
              "name": "setTime",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderPose.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 32
                }
              },
              "preview": "void setTime(float time);"
            },
            {
              "name": "getMix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderPose.h",
              "range": {
                "start": {
                  "line": 55,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 22
                }
              },
              "preview": "float getMix();"
            },
            {
              "name": "setMix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderPose.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 30
                }
              },
              "preview": "void setMix(float mix);"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderTimeline.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 50,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "SliderTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderTimeline.h",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 49,
              "character": 2
            }
          },
          "preview": "class SP_API SliderTimeline : public ConstraintTimeline1 {",
          "supertypes": [
            "ConstraintTimeline1"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderTimeline.h",
              "range": {
                "start": {
                  "line": 39,
                  "character": 0
                },
                "end": {
                  "line": 39,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderTimeline.h",
                  "range": {
                    "start": {
                      "line": 39,
                      "character": 0
                    },
                    "end": {
                      "line": 39,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderTimeline.h",
                  "range": {
                    "start": {
                      "line": 39,
                      "character": 0
                    },
                    "end": {
                      "line": 39,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "SliderTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderTimeline.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 81
                }
              },
              "preview": "explicit SliderTimeline(size_t frameCount, size_t bezierCount, int sliderIndex);"
            },
            {
              "name": "~SliderTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderTimeline.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 27
                }
              },
              "preview": "virtual ~SliderTimeline();"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SliderTimeline.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 46
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slot.h",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 106,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Bone",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slot.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 11
            }
          },
          "preview": "class Bone;"
        },
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slot.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 40,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "Attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slot.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 17
            }
          },
          "preview": "class Attachment;"
        },
        {
          "name": "Slot",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slot.h",
          "range": {
            "start": {
              "line": 46,
              "character": 0
            },
            "end": {
              "line": 105,
              "character": 2
            }
          },
          "preview": "class SP_API Slot : public PosedGeneric<SlotData, SlotPose, SlotPose> {",
          "documentation": "Stores a slot's current pose. Slots organize attachments for Skeleton drawOrder purposes and provide a place to store\nstate for an attachment. State cannot be stored in an attachment itself because attachments are stateless and may be shared\nacross multiple skeletons.",
          "children": [
            {
              "name": "Slot",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slot.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 94,
                  "character": 42
                }
              },
              "preview": "Slot(SlotData &data, Skeleton &skeleton);"
            },
            {
              "name": "getBone",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slot.h",
              "range": {
                "start": {
                  "line": 97,
                  "character": 0
                },
                "end": {
                  "line": 97,
                  "character": 17
                }
              },
              "preview": "Bone &getBone();",
              "documentation": "The bone this slot belongs to."
            },
            {
              "name": "setupPose",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slot.h",
              "range": {
                "start": {
                  "line": 99,
                  "character": 0
                },
                "end": {
                  "line": 99,
                  "character": 27
                }
              },
              "preview": "void setupPose() override;"
            },
            {
              "name": "_skeleton",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slot.h",
              "range": {
                "start": {
                  "line": 102,
                  "character": 0
                },
                "end": {
                  "line": 102,
                  "character": 21
                }
              },
              "preview": "Skeleton &_skeleton;"
            },
            {
              "name": "_bone",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slot.h",
              "range": {
                "start": {
                  "line": 103,
                  "character": 0
                },
                "end": {
                  "line": 103,
                  "character": 13
                }
              },
              "preview": "Bone &_bone;"
            },
            {
              "name": "_attachmentState",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Slot.h",
              "range": {
                "start": {
                  "line": 104,
                  "character": 0
                },
                "end": {
                  "line": 104,
                  "character": 22
                }
              },
              "preview": "int _attachmentState;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotCurveTimeline.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Slot",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotCurveTimeline.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 11
            }
          },
          "preview": "class Slot;"
        },
        {
          "name": "SlotPose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotCurveTimeline.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 15
            }
          },
          "preview": "class SlotPose;"
        },
        {
          "name": "SlotCurveTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotCurveTimeline.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 57,
              "character": 2
            }
          },
          "preview": "class SP_API SlotCurveTimeline : public CurveTimeline, public SlotTimeline {",
          "documentation": "Base class for slot timelines that use curves.",
          "supertypes": [
            "CurveTimeline",
            "SlotTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotCurveTimeline.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotCurveTimeline.h",
                  "range": {
                    "start": {
                      "line": 44,
                      "character": 0
                    },
                    "end": {
                      "line": 44,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotCurveTimeline.h",
                  "range": {
                    "start": {
                      "line": 44,
                      "character": 0
                    },
                    "end": {
                      "line": 44,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "SlotCurveTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotCurveTimeline.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 94
                }
              },
              "preview": "SlotCurveTimeline(size_t frameCount, size_t frameEntries, size_t bezierCount, int slotIndex);"
            },
            {
              "name": "~SlotCurveTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotCurveTimeline.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 30
                }
              },
              "preview": "virtual ~SlotCurveTimeline();"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotCurveTimeline.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 75
                }
              },
              "preview": "virtual void apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha,"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotCurveTimeline.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 93
                }
              },
              "preview": "virtual void apply(Slot& slot, SlotPose& pose, float time, float alpha, MixBlend blend) = 0;",
              "documentation": "Applies the timeline to the slot pose."
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotData.h",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 94,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "BoneData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotData.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 15
            }
          },
          "preview": "class BoneData;"
        },
        {
          "name": "SlotData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotData.h",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 93,
              "character": 2
            }
          },
          "preview": "class SP_API SlotData : public PosedDataGeneric<SlotPose> {",
          "documentation": "Stores the setup pose for a Slot.",
          "children": [
            {
              "name": "SlotData",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotData.h",
              "range": {
                "start": {
                  "line": 66,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 61
                }
              },
              "preview": "SlotData(int index, const String& name, BoneData& boneData);"
            },
            {
              "name": "getIndex",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotData.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 16
                }
              },
              "preview": "int getIndex();",
              "documentation": "The index of the slot in Skeleton::getSlots()."
            },
            {
              "name": "getBoneData",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotData.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 72,
                  "character": 25
                }
              },
              "preview": "BoneData& getBoneData();",
              "documentation": "The bone this slot belongs to."
            },
            {
              "name": "setAttachmentName",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotData.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 54
                }
              },
              "preview": "void setAttachmentName(const String& attachmentName);"
            },
            {
              "name": "getAttachmentName",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotData.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 35
                }
              },
              "preview": "const String& getAttachmentName();",
              "documentation": "The name of the attachment that is visible for this slot in the setup pose, or empty if no attachment is visible."
            },
            {
              "name": "getBlendMode",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotData.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 26
                }
              },
              "preview": "BlendMode getBlendMode();",
              "documentation": "The blend mode for drawing the slot's attachment."
            },
            {
              "name": "setBlendMode",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotData.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 40
                }
              },
              "preview": "void setBlendMode(BlendMode blendMode);"
            },
            {
              "name": "getVisible",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotData.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 19
                }
              },
              "preview": "bool getVisible();",
              "documentation": "False if the slot was hidden in Spine and nonessential data was exported. Does not affect runtime rendering."
            },
            {
              "name": "setVisible",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotData.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 31
                }
              },
              "preview": "void setVisible(bool visible);"
            },
            {
              "name": "_index",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotData.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 88,
                  "character": 18
                }
              },
              "preview": "const int _index;"
            },
            {
              "name": "_boneData",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotData.h",
              "range": {
                "start": {
                  "line": 89,
                  "character": 0
                },
                "end": {
                  "line": 89,
                  "character": 21
                }
              },
              "preview": "BoneData& _boneData;"
            },
            {
              "name": "_attachmentName",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotData.h",
              "range": {
                "start": {
                  "line": 90,
                  "character": 0
                },
                "end": {
                  "line": 90,
                  "character": 24
                }
              },
              "preview": "String _attachmentName;"
            },
            {
              "name": "_blendMode",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotData.h",
              "range": {
                "start": {
                  "line": 91,
                  "character": 0
                },
                "end": {
                  "line": 91,
                  "character": 22
                }
              },
              "preview": "BlendMode _blendMode;"
            },
            {
              "name": "_visible",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotData.h",
              "range": {
                "start": {
                  "line": 92,
                  "character": 0
                },
                "end": {
                  "line": 92,
                  "character": 15
                }
              },
              "preview": "bool _visible;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 97,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 17
            }
          },
          "preview": "class Attachment;"
        },
        {
          "name": "VertexAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 40,
              "character": 23
            }
          },
          "preview": "class VertexAttachment;"
        },
        {
          "name": "SlotPose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 96,
              "character": 2
            }
          },
          "preview": "class SP_API SlotPose : public Pose<SlotPose> {",
          "children": [
            {
              "name": "_color",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 14
                }
              },
              "preview": "Color _color;"
            },
            {
              "name": "_darkColor",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
              "range": {
                "start": {
                  "line": 55,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 18
                }
              },
              "preview": "Color _darkColor;"
            },
            {
              "name": "_hasDarkColor",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 20
                }
              },
              "preview": "bool _hasDarkColor;"
            },
            {
              "name": "_attachment",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 25
                }
              },
              "preview": "Attachment* _attachment;"
            },
            {
              "name": "_sequenceIndex",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 20
                }
              },
              "preview": "int _sequenceIndex;"
            },
            {
              "name": "_deform",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 23
                }
              },
              "preview": "Vector<float> _deform;"
            },
            {
              "name": "SlotPose",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 12
                }
              },
              "preview": "SlotPose();"
            },
            {
              "name": "~SlotPose",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 21
                }
              },
              "preview": "virtual ~SlotPose();"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 43
                }
              },
              "preview": "virtual void set(SlotPose& pose) override;"
            },
            {
              "name": "getColor",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 19
                }
              },
              "preview": "Color& getColor();",
              "documentation": "The color used to tint the slot's attachment. If getDarkColor() is set, this is used as the light color for two\ncolor tinting."
            },
            {
              "name": "getDarkColor",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 23
                }
              },
              "preview": "Color& getDarkColor();",
              "documentation": "The dark color used to tint the slot's attachment for two color tinting. The dark\ncolor's alpha is not used."
            },
            {
              "name": "hasDarkColor",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 76,
                  "character": 21
                }
              },
              "preview": "bool hasDarkColor();",
              "documentation": "Returns true if this slot has a dark color."
            },
            {
              "name": "getAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 79,
                  "character": 29
                }
              },
              "preview": "Attachment* getAttachment();",
              "documentation": "The current attachment for the slot, or null if the slot has no attachment."
            },
            {
              "name": "setAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 84,
                  "character": 44
                }
              },
              "preview": "void setAttachment(Attachment* attachment);",
              "documentation": "Sets the slot's attachment and, if the attachment changed, resets sequenceIndex and clears the deform.\nThe deform is not cleared if the old attachment has the same VertexAttachment::getTimelineAttachment() as the\nspecified attachment."
            },
            {
              "name": "getSequenceIndex",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 88,
                  "character": 24
                }
              },
              "preview": "int getSequenceIndex();",
              "documentation": "The index of the texture region to display when the slot's attachment has a Sequence. -1 represents the\nSequence::getSetupIndex()."
            },
            {
              "name": "setSequenceIndex",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
              "range": {
                "start": {
                  "line": 89,
                  "character": 0
                },
                "end": {
                  "line": 89,
                  "character": 42
                }
              },
              "preview": "void setSequenceIndex(int sequenceIndex);"
            },
            {
              "name": "getDeform",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotPose.h",
              "range": {
                "start": {
                  "line": 95,
                  "character": 0
                },
                "end": {
                  "line": 95,
                  "character": 28
                }
              },
              "preview": "Vector<float>& getDeform();",
              "documentation": "Values to deform the slot's attachment. For an unweighted mesh, the entries are local positions for each vertex. For a\nweighted mesh, the entries are an offset for each vertex which will be added to the mesh's local vertex positions.\nSee VertexAttachment::computeWorldVertices() and DeformTimeline."
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotTimeline.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "SlotTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotTimeline.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 57,
              "character": 2
            }
          },
          "preview": "class SP_API SlotTimeline {",
          "documentation": "An interface for timelines which change the property of a slot.",
          "children": [
            {
              "name": "RTTI_DECL_NOPARENT",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotTimeline.h",
              "range": {
                "start": {
                  "line": 39,
                  "character": 0
                },
                "end": {
                  "line": 39,
                  "character": 20
                }
              },
              "preview": "RTTI_DECL_NOPARENT",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotTimeline.h",
                  "range": {
                    "start": {
                      "line": 39,
                      "character": 0
                    },
                    "end": {
                      "line": 39,
                      "character": 20
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotTimeline.h",
                  "range": {
                    "start": {
                      "line": 39,
                      "character": 0
                    },
                    "end": {
                      "line": 39,
                      "character": 20
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                }
              ]
            },
            {
              "name": "SlotTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotTimeline.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 29
                }
              },
              "preview": "SlotTimeline(int slotIndex);"
            },
            {
              "name": "~SlotTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotTimeline.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 25
                }
              },
              "preview": "virtual ~SlotTimeline();"
            },
            {
              "name": "getSlotIndex",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotTimeline.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 28
                }
              },
              "preview": "virtual int getSlotIndex();",
              "documentation": "The index of the slot in Skeleton::getSlots() that will be changed when this timeline is applied."
            },
            {
              "name": "setSlotIndex",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotTimeline.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 40
                }
              },
              "preview": "virtual void setSlotIndex(int inValue);"
            },
            {
              "name": "_slotIndex",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SlotTimeline.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 16
                }
              },
              "preview": "int _slotIndex;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpacingMode.h",
      "range": {
        "start": {
          "line": 32,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "SpacingMode",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpacingMode.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 2
            }
          },
          "preview": "enum SpacingMode {",
          "documentation": "Controls how bones after the first bone are positioned along the path.\n@see https://esotericsoftware.com/spine-path-constraints#Spacing-mode Spacing mode in the Spine User Guide.",
          "children": [
            {
              "name": "SpacingMode_Length",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpacingMode.h",
              "range": {
                "start": {
                  "line": 37,
                  "character": 0
                },
                "end": {
                  "line": 37,
                  "character": 24
                }
              },
              "preview": "SpacingMode_Length = 0,"
            },
            {
              "name": "SpacingMode_Fixed",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpacingMode.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 19
                }
              },
              "preview": "SpacingMode_Fixed,"
            },
            {
              "name": "SpacingMode_Percent",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpacingMode.h",
              "range": {
                "start": {
                  "line": 39,
                  "character": 0
                },
                "end": {
                  "line": 39,
                  "character": 21
                }
              },
              "preview": "SpacingMode_Percent,"
            },
            {
              "name": "SpacingMode_Proportional",
              "kind": "enum",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpacingMode.h",
              "range": {
                "start": {
                  "line": 40,
                  "character": 0
                },
                "end": {
                  "line": 40,
                  "character": 26
                }
              },
              "preview": "SpacingMode_Proportional"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineObject.h",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 56,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "String",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineObject.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 13
            }
          },
          "preview": "class String;"
        },
        {
          "name": "SpineObject",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineObject.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 55,
              "character": 2
            }
          },
          "preview": "class SP_API SpineObject {",
          "children": [
            {
              "name": "operator new",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineObject.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 31
                }
              },
              "preview": "void *operator new(size_t sz);"
            },
            {
              "name": "operator new",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineObject.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 59
                }
              },
              "preview": "void *operator new(size_t sz, const char *file, int line);"
            },
            {
              "name": "operator new",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineObject.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 42
                }
              },
              "preview": "void *operator new(size_t sz, void *ptr);"
            },
            {
              "name": "operator delete",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineObject.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 59
                }
              },
              "preview": "void operator delete(void *p, const char *file, int line);"
            },
            {
              "name": "operator delete",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineObject.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 42
                }
              },
              "preview": "void operator delete(void *p, void *mem);"
            },
            {
              "name": "operator delete",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineObject.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 31
                }
              },
              "preview": "void operator delete(void *p);"
            },
            {
              "name": "~SpineObject",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineObject.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 24
                }
              },
              "preview": "virtual ~SpineObject();"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 242,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "String",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 241,
              "character": 2
            }
          },
          "preview": "class SP_API String : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "String",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 3
                }
              },
              "preview": "String() : _length(0), _buffer(NULL), _tempowner(true) {"
            },
            {
              "name": "String",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 3
                }
              },
              "preview": "String(const char *chars, bool own = false, bool tofree = true) {"
            },
            {
              "name": "String",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 3
                }
              },
              "preview": "String(const String &other) {"
            },
            {
              "name": "length",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 72,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 3
                }
              },
              "preview": "size_t length() const {"
            },
            {
              "name": "isEmpty",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 76,
                  "character": 0
                },
                "end": {
                  "line": 78,
                  "character": 3
                }
              },
              "preview": "bool isEmpty() const {"
            },
            {
              "name": "buffer",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 82,
                  "character": 3
                }
              },
              "preview": "const char *buffer() const {"
            },
            {
              "name": "own",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 84,
                  "character": 0
                },
                "end": {
                  "line": 93,
                  "character": 3
                }
              },
              "preview": "void own(const String &other) {"
            },
            {
              "name": "own",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 95,
                  "character": 0
                },
                "end": {
                  "line": 108,
                  "character": 3
                }
              },
              "preview": "void own(const char *chars) {"
            },
            {
              "name": "unown",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 110,
                  "character": 0
                },
                "end": {
                  "line": 113,
                  "character": 3
                }
              },
              "preview": "void unown() {"
            },
            {
              "name": "operator=",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 115,
                  "character": 0
                },
                "end": {
                  "line": 129,
                  "character": 3
                }
              },
              "preview": "String &operator=(const String &other) {"
            },
            {
              "name": "operator=",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 131,
                  "character": 0
                },
                "end": {
                  "line": 145,
                  "character": 3
                }
              },
              "preview": "String &operator=(const char *chars) {"
            },
            {
              "name": "append",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 147,
                  "character": 0
                },
                "end": {
                  "line": 155,
                  "character": 3
                }
              },
              "preview": "String &append(const char *chars) {"
            },
            {
              "name": "append",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 157,
                  "character": 0
                },
                "end": {
                  "line": 165,
                  "character": 3
                }
              },
              "preview": "String &append(const String &other) {"
            },
            {
              "name": "append",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 167,
                  "character": 0
                },
                "end": {
                  "line": 172,
                  "character": 3
                }
              },
              "preview": "String &append(int other) {"
            },
            {
              "name": "append",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 174,
                  "character": 0
                },
                "end": {
                  "line": 179,
                  "character": 3
                }
              },
              "preview": "String &append(float other) {"
            },
            {
              "name": "startsWith",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 181,
                  "character": 0
                },
                "end": {
                  "line": 187,
                  "character": 3
                }
              },
              "preview": "bool startsWith(const String &needle) const {"
            },
            {
              "name": "lastIndexOf",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 189,
                  "character": 0
                },
                "end": {
                  "line": 194,
                  "character": 9
                }
              },
              "preview": "int lastIndexOf(const char c) const {"
            },
            {
              "name": "substring",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 196,
                  "character": 0
                },
                "end": {
                  "line": 204,
                  "character": 9
                }
              },
              "preview": "String substring(int startIndex, int length) const {"
            },
            {
              "name": "substring",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 206,
                  "character": 0
                },
                "end": {
                  "line": 215,
                  "character": 9
                }
              },
              "preview": "String substring(int startIndex) const {"
            },
            {
              "name": "~String",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 231,
                  "character": 0
                },
                "end": {
                  "line": 235,
                  "character": 3
                }
              },
              "preview": "~String() {"
            },
            {
              "name": "_length",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 238,
                  "character": 0
                },
                "end": {
                  "line": 238,
                  "character": 24
                }
              },
              "preview": "mutable size_t _length;"
            },
            {
              "name": "_buffer",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 239,
                  "character": 0
                },
                "end": {
                  "line": 239,
                  "character": 23
                }
              },
              "preview": "mutable char *_buffer;"
            },
            {
              "name": "_tempowner",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/SpineString.h",
              "range": {
                "start": {
                  "line": 240,
                  "character": 0
                },
                "end": {
                  "line": 240,
                  "character": 25
                }
              },
              "preview": "mutable bool _tempowner;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureLoader.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 48,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "AtlasPage",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureLoader.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 16
            }
          },
          "preview": "class AtlasPage;"
        },
        {
          "name": "TextureLoader",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureLoader.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 47,
              "character": 2
            }
          },
          "preview": "class SP_API TextureLoader : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "TextureLoader",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureLoader.h",
              "range": {
                "start": {
                  "line": 40,
                  "character": 0
                },
                "end": {
                  "line": 40,
                  "character": 17
                }
              },
              "preview": "TextureLoader();"
            },
            {
              "name": "~TextureLoader",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureLoader.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 26
                }
              },
              "preview": "virtual ~TextureLoader();"
            },
            {
              "name": "load",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureLoader.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 60
                }
              },
              "preview": "virtual void load(AtlasPage &page, const String &path) = 0;"
            },
            {
              "name": "unload",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureLoader.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 40
                }
              },
              "preview": "virtual void unload(void *texture) = 0;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureRegion.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 47,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "TextureRegion",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureRegion.h",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 46,
              "character": 2
            }
          },
          "preview": "class SP_API TextureRegion : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "rendererObject",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureRegion.h",
              "range": {
                "start": {
                  "line": 37,
                  "character": 0
                },
                "end": {
                  "line": 37,
                  "character": 22
                }
              },
              "preview": "void *rendererObject;"
            },
            {
              "name": "u",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureRegion.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 9
                }
              },
              "preview": "float u, v, u2, v2;"
            },
            {
              "name": "v",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureRegion.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 12
                }
              },
              "preview": "float u, v, u2, v2;"
            },
            {
              "name": "u2",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureRegion.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 16
                }
              },
              "preview": "float u, v, u2, v2;"
            },
            {
              "name": "v2",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureRegion.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 20
                }
              },
              "preview": "float u, v, u2, v2;"
            },
            {
              "name": "degrees",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureRegion.h",
              "range": {
                "start": {
                  "line": 39,
                  "character": 0
                },
                "end": {
                  "line": 39,
                  "character": 13
                }
              },
              "preview": "int degrees;"
            },
            {
              "name": "offsetX",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureRegion.h",
              "range": {
                "start": {
                  "line": 40,
                  "character": 0
                },
                "end": {
                  "line": 40,
                  "character": 15
                }
              },
              "preview": "float offsetX, offsetY;"
            },
            {
              "name": "offsetY",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureRegion.h",
              "range": {
                "start": {
                  "line": 40,
                  "character": 0
                },
                "end": {
                  "line": 40,
                  "character": 24
                }
              },
              "preview": "float offsetX, offsetY;"
            },
            {
              "name": "width",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureRegion.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 11
                }
              },
              "preview": "int width, height;"
            },
            {
              "name": "height",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureRegion.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 19
                }
              },
              "preview": "int width, height;"
            },
            {
              "name": "originalWidth",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureRegion.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 19
                }
              },
              "preview": "int originalWidth, originalHeight;"
            },
            {
              "name": "originalHeight",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureRegion.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 35
                }
              },
              "preview": "int originalWidth, originalHeight;"
            },
            {
              "name": "TextureRegion",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureRegion.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 162
                }
              },
              "preview": "TextureRegion(): rendererObject(NULL), u(0), v(0), u2(0), v2(0), degrees(0), offsetX(0), offsetY(0), width(0), height(0), originalWidth(0), originalHeight(0) {};"
            },
            {
              "name": "~TextureRegion",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TextureRegion.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 21
                }
              },
              "preview": "~TextureRegion() {};"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 84,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 40,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "Event",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 12
            }
          },
          "preview": "class Event;"
        },
        {
          "name": "Timeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 83,
              "character": 2
            }
          },
          "preview": "class SP_API Timeline : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "RTTI_DECL_NOPARENT",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 19
                }
              },
              "preview": "RTTI_DECL_NOPARENT",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
                  "range": {
                    "start": {
                      "line": 45,
                      "character": 0
                    },
                    "end": {
                      "line": 45,
                      "character": 19
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
                  "range": {
                    "start": {
                      "line": 45,
                      "character": 0
                    },
                    "end": {
                      "line": 45,
                      "character": 19
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                }
              ]
            },
            {
              "name": "Timeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 50
                }
              },
              "preview": "Timeline(size_t frameCount, size_t frameEntries);"
            },
            {
              "name": "~Timeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 21
                }
              },
              "preview": "virtual ~Timeline();"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 50
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            },
            {
              "name": "getFrameEntries",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
              "range": {
                "start": {
                  "line": 67,
                  "character": 0
                },
                "end": {
                  "line": 67,
                  "character": 26
                }
              },
              "preview": "size_t getFrameEntries();"
            },
            {
              "name": "getFrameCount",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 24
                }
              },
              "preview": "size_t getFrameCount();"
            },
            {
              "name": "getFrames",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 28
                }
              },
              "preview": "Vector<float> &getFrames();"
            },
            {
              "name": "getDuration",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 21
                }
              },
              "preview": "float getDuration();"
            },
            {
              "name": "getPropertyIds",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 47
                }
              },
              "preview": "virtual Vector <PropertyId> &getPropertyIds();"
            },
            {
              "name": "setPropertyIds",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
              "range": {
                "start": {
                  "line": 78,
                  "character": 0
                },
                "end": {
                  "line": 78,
                  "character": 72
                }
              },
              "preview": "void setPropertyIds(PropertyId propertyIds[], size_t propertyIdsCount);"
            },
            {
              "name": "_propertyIds",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 40
                }
              },
              "preview": "Vector <PropertyId> _propertyIds;"
            },
            {
              "name": "_frames",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 23
                }
              },
              "preview": "Vector<float> _frames;"
            },
            {
              "name": "_frameEntries",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Timeline.h",
              "range": {
                "start": {
                  "line": 82,
                  "character": 0
                },
                "end": {
                  "line": 82,
                  "character": 22
                }
              },
              "preview": "size_t _frameEntries;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 72,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "Bone",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 11
            }
          },
          "preview": "class Bone;"
        },
        {
          "name": "BonePose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 40,
              "character": 15
            }
          },
          "preview": "class BonePose;"
        },
        {
          "name": "TransformConstraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 71,
              "character": 2
            }
          },
          "preview": "class SP_API TransformConstraint : public ConstraintGeneric<TransformConstraint, TransformConstraintData, TransformConstraintPose> {",
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
              "range": {
                "start": {
                  "line": 46,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
                  "range": {
                    "start": {
                      "line": 46,
                      "character": 0
                    },
                    "end": {
                      "line": 46,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
                  "range": {
                    "start": {
                      "line": 46,
                      "character": 0
                    },
                    "end": {
                      "line": 46,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "TransformConstraint",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
              "range": {
                "start": {
                  "line": 49,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 72
                }
              },
              "preview": "TransformConstraint(TransformConstraintData& data, Skeleton& skeleton);"
            },
            {
              "name": "copy",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 55
                }
              },
              "preview": "virtual TransformConstraint* copy(Skeleton& skeleton);"
            },
            {
              "name": "update",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 59
                }
              },
              "preview": "void update(Skeleton& skeleton, Physics physics) override;",
              "documentation": "Applies the constraint to the constrained bones."
            },
            {
              "name": "sort",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 40
                }
              },
              "preview": "void sort(Skeleton& skeleton) override;"
            },
            {
              "name": "isSourceActive",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 32
                }
              },
              "preview": "bool isSourceActive() override;"
            },
            {
              "name": "getBones",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 31
                }
              },
              "preview": "Vector<BonePose*>& getBones();",
              "documentation": "The bones that will be modified by this transform constraint."
            },
            {
              "name": "getSource",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 19
                }
              },
              "preview": "Bone* getSource();",
              "documentation": "The bone whose world transform will be copied to the constrained bones."
            },
            {
              "name": "setSource",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
              "range": {
                "start": {
                  "line": 66,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 30
                }
              },
              "preview": "void setSource(Bone* source);"
            },
            {
              "name": "_bones",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 26
                }
              },
              "preview": "Vector<BonePose*> _bones;"
            },
            {
              "name": "_source",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraint.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 15
                }
              },
              "preview": "Bone* _source;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 225,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "BoneData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 15
            }
          },
          "preview": "class BoneData;"
        },
        {
          "name": "TransformConstraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 26
            }
          },
          "preview": "class TransformConstraint;"
        },
        {
          "name": "BonePose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 40,
              "character": 15
            }
          },
          "preview": "class BonePose;"
        },
        {
          "name": "TransformConstraintPose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 30
            }
          },
          "preview": "class TransformConstraintPose;"
        },
        {
          "name": "FromProperty",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 58,
              "character": 2
            }
          },
          "preview": "class SP_API FromProperty : public SpineObject {",
          "documentation": "Source property for a TransformConstraint.",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "offset",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 14
                }
              },
              "preview": "float offset;",
              "documentation": "The value of this property that corresponds to ToProperty offset."
            },
            {
              "name": "ToProperty",
              "kind": "class",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 25
                }
              },
              "preview": "Vector<class ToProperty*> to;",
              "documentation": "Constrained properties.",
              "supertypes": [
                "SpineObject"
              ]
            },
            {
              "name": "to",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 30
                }
              },
              "preview": "Vector<class ToProperty*> to;",
              "documentation": "Constrained properties."
            },
            {
              "name": "FromProperty",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 16
                }
              },
              "preview": "FromProperty();"
            },
            {
              "name": "~FromProperty",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 25
                }
              },
              "preview": "virtual ~FromProperty();"
            },
            {
              "name": "value",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 57,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 91
                }
              },
              "preview": "virtual float value(Skeleton& skeleton, BonePose& source, bool local, float* offsets) = 0;",
              "documentation": "Reads this property from the specified bone."
            }
          ]
        },
        {
          "name": "ToProperty",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 61,
              "character": 0
            },
            "end": {
              "line": 81,
              "character": 2
            }
          },
          "preview": "class SP_API ToProperty : public SpineObject {",
          "documentation": "Constrained property for a TransformConstraint.",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "offset",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 14
                }
              },
              "preview": "float offset;",
              "documentation": "The value of this property that corresponds to FromProperty offset."
            },
            {
              "name": "max",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 68,
                  "character": 0
                },
                "end": {
                  "line": 68,
                  "character": 11
                }
              },
              "preview": "float max;",
              "documentation": "The maximum value of this property when clamped."
            },
            {
              "name": "scale",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 13
                }
              },
              "preview": "float scale;",
              "documentation": "The scale of the FromProperty value in relation to this property."
            },
            {
              "name": "ToProperty",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 14
                }
              },
              "preview": "ToProperty();"
            },
            {
              "name": "~ToProperty",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 23
                }
              },
              "preview": "virtual ~ToProperty();"
            },
            {
              "name": "mix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 54
                }
              },
              "preview": "virtual float mix(TransformConstraintPose& pose) = 0;",
              "documentation": "Reads the mix for this property from the specified pose."
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 80,
                  "character": 131
                }
              },
              "preview": "virtual void apply(Skeleton& skeleton, TransformConstraintPose& pose, BonePose& bone, float value, bool local, bool additive) = 0;",
              "documentation": "Applies the value to this property."
            }
          ]
        },
        {
          "name": "FromRotate",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 83,
              "character": 0
            },
            "end": {
              "line": 86,
              "character": 2
            }
          },
          "preview": "class SP_API FromRotate : public FromProperty {",
          "supertypes": [
            "FromProperty"
          ],
          "children": [
            {
              "name": "value",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 88
                }
              },
              "preview": "float value(Skeleton &skeleton, BonePose& source, bool local, float* offsets) override;"
            }
          ]
        },
        {
          "name": "ToRotate",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 88,
              "character": 0
            },
            "end": {
              "line": 92,
              "character": 2
            }
          },
          "preview": "class SP_API ToRotate : public ToProperty {",
          "supertypes": [
            "ToProperty"
          ],
          "children": [
            {
              "name": "mix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 90,
                  "character": 0
                },
                "end": {
                  "line": 90,
                  "character": 51
                }
              },
              "preview": "float mix(TransformConstraintPose& pose) override;"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 91,
                  "character": 0
                },
                "end": {
                  "line": 91,
                  "character": 128
                }
              },
              "preview": "void apply(Skeleton &skeleton, TransformConstraintPose& pose, BonePose& bone, float value, bool local, bool additive) override;"
            }
          ]
        },
        {
          "name": "FromX",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 94,
              "character": 0
            },
            "end": {
              "line": 97,
              "character": 2
            }
          },
          "preview": "class SP_API FromX : public FromProperty {",
          "supertypes": [
            "FromProperty"
          ],
          "children": [
            {
              "name": "value",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 96,
                  "character": 0
                },
                "end": {
                  "line": 96,
                  "character": 88
                }
              },
              "preview": "float value(Skeleton &skeleton, BonePose& source, bool local, float* offsets) override;"
            }
          ]
        },
        {
          "name": "ToX",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 99,
              "character": 0
            },
            "end": {
              "line": 103,
              "character": 2
            }
          },
          "preview": "class SP_API ToX : public ToProperty {",
          "supertypes": [
            "ToProperty"
          ],
          "children": [
            {
              "name": "mix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 101,
                  "character": 0
                },
                "end": {
                  "line": 101,
                  "character": 51
                }
              },
              "preview": "float mix(TransformConstraintPose& pose) override;"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 102,
                  "character": 0
                },
                "end": {
                  "line": 102,
                  "character": 128
                }
              },
              "preview": "void apply(Skeleton &skeleton, TransformConstraintPose& pose, BonePose& bone, float value, bool local, bool additive) override;"
            }
          ]
        },
        {
          "name": "FromY",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 105,
              "character": 0
            },
            "end": {
              "line": 108,
              "character": 2
            }
          },
          "preview": "class SP_API FromY : public FromProperty {",
          "supertypes": [
            "FromProperty"
          ],
          "children": [
            {
              "name": "value",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 107,
                  "character": 0
                },
                "end": {
                  "line": 107,
                  "character": 88
                }
              },
              "preview": "float value(Skeleton &skeleton, BonePose& source, bool local, float* offsets) override;"
            }
          ]
        },
        {
          "name": "ToY",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 110,
              "character": 0
            },
            "end": {
              "line": 114,
              "character": 2
            }
          },
          "preview": "class SP_API ToY : public ToProperty {",
          "supertypes": [
            "ToProperty"
          ],
          "children": [
            {
              "name": "mix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 112,
                  "character": 0
                },
                "end": {
                  "line": 112,
                  "character": 51
                }
              },
              "preview": "float mix(TransformConstraintPose& pose) override;"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 113,
                  "character": 0
                },
                "end": {
                  "line": 113,
                  "character": 128
                }
              },
              "preview": "void apply(Skeleton &skeleton, TransformConstraintPose& pose, BonePose& bone, float value, bool local, bool additive) override;"
            }
          ]
        },
        {
          "name": "FromScaleX",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 116,
              "character": 0
            },
            "end": {
              "line": 119,
              "character": 2
            }
          },
          "preview": "class SP_API FromScaleX : public FromProperty {",
          "supertypes": [
            "FromProperty"
          ],
          "children": [
            {
              "name": "value",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 118,
                  "character": 0
                },
                "end": {
                  "line": 118,
                  "character": 88
                }
              },
              "preview": "float value(Skeleton &skeleton, BonePose& source, bool local, float* offsets) override;"
            }
          ]
        },
        {
          "name": "ToScaleX",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 121,
              "character": 0
            },
            "end": {
              "line": 125,
              "character": 2
            }
          },
          "preview": "class SP_API ToScaleX : public ToProperty {",
          "supertypes": [
            "ToProperty"
          ],
          "children": [
            {
              "name": "mix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 123,
                  "character": 0
                },
                "end": {
                  "line": 123,
                  "character": 51
                }
              },
              "preview": "float mix(TransformConstraintPose& pose) override;"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 124,
                  "character": 0
                },
                "end": {
                  "line": 124,
                  "character": 128
                }
              },
              "preview": "void apply(Skeleton &skeleton, TransformConstraintPose& pose, BonePose& bone, float value, bool local, bool additive) override;"
            }
          ]
        },
        {
          "name": "FromScaleY",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 127,
              "character": 0
            },
            "end": {
              "line": 130,
              "character": 2
            }
          },
          "preview": "class SP_API FromScaleY : public FromProperty {",
          "supertypes": [
            "FromProperty"
          ],
          "children": [
            {
              "name": "value",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 129,
                  "character": 0
                },
                "end": {
                  "line": 129,
                  "character": 88
                }
              },
              "preview": "float value(Skeleton &skeleton, BonePose& source, bool local, float* offsets) override;"
            }
          ]
        },
        {
          "name": "ToScaleY",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 132,
              "character": 0
            },
            "end": {
              "line": 136,
              "character": 2
            }
          },
          "preview": "class SP_API ToScaleY : public ToProperty {",
          "supertypes": [
            "ToProperty"
          ],
          "children": [
            {
              "name": "mix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 134,
                  "character": 0
                },
                "end": {
                  "line": 134,
                  "character": 51
                }
              },
              "preview": "float mix(TransformConstraintPose& pose) override;"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 135,
                  "character": 0
                },
                "end": {
                  "line": 135,
                  "character": 128
                }
              },
              "preview": "void apply(Skeleton &skeleton, TransformConstraintPose& pose, BonePose& bone, float value, bool local, bool additive) override;"
            }
          ]
        },
        {
          "name": "FromShearY",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 138,
              "character": 0
            },
            "end": {
              "line": 141,
              "character": 2
            }
          },
          "preview": "class SP_API FromShearY : public FromProperty {",
          "supertypes": [
            "FromProperty"
          ],
          "children": [
            {
              "name": "value",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 140,
                  "character": 0
                },
                "end": {
                  "line": 140,
                  "character": 88
                }
              },
              "preview": "float value(Skeleton &skeleton, BonePose& source, bool local, float* offsets) override;"
            }
          ]
        },
        {
          "name": "ToShearY",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 143,
              "character": 0
            },
            "end": {
              "line": 147,
              "character": 2
            }
          },
          "preview": "class SP_API ToShearY : public ToProperty {",
          "supertypes": [
            "ToProperty"
          ],
          "children": [
            {
              "name": "mix",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 145,
                  "character": 0
                },
                "end": {
                  "line": 145,
                  "character": 51
                }
              },
              "preview": "float mix(TransformConstraintPose& pose) override;"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 146,
                  "character": 0
                },
                "end": {
                  "line": 146,
                  "character": 128
                }
              },
              "preview": "void apply(Skeleton &skeleton, TransformConstraintPose& pose, BonePose& bone, float value, bool local, bool additive) override;"
            }
          ]
        },
        {
          "name": "TransformConstraintData",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
          "range": {
            "start": {
              "line": 152,
              "character": 0
            },
            "end": {
              "line": 224,
              "character": 2
            }
          },
          "preview": "class SP_API TransformConstraintData : public ConstraintDataGeneric<TransformConstraint, TransformConstraintPose> {",
          "documentation": "Stores the setup pose for a TransformConstraint.\nSee https://esotericsoftware.com/spine-transform-constraints Transform constraints in the Spine User Guide.",
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 154,
                  "character": 0
                },
                "end": {
                  "line": 154,
                  "character": 11
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
                  "range": {
                    "start": {
                      "line": 154,
                      "character": 0
                    },
                    "end": {
                      "line": 154,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
                  "range": {
                    "start": {
                      "line": 154,
                      "character": 0
                    },
                    "end": {
                      "line": 154,
                      "character": 11
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "ROTATION",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 155,
                  "character": 0
                },
                "end": {
                  "line": 155,
                  "character": 31
                }
              },
              "preview": "static const int ROTATION = 0, X = 1, Y = 2, SCALEX = 3, SCALEY = 4, SHEARY = 5;"
            },
            {
              "name": "X",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 155,
                  "character": 0
                },
                "end": {
                  "line": 155,
                  "character": 38
                }
              },
              "preview": "static const int ROTATION = 0, X = 1, Y = 2, SCALEX = 3, SCALEY = 4, SHEARY = 5;"
            },
            {
              "name": "Y",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 155,
                  "character": 0
                },
                "end": {
                  "line": 155,
                  "character": 45
                }
              },
              "preview": "static const int ROTATION = 0, X = 1, Y = 2, SCALEX = 3, SCALEY = 4, SHEARY = 5;"
            },
            {
              "name": "SCALEX",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 155,
                  "character": 0
                },
                "end": {
                  "line": 155,
                  "character": 57
                }
              },
              "preview": "static const int ROTATION = 0, X = 1, Y = 2, SCALEX = 3, SCALEY = 4, SHEARY = 5;"
            },
            {
              "name": "SCALEY",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 155,
                  "character": 0
                },
                "end": {
                  "line": 155,
                  "character": 69
                }
              },
              "preview": "static const int ROTATION = 0, X = 1, Y = 2, SCALEX = 3, SCALEY = 4, SHEARY = 5;"
            },
            {
              "name": "SHEARY",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 155,
                  "character": 0
                },
                "end": {
                  "line": 155,
                  "character": 81
                }
              },
              "preview": "static const int ROTATION = 0, X = 1, Y = 2, SCALEX = 3, SCALEY = 4, SHEARY = 5;"
            },
            {
              "name": "TransformConstraintData",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 163,
                  "character": 0
                },
                "end": {
                  "line": 163,
                  "character": 54
                }
              },
              "preview": "explicit TransformConstraintData(const String &name);"
            },
            {
              "name": "~TransformConstraintData",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 164,
                  "character": 0
                },
                "end": {
                  "line": 164,
                  "character": 28
                }
              },
              "preview": "~TransformConstraintData();"
            },
            {
              "name": "create",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 166,
                  "character": 0
                },
                "end": {
                  "line": 166,
                  "character": 57
                }
              },
              "preview": "virtual Constraint* create(Skeleton& skeleton) override;"
            },
            {
              "name": "getBones",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 169,
                  "character": 0
                },
                "end": {
                  "line": 169,
                  "character": 31
                }
              },
              "preview": "Vector<BoneData*>& getBones();",
              "documentation": "The bones that will be modified by this transform constraint."
            },
            {
              "name": "getSource",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 172,
                  "character": 0
                },
                "end": {
                  "line": 172,
                  "character": 23
                }
              },
              "preview": "BoneData* getSource();",
              "documentation": "The bone whose world transform will be copied to the constrained bones."
            },
            {
              "name": "setSource",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 173,
                  "character": 0
                },
                "end": {
                  "line": 173,
                  "character": 34
                }
              },
              "preview": "void setSource(BoneData* source);"
            },
            {
              "name": "getOffsetRotation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 176,
                  "character": 0
                },
                "end": {
                  "line": 176,
                  "character": 27
                }
              },
              "preview": "float getOffsetRotation();",
              "documentation": "An offset added to the constrained bone rotation."
            },
            {
              "name": "setOffsetRotation",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 177,
                  "character": 0
                },
                "end": {
                  "line": 177,
                  "character": 46
                }
              },
              "preview": "void setOffsetRotation(float offsetRotation);"
            },
            {
              "name": "getOffsetX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 180,
                  "character": 0
                },
                "end": {
                  "line": 180,
                  "character": 20
                }
              },
              "preview": "float getOffsetX();",
              "documentation": "An offset added to the constrained bone X translation."
            },
            {
              "name": "setOffsetX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 181,
                  "character": 0
                },
                "end": {
                  "line": 181,
                  "character": 32
                }
              },
              "preview": "void setOffsetX(float offsetX);"
            },
            {
              "name": "getOffsetY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 184,
                  "character": 0
                },
                "end": {
                  "line": 184,
                  "character": 20
                }
              },
              "preview": "float getOffsetY();",
              "documentation": "An offset added to the constrained bone Y translation."
            },
            {
              "name": "setOffsetY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 185,
                  "character": 0
                },
                "end": {
                  "line": 185,
                  "character": 32
                }
              },
              "preview": "void setOffsetY(float offsetY);"
            },
            {
              "name": "getOffsetScaleX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 188,
                  "character": 0
                },
                "end": {
                  "line": 188,
                  "character": 25
                }
              },
              "preview": "float getOffsetScaleX();",
              "documentation": "An offset added to the constrained bone scaleX."
            },
            {
              "name": "setOffsetScaleX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 189,
                  "character": 0
                },
                "end": {
                  "line": 189,
                  "character": 42
                }
              },
              "preview": "void setOffsetScaleX(float offsetScaleX);"
            },
            {
              "name": "getOffsetScaleY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 192,
                  "character": 0
                },
                "end": {
                  "line": 192,
                  "character": 25
                }
              },
              "preview": "float getOffsetScaleY();",
              "documentation": "An offset added to the constrained bone scaleY."
            },
            {
              "name": "setOffsetScaleY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 193,
                  "character": 0
                },
                "end": {
                  "line": 193,
                  "character": 42
                }
              },
              "preview": "void setOffsetScaleY(float offsetScaleY);"
            },
            {
              "name": "getOffsetShearY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 196,
                  "character": 0
                },
                "end": {
                  "line": 196,
                  "character": 25
                }
              },
              "preview": "float getOffsetShearY();",
              "documentation": "An offset added to the constrained bone shearY."
            },
            {
              "name": "setOffsetShearY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 197,
                  "character": 0
                },
                "end": {
                  "line": 197,
                  "character": 42
                }
              },
              "preview": "void setOffsetShearY(float offsetShearY);"
            },
            {
              "name": "getLocalSource",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 200,
                  "character": 0
                },
                "end": {
                  "line": 200,
                  "character": 23
                }
              },
              "preview": "bool getLocalSource();",
              "documentation": "Reads the source bone's local transform instead of its world transform."
            },
            {
              "name": "setLocalSource",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 201,
                  "character": 0
                },
                "end": {
                  "line": 201,
                  "character": 39
                }
              },
              "preview": "void setLocalSource(bool localSource);"
            },
            {
              "name": "getLocalTarget",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 204,
                  "character": 0
                },
                "end": {
                  "line": 204,
                  "character": 23
                }
              },
              "preview": "bool getLocalTarget();",
              "documentation": "Sets the constrained bones' local transforms instead of their world transforms."
            },
            {
              "name": "setLocalTarget",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 205,
                  "character": 0
                },
                "end": {
                  "line": 205,
                  "character": 39
                }
              },
              "preview": "void setLocalTarget(bool localTarget);"
            },
            {
              "name": "getAdditive",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 208,
                  "character": 0
                },
                "end": {
                  "line": 208,
                  "character": 20
                }
              },
              "preview": "bool getAdditive();",
              "documentation": "Adds the source bone transform to the constrained bones instead of setting it absolutely."
            },
            {
              "name": "setAdditive",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 209,
                  "character": 0
                },
                "end": {
                  "line": 209,
                  "character": 33
                }
              },
              "preview": "void setAdditive(bool additive);"
            },
            {
              "name": "getClamp",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 212,
                  "character": 0
                },
                "end": {
                  "line": 212,
                  "character": 17
                }
              },
              "preview": "bool getClamp();",
              "documentation": "Prevents constrained bones from exceeding the ranged defined by offset and max."
            },
            {
              "name": "setClamp",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 213,
                  "character": 0
                },
                "end": {
                  "line": 213,
                  "character": 27
                }
              },
              "preview": "void setClamp(bool clamp);"
            },
            {
              "name": "getProperties",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 216,
                  "character": 0
                },
                "end": {
                  "line": 216,
                  "character": 46
                }
              },
              "preview": "Vector<class FromProperty*>& getProperties();",
              "documentation": "The mapping of transform properties to other transform properties."
            },
            {
              "name": "_bones",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 219,
                  "character": 0
                },
                "end": {
                  "line": 219,
                  "character": 26
                }
              },
              "preview": "Vector<BoneData*> _bones;"
            },
            {
              "name": "_source",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 220,
                  "character": 0
                },
                "end": {
                  "line": 220,
                  "character": 19
                }
              },
              "preview": "BoneData* _source;"
            },
            {
              "name": "_offsets",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 221,
                  "character": 0
                },
                "end": {
                  "line": 221,
                  "character": 19
                }
              },
              "preview": "float _offsets[6];  // [rotation, x, y, scaleX, scaleY, shearY]"
            },
            {
              "name": "_localSource",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 222,
                  "character": 0
                },
                "end": {
                  "line": 222,
                  "character": 19
                }
              },
              "preview": "bool _localSource, _localTarget, _additive, _clamp;"
            },
            {
              "name": "_localTarget",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 222,
                  "character": 0
                },
                "end": {
                  "line": 222,
                  "character": 33
                }
              },
              "preview": "bool _localSource, _localTarget, _additive, _clamp;"
            },
            {
              "name": "_additive",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 222,
                  "character": 0
                },
                "end": {
                  "line": 222,
                  "character": 44
                }
              },
              "preview": "bool _localSource, _localTarget, _additive, _clamp;"
            },
            {
              "name": "_clamp",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 222,
                  "character": 0
                },
                "end": {
                  "line": 222,
                  "character": 52
                }
              },
              "preview": "bool _localSource, _localTarget, _additive, _clamp;"
            },
            {
              "name": "_properties",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintData.h",
              "range": {
                "start": {
                  "line": 223,
                  "character": 0
                },
                "end": {
                  "line": 223,
                  "character": 41
                }
              },
              "preview": "Vector<class FromProperty*> _properties;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 88,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "TransformConstraintPose",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 87,
              "character": 5
            }
          },
          "preview": "class SP_API TransformConstraintPose : public Pose<TransformConstraintPose> {",
          "documentation": "Stores a pose for a transform constraint.",
          "children": [
            {
              "name": "_mixRotate",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 24
                }
              },
              "preview": "float _mixRotate, _mixX, _mixY, _mixScaleX, _mixScaleY, _mixShearY;"
            },
            {
              "name": "_mixX",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 31
                }
              },
              "preview": "float _mixRotate, _mixX, _mixY, _mixScaleX, _mixScaleY, _mixShearY;"
            },
            {
              "name": "_mixY",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 38
                }
              },
              "preview": "float _mixRotate, _mixX, _mixY, _mixScaleX, _mixScaleY, _mixShearY;"
            },
            {
              "name": "_mixScaleX",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 50
                }
              },
              "preview": "float _mixRotate, _mixX, _mixY, _mixScaleX, _mixScaleY, _mixShearY;"
            },
            {
              "name": "_mixScaleY",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 62
                }
              },
              "preview": "float _mixRotate, _mixX, _mixY, _mixScaleX, _mixScaleY, _mixShearY;"
            },
            {
              "name": "_mixShearY",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 74
                }
              },
              "preview": "float _mixRotate, _mixX, _mixY, _mixScaleX, _mixScaleY, _mixShearY;"
            },
            {
              "name": "TransformConstraintPose",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 33
                }
              },
              "preview": "TransformConstraintPose();"
            },
            {
              "name": "~TransformConstraintPose",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 42
                }
              },
              "preview": "virtual ~TransformConstraintPose();"
            },
            {
              "name": "set",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 64
                }
              },
              "preview": "virtual void set(TransformConstraintPose& pose) override;"
            },
            {
              "name": "getMixRotate",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 28
                }
              },
              "preview": "float getMixRotate();",
              "documentation": "A percentage (0-1) that controls the mix between the constrained and unconstrained rotation."
            },
            {
              "name": "setMixRotate",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 66,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 42
                }
              },
              "preview": "void setMixRotate(float mixRotate);"
            },
            {
              "name": "getMixX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 23
                }
              },
              "preview": "float getMixX();",
              "documentation": "A percentage (0-1) that controls the mix between the constrained and unconstrained translation X."
            },
            {
              "name": "setMixX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 70,
                  "character": 0
                },
                "end": {
                  "line": 70,
                  "character": 32
                }
              },
              "preview": "void setMixX(float mixX);"
            },
            {
              "name": "getMixY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 23
                }
              },
              "preview": "float getMixY();",
              "documentation": "A percentage (0-1) that controls the mix between the constrained and unconstrained translation Y."
            },
            {
              "name": "setMixY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 32
                }
              },
              "preview": "void setMixY(float mixY);"
            },
            {
              "name": "getMixScaleX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 28
                }
              },
              "preview": "float getMixScaleX();",
              "documentation": "A percentage (0-1) that controls the mix between the constrained and unconstrained scale X."
            },
            {
              "name": "setMixScaleX",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 78,
                  "character": 0
                },
                "end": {
                  "line": 78,
                  "character": 42
                }
              },
              "preview": "void setMixScaleX(float mixScaleX);"
            },
            {
              "name": "getMixScaleY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 28
                }
              },
              "preview": "float getMixScaleY();",
              "documentation": "A percentage (0-1) that controls the mix between the constrained and unconstrained scale Y."
            },
            {
              "name": "setMixScaleY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 82,
                  "character": 0
                },
                "end": {
                  "line": 82,
                  "character": 42
                }
              },
              "preview": "void setMixScaleY(float mixScaleY);"
            },
            {
              "name": "getMixShearY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 85,
                  "character": 0
                },
                "end": {
                  "line": 85,
                  "character": 28
                }
              },
              "preview": "float getMixShearY();",
              "documentation": "A percentage (0-1) that controls the mix between the constrained and unconstrained shear Y."
            },
            {
              "name": "setMixShearY",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintPose.h",
              "range": {
                "start": {
                  "line": 86,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 42
                }
              },
              "preview": "void setMixShearY(float mixShearY);"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintTimeline.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 68,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "TransformConstraintTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintTimeline.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 67,
              "character": 2
            }
          },
          "preview": "class SP_API TransformConstraintTimeline : public CurveTimeline, public ConstraintTimeline {",
          "supertypes": [
            "CurveTimeline",
            "ConstraintTimeline"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintTimeline.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "TransformConstraintTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 107
                }
              },
              "preview": "explicit TransformConstraintTimeline(size_t frameCount, size_t bezierCount, int transformConstraintIndex);"
            },
            {
              "name": "~TransformConstraintTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 47,
                  "character": 40
                }
              },
              "preview": "virtual ~TransformConstraintTimeline();"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 46
                }
              },
              "preview": "apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha, MixBlend blend,"
            },
            {
              "name": "setFrame",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 57,
                  "character": 40
                }
              },
              "preview": "void setFrame(int frame, float time, float mixRotate, float mixX, float mixY, float mixScaleX,",
              "documentation": "Sets the time, rotate mix, translate mix, scale mix, and shear mix for the specified frame.\n@param frame Between 0 and frameCount, inclusive.\n@param time The frame time in seconds."
            },
            {
              "name": "ENTRIES",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 60,
                  "character": 0
                },
                "end": {
                  "line": 60,
                  "character": 30
                }
              },
              "preview": "static const int ENTRIES = 7;"
            },
            {
              "name": "ROTATE",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 29
                }
              },
              "preview": "static const int ROTATE = 1;"
            },
            {
              "name": "X",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 62,
                  "character": 24
                }
              },
              "preview": "static const int X = 2;"
            },
            {
              "name": "Y",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 24
                }
              },
              "preview": "static const int Y = 3;"
            },
            {
              "name": "SCALEX",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 64,
                  "character": 29
                }
              },
              "preview": "static const int SCALEX = 4;"
            },
            {
              "name": "SCALEY",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 29
                }
              },
              "preview": "static const int SCALEY = 5;"
            },
            {
              "name": "SHEARY",
              "kind": "property",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TransformConstraintTimeline.h",
              "range": {
                "start": {
                  "line": 66,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 29
                }
              },
              "preview": "static const int SHEARY = 6;"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 83,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "TranslateTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 50,
              "character": 2
            }
          },
          "preview": "class SP_API TranslateTimeline : public BoneTimeline2 {",
          "documentation": "Changes a bone's local X and Y translation.",
          "supertypes": [
            "BoneTimeline2"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "TranslateTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 82
                }
              },
              "preview": "explicit TranslateTimeline(size_t frameCount, size_t bezierCount, int boneIndex);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 49,
                  "character": 41
                }
              },
              "preview": "virtual void apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
            }
          ]
        },
        {
          "name": "TranslateXTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
          "range": {
            "start": {
              "line": 53,
              "character": 0
            },
            "end": {
              "line": 66,
              "character": 2
            }
          },
          "preview": "class SP_API TranslateXTimeline : public BoneTimeline1 {",
          "documentation": "Changes a bone's local X translation.",
          "supertypes": [
            "BoneTimeline1"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
                  "range": {
                    "start": {
                      "line": 58,
                      "character": 0
                    },
                    "end": {
                      "line": 58,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
                  "range": {
                    "start": {
                      "line": 58,
                      "character": 0
                    },
                    "end": {
                      "line": 58,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "TranslateXTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 83
                }
              },
              "preview": "explicit TranslateXTimeline(size_t frameCount, size_t bezierCount, int boneIndex);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
              "range": {
                "start": {
                  "line": 64,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 41
                }
              },
              "preview": "virtual void apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
            }
          ]
        },
        {
          "name": "TranslateYTimeline",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
          "range": {
            "start": {
              "line": 69,
              "character": 0
            },
            "end": {
              "line": 82,
              "character": 2
            }
          },
          "preview": "class SP_API TranslateYTimeline : public BoneTimeline1 {",
          "documentation": "Changes a bone's local Y translation.",
          "supertypes": [
            "BoneTimeline1"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
              "range": {
                "start": {
                  "line": 74,
                  "character": 0
                },
                "end": {
                  "line": 74,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
                  "range": {
                    "start": {
                      "line": 74,
                      "character": 0
                    },
                    "end": {
                      "line": 74,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
                  "range": {
                    "start": {
                      "line": 74,
                      "character": 0
                    },
                    "end": {
                      "line": 74,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "TranslateYTimeline",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 83
                }
              },
              "preview": "explicit TranslateYTimeline(size_t frameCount, size_t bezierCount, int boneIndex);"
            },
            {
              "name": "apply",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/TranslateTimeline.h",
              "range": {
                "start": {
                  "line": 80,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 41
                }
              },
              "preview": "virtual void apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Triangulator.h",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 67,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Triangulator",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Triangulator.h",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 66,
              "character": 2
            }
          },
          "preview": "class SP_API Triangulator : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "~Triangulator",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Triangulator.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 17
                }
              },
              "preview": "~Triangulator();"
            },
            {
              "name": "triangulate",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Triangulator.h",
              "range": {
                "start": {
                  "line": 40,
                  "character": 0
                },
                "end": {
                  "line": 40,
                  "character": 51
                }
              },
              "preview": "Vector<int> &triangulate(Vector<float> &vertices);"
            },
            {
              "name": "decompose",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Triangulator.h",
              "range": {
                "start": {
                  "line": 43,
                  "character": 0
                },
                "end": {
                  "line": 46,
                  "character": 3
                }
              },
              "preview": "decompose(Vector<float>"
            },
            {
              "name": "_convexPolygons",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Triangulator.h",
              "range": {
                "start": {
                  "line": 50,
                  "character": 0
                },
                "end": {
                  "line": 50,
                  "character": 17
                }
              },
              "preview": "_convexPolygons;"
            },
            {
              "name": "_convexPolygonsIndices",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Triangulator.h",
              "range": {
                "start": {
                  "line": 52,
                  "character": 0
                },
                "end": {
                  "line": 52,
                  "character": 24
                }
              },
              "preview": "_convexPolygonsIndices;"
            },
            {
              "name": "_indices",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Triangulator.h",
              "range": {
                "start": {
                  "line": 54,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 22
                }
              },
              "preview": "Vector<int> _indices;"
            },
            {
              "name": "_isConcaveArray",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Triangulator.h",
              "range": {
                "start": {
                  "line": 55,
                  "character": 0
                },
                "end": {
                  "line": 55,
                  "character": 30
                }
              },
              "preview": "Vector<bool> _isConcaveArray;"
            },
            {
              "name": "_triangles",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Triangulator.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 56,
                  "character": 24
                }
              },
              "preview": "Vector<int> _triangles;"
            },
            {
              "name": "_polygonPool",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Triangulator.h",
              "range": {
                "start": {
                  "line": 58,
                  "character": 0
                },
                "end": {
                  "line": 58,
                  "character": 35
                }
              },
              "preview": "Pool <Vector<float>> _polygonPool;"
            },
            {
              "name": "_polygonIndicesPool",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Triangulator.h",
              "range": {
                "start": {
                  "line": 59,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 40
                }
              },
              "preview": "Pool <Vector<int>> _polygonIndicesPool;"
            },
            {
              "name": "isConcave",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Triangulator.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 61,
                  "character": 98
                }
              },
              "preview": "static bool isConcave(int index, int vertexCount, Vector<float> &vertices, Vector<int> &indices);"
            },
            {
              "name": "positiveArea",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Triangulator.h",
              "range": {
                "start": {
                  "line": 63,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 92
                }
              },
              "preview": "static bool positiveArea(float p1x, float p1y, float p2x, float p2y, float p3x, float p3y);"
            },
            {
              "name": "winding",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Triangulator.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 65,
                  "character": 86
                }
              },
              "preview": "static int winding(float p1x, float p1y, float p2x, float p2y, float p3x, float p3y);"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Update.h",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 50,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Update.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "Update",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Update.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 49,
              "character": 2
            }
          },
          "preview": "class SP_API Update : public SpineObject {",
          "documentation": "The interface for items updated by Skeleton::updateWorldTransform().",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "RTTI_DECL_NOPARENT",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Update.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 20
                }
              },
              "preview": "RTTI_DECL_NOPARENT",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Update.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 20
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Update.h",
                  "range": {
                    "start": {
                      "line": 42,
                      "character": 0
                    },
                    "end": {
                      "line": 42,
                      "character": 20
                    }
                  },
                  "preview": "RTTI_DECL_NOPARENT"
                }
              ]
            },
            {
              "name": "Update",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Update.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 44,
                  "character": 10
                }
              },
              "preview": "Update();"
            },
            {
              "name": "~Update",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Update.h",
              "range": {
                "start": {
                  "line": 45,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 19
                }
              },
              "preview": "virtual ~Update();"
            },
            {
              "name": "update",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Update.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 62
                }
              },
              "preview": "virtual void update(Skeleton& skeleton, Physics physics) = 0;",
              "documentation": "@param physics Determines how physics and other non-deterministic updates are applied."
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 242,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Vector",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 241,
              "character": 2
            }
          },
          "preview": "class SP_API Vector : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "size_type",
              "kind": "class",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 41,
                  "character": 0
                },
                "end": {
                  "line": 41,
                  "character": 26
                }
              },
              "preview": "using size_type = size_t;"
            },
            {
              "name": "value_type",
              "kind": "class",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 42,
                  "character": 0
                },
                "end": {
                  "line": 42,
                  "character": 22
                }
              },
              "preview": "using value_type = T;"
            },
            {
              "name": "Vector",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 44,
                  "character": 0
                },
                "end": {
                  "line": 45,
                  "character": 3
                }
              },
              "preview": "Vector() : _size(0), _capacity(0), _buffer(NULL) {"
            },
            {
              "name": "Vector",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 47,
                  "character": 0
                },
                "end": {
                  "line": 54,
                  "character": 3
                }
              },
              "preview": "Vector(const Vector &inVector) : _size(inVector._size), _capacity(inVector._capacity), _buffer(NULL) {"
            },
            {
              "name": "~Vector",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 56,
                  "character": 0
                },
                "end": {
                  "line": 59,
                  "character": 3
                }
              },
              "preview": "~Vector() {"
            },
            {
              "name": "clear",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 61,
                  "character": 0
                },
                "end": {
                  "line": 67,
                  "character": 3
                }
              },
              "preview": "inline void clear() {"
            },
            {
              "name": "getCapacity",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 3
                }
              },
              "preview": "inline size_t getCapacity() const {"
            },
            {
              "name": "size",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 3
                }
              },
              "preview": "inline size_t size() const {"
            },
            {
              "name": "setSize",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 99,
                  "character": 3
                }
              },
              "preview": "inline void setSize(size_t newSize, const T &defaultValue) {"
            },
            {
              "name": "ensureCapacity",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 101,
                  "character": 0
                },
                "end": {
                  "line": 105,
                  "character": 3
                }
              },
              "preview": "inline void ensureCapacity(size_t newCapacity = 0) {"
            },
            {
              "name": "add",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 107,
                  "character": 0
                },
                "end": {
                  "line": 121,
                  "character": 3
                }
              },
              "preview": "inline void add(const T &inValue) {"
            },
            {
              "name": "addAll",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 123,
                  "character": 0
                },
                "end": {
                  "line": 128,
                  "character": 3
                }
              },
              "preview": "inline void addAll(const Vector<T> &inValue) {"
            },
            {
              "name": "clearAndAddAll",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 130,
                  "character": 0
                },
                "end": {
                  "line": 133,
                  "character": 3
                }
              },
              "preview": "inline void clearAndAddAll(const Vector<T> &inValue) {"
            },
            {
              "name": "removeAt",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 135,
                  "character": 0
                },
                "end": {
                  "line": 149,
                  "character": 3
                }
              },
              "preview": "inline void removeAt(size_t inIndex) {"
            },
            {
              "name": "contains",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 151,
                  "character": 0
                },
                "end": {
                  "line": 159,
                  "character": 3
                }
              },
              "preview": "inline bool contains(const T &inValue) {"
            },
            {
              "name": "indexOf",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 161,
                  "character": 0
                },
                "end": {
                  "line": 169,
                  "character": 3
                }
              },
              "preview": "inline int indexOf(const T &inValue) {"
            },
            {
              "name": "operator[]",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 171,
                  "character": 0
                },
                "end": {
                  "line": 175,
                  "character": 3
                }
              },
              "preview": "inline T &operator[](size_t inIndex) {"
            },
            {
              "name": "operator[]",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 177,
                  "character": 0
                },
                "end": {
                  "line": 181,
                  "character": 3
                }
              },
              "preview": "inline const T &operator[](size_t inIndex) const {"
            },
            {
              "name": "operator=",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 201,
                  "character": 0
                },
                "end": {
                  "line": 206,
                  "character": 3
                }
              },
              "preview": "Vector &operator=(const Vector &inVector) {"
            },
            {
              "name": "buffer",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 208,
                  "character": 0
                },
                "end": {
                  "line": 210,
                  "character": 3
                }
              },
              "preview": "inline T *buffer() {"
            },
            {
              "name": "_size",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 213,
                  "character": 0
                },
                "end": {
                  "line": 213,
                  "character": 14
                }
              },
              "preview": "size_t _size;"
            },
            {
              "name": "_capacity",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 214,
                  "character": 0
                },
                "end": {
                  "line": 214,
                  "character": 18
                }
              },
              "preview": "size_t _capacity;"
            },
            {
              "name": "_buffer",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 215,
                  "character": 0
                },
                "end": {
                  "line": 215,
                  "character": 12
                }
              },
              "preview": "T *_buffer;"
            },
            {
              "name": "allocate",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 217,
                  "character": 0
                },
                "end": {
                  "line": 225,
                  "character": 3
                }
              },
              "preview": "inline T *allocate(size_t n) {"
            },
            {
              "name": "deallocate",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 227,
                  "character": 0
                },
                "end": {
                  "line": 231,
                  "character": 3
                }
              },
              "preview": "inline void deallocate(T *buffer) {"
            },
            {
              "name": "construct",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 233,
                  "character": 0
                },
                "end": {
                  "line": 235,
                  "character": 3
                }
              },
              "preview": "inline void construct(T *buffer, const T &val) {"
            },
            {
              "name": "destroy",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vector.h",
              "range": {
                "start": {
                  "line": 237,
                  "character": 0
                },
                "end": {
                  "line": 239,
                  "character": 3
                }
              },
              "preview": "inline void destroy(T *buffer) {"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 96,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Slot",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 11
            }
          },
          "preview": "class Slot;"
        },
        {
          "name": "Skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 15
            }
          },
          "preview": "class Skeleton;"
        },
        {
          "name": "VertexAttachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 95,
              "character": 2
            }
          },
          "preview": "class SP_API VertexAttachment : public Attachment {",
          "documentation": "An attachment with vertices that are transformed by one or more bones and can be deformed by a slot's vertices.",
          "supertypes": [
            "Attachment"
          ],
          "children": [
            {
              "name": "RTTI_DECL",
              "kind": "unknown",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 48,
                  "character": 0
                },
                "end": {
                  "line": 48,
                  "character": 10
                }
              },
              "preview": "RTTI_DECL",
              "children": [
                {
                  "name": "rtti",
                  "kind": "property",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
                  "range": {
                    "start": {
                      "line": 48,
                      "character": 0
                    },
                    "end": {
                      "line": 48,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                },
                {
                  "name": "getRTTI",
                  "kind": "method",
                  "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
                  "range": {
                    "start": {
                      "line": 48,
                      "character": 0
                    },
                    "end": {
                      "line": 48,
                      "character": 10
                    }
                  },
                  "preview": "RTTI_DECL"
                }
              ]
            },
            {
              "name": "VertexAttachment",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 51,
                  "character": 0
                },
                "end": {
                  "line": 51,
                  "character": 47
                }
              },
              "preview": "explicit VertexAttachment(const String &name);"
            },
            {
              "name": "~VertexAttachment",
              "kind": "constructor",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 53,
                  "character": 0
                },
                "end": {
                  "line": 53,
                  "character": 29
                }
              },
              "preview": "virtual ~VertexAttachment();"
            },
            {
              "name": "computeWorldVertices",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 62,
                  "character": 0
                },
                "end": {
                  "line": 63,
                  "character": 28
                }
              },
              "preview": "virtual void computeWorldVertices(Skeleton &skeleton, Slot &slot, size_t start, size_t count, float *worldVertices, size_t offset,",
              "documentation": "Transforms local vertices to world coordinates.\n@param start The index of the first Vertices value to transform. Each vertex has 2 values, x and y.\n@param count The number of world vertex values to output. Must be less than or equal to WorldVerticesLength - start.\n@param worldVertices The output world vertices. Must have a length greater than or equal to offset + count.\n@param offset The worldVertices index to begin writing values.\n@param stride The number of worldVertices entries between the value pairs written."
            },
            {
              "name": "computeWorldVertices",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 65,
                  "character": 0
                },
                "end": {
                  "line": 66,
                  "character": 28
                }
              },
              "preview": "virtual void computeWorldVertices(Skeleton &skeleton, Slot &slot, size_t start, size_t count, Vector<float> &worldVertices, size_t offset,"
            },
            {
              "name": "getId",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 69,
                  "character": 0
                },
                "end": {
                  "line": 69,
                  "character": 13
                }
              },
              "preview": "int getId();",
              "documentation": "Gets a unique ID for this attachment."
            },
            {
              "name": "getBones",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 71,
                  "character": 0
                },
                "end": {
                  "line": 71,
                  "character": 25
                }
              },
              "preview": "Vector<int> &getBones();"
            },
            {
              "name": "getVertices",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 73,
                  "character": 0
                },
                "end": {
                  "line": 73,
                  "character": 30
                }
              },
              "preview": "Vector<float> &getVertices();"
            },
            {
              "name": "getWorldVerticesLength",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 75,
                  "character": 0
                },
                "end": {
                  "line": 75,
                  "character": 33
                }
              },
              "preview": "size_t getWorldVerticesLength();"
            },
            {
              "name": "setWorldVerticesLength",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 77,
                  "character": 0
                },
                "end": {
                  "line": 77,
                  "character": 45
                }
              },
              "preview": "void setWorldVerticesLength(size_t inValue);"
            },
            {
              "name": "getTimelineAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 79,
                  "character": 0
                },
                "end": {
                  "line": 79,
                  "character": 38
                }
              },
              "preview": "Attachment * getTimelineAttachment();"
            },
            {
              "name": "setTimelineAttachment",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 81,
                  "character": 0
                },
                "end": {
                  "line": 81,
                  "character": 52
                }
              },
              "preview": "void setTimelineAttachment(Attachment *attachment);"
            },
            {
              "name": "copyTo",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 83,
                  "character": 0
                },
                "end": {
                  "line": 83,
                  "character": 38
                }
              },
              "preview": "void copyTo(VertexAttachment *other);"
            },
            {
              "name": "_bones",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 86,
                  "character": 0
                },
                "end": {
                  "line": 86,
                  "character": 21
                }
              },
              "preview": "Vector <int> _bones;"
            },
            {
              "name": "_vertices",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 87,
                  "character": 0
                },
                "end": {
                  "line": 87,
                  "character": 25
                }
              },
              "preview": "Vector<float> _vertices;"
            },
            {
              "name": "_worldVerticesLength",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 88,
                  "character": 0
                },
                "end": {
                  "line": 88,
                  "character": 29
                }
              },
              "preview": "size_t _worldVerticesLength;"
            },
            {
              "name": "_timelineAttachment",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 89,
                  "character": 0
                },
                "end": {
                  "line": 89,
                  "character": 33
                }
              },
              "preview": "Attachment *_timelineAttachment;"
            },
            {
              "name": "_id",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 92,
                  "character": 0
                },
                "end": {
                  "line": 92,
                  "character": 15
                }
              },
              "preview": "const int _id;"
            },
            {
              "name": "getNextID",
              "kind": "method",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/VertexAttachment.h",
              "range": {
                "start": {
                  "line": 94,
                  "character": 0
                },
                "end": {
                  "line": 94,
                  "character": 24
                }
              },
              "preview": "static int getNextID();"
            }
          ]
        }
      ]
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vertices.h",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "Vertices",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vertices.h",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 2
            }
          },
          "preview": "class SP_API Vertices : public SpineObject {",
          "supertypes": [
            "SpineObject"
          ],
          "children": [
            {
              "name": "_bones",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vertices.h",
              "range": {
                "start": {
                  "line": 37,
                  "character": 0
                },
                "end": {
                  "line": 37,
                  "character": 21
                }
              },
              "preview": "Vector <int> _bones;"
            },
            {
              "name": "_vertices",
              "kind": "field",
              "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/include/spine/Vertices.h",
              "range": {
                "start": {
                  "line": 38,
                  "character": 0
                },
                "end": {
                  "line": 38,
                  "character": 25
                }
              },
              "preview": "Vector<float> _vertices;"
            }
          ]
        }
      ]
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Animation.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "Animation::Animation",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Animation.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 49,
          "character": 1
        }
      },
      "preview": "Animation::Animation(const String &name, Vector<Timeline *> &timelines, float duration) : _timelines(),"
    },
    {
      "name": "Animation::hasTimeline",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Animation.cpp",
      "range": {
        "start": {
          "line": 51,
          "character": 0
        },
        "end": {
          "line": 56,
          "character": 1
        }
      },
      "preview": "bool Animation::hasTimeline(Vector<PropertyId> &ids) {"
    },
    {
      "name": "Animation::~Animation",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Animation.cpp",
      "range": {
        "start": {
          "line": 58,
          "character": 0
        },
        "end": {
          "line": 60,
          "character": 1
        }
      },
      "preview": "Animation::~Animation() {"
    },
    {
      "name": "Animation::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Animation.cpp",
      "range": {
        "start": {
          "line": 62,
          "character": 0
        },
        "end": {
          "line": 74,
          "character": 1
        }
      },
      "preview": "void Animation::apply(Skeleton &skeleton, float lastTime, float time, bool loop, Vector<Event *> *pEvents, float alpha,"
    },
    {
      "name": "Animation::getName",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Animation.cpp",
      "range": {
        "start": {
          "line": 76,
          "character": 0
        },
        "end": {
          "line": 78,
          "character": 1
        }
      },
      "preview": "const String &Animation::getName() {"
    },
    {
      "name": "Animation::getBones",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Animation.cpp",
      "range": {
        "start": {
          "line": 80,
          "character": 0
        },
        "end": {
          "line": 82,
          "character": 1
        }
      },
      "preview": "const Vector<int> &Animation::getBones() {"
    },
    {
      "name": "Animation::getTimelines",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Animation.cpp",
      "range": {
        "start": {
          "line": 84,
          "character": 0
        },
        "end": {
          "line": 86,
          "character": 1
        }
      },
      "preview": "Vector<Timeline *> &Animation::getTimelines() {"
    },
    {
      "name": "Animation::getDuration",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Animation.cpp",
      "range": {
        "start": {
          "line": 88,
          "character": 0
        },
        "end": {
          "line": 90,
          "character": 1
        }
      },
      "preview": "float Animation::getDuration() {"
    },
    {
      "name": "Animation::setDuration",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Animation.cpp",
      "range": {
        "start": {
          "line": 92,
          "character": 0
        },
        "end": {
          "line": 94,
          "character": 1
        }
      },
      "preview": "void Animation::setDuration(float inValue) {"
    },
    {
      "name": "Animation::search",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Animation.cpp",
      "range": {
        "start": {
          "line": 96,
          "character": 0
        },
        "end": {
          "line": 102,
          "character": 1
        }
      },
      "preview": "int Animation::search(Vector<float> &frames, float target) {"
    },
    {
      "name": "Animation::search",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Animation.cpp",
      "range": {
        "start": {
          "line": 104,
          "character": 0
        },
        "end": {
          "line": 109,
          "character": 1
        }
      },
      "preview": "int Animation::search(Vector<float> &frames, float target, int step) {"
    },
    {
      "name": "Animation::setTimelines",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Animation.cpp",
      "range": {
        "start": {
          "line": 111,
          "character": 0
        },
        "end": {
          "line": 138,
          "character": 1
        }
      },
      "preview": "void Animation::setTimelines(Vector<Timeline *> &timelines) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 46,
          "character": 0
        },
        "end": {
          "line": 46,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "dummyOnAnimationEventFunc",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 48,
          "character": 0
        },
        "end": {
          "line": 53,
          "character": 1
        }
      },
      "preview": "void dummyOnAnimationEventFunc(AnimationState *state, spine::EventType type, TrackEntry *entry, Event *event = NULL) {"
    },
    {
      "name": "TrackEntry::TrackEntry",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 55,
          "character": 0
        },
        "end": {
          "line": 63,
          "character": 1
        }
      },
      "preview": "TrackEntry::TrackEntry() : _animation(NULL), _previous(NULL), _next(NULL), _mixingFrom(NULL), _mixingTo(0),"
    },
    {
      "name": "TrackEntry::~TrackEntry",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 65,
          "character": 0
        },
        "end": {
          "line": 65,
          "character": 28
        }
      },
      "preview": "TrackEntry::~TrackEntry() {}"
    },
    {
      "name": "TrackEntry::getTrackIndex",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 67,
          "character": 0
        },
        "end": {
          "line": 67,
          "character": 55
        }
      },
      "preview": "int TrackEntry::getTrackIndex() { return _trackIndex; }"
    },
    {
      "name": "TrackEntry::getAnimation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 69,
          "character": 0
        },
        "end": {
          "line": 69,
          "character": 60
        }
      },
      "preview": "Animation *TrackEntry::getAnimation() { return _animation; }"
    },
    {
      "name": "TrackEntry::setAnimation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 71,
          "character": 0
        },
        "end": {
          "line": 76,
          "character": 1
        }
      },
      "preview": "void TrackEntry::setAnimation(Animation *animation) {"
    },
    {
      "name": "TrackEntry::getPrevious",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 78,
          "character": 0
        },
        "end": {
          "line": 78,
          "character": 59
        }
      },
      "preview": "TrackEntry *TrackEntry::getPrevious() { return _previous; }"
    },
    {
      "name": "TrackEntry::getLoop",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 80,
          "character": 0
        },
        "end": {
          "line": 80,
          "character": 44
        }
      },
      "preview": "bool TrackEntry::getLoop() { return _loop; }"
    },
    {
      "name": "TrackEntry::setLoop",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 82,
          "character": 0
        },
        "end": {
          "line": 82,
          "character": 59
        }
      },
      "preview": "void TrackEntry::setLoop(bool inValue) { _loop = inValue; }"
    },
    {
      "name": "TrackEntry::getHoldPrevious",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 84,
          "character": 0
        },
        "end": {
          "line": 84,
          "character": 60
        }
      },
      "preview": "bool TrackEntry::getHoldPrevious() { return _holdPrevious; }"
    },
    {
      "name": "TrackEntry::setHoldPrevious",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 86,
          "character": 0
        },
        "end": {
          "line": 86,
          "character": 75
        }
      },
      "preview": "void TrackEntry::setHoldPrevious(bool inValue) { _holdPrevious = inValue; }"
    },
    {
      "name": "TrackEntry::getReverse",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 88,
          "character": 0
        },
        "end": {
          "line": 88,
          "character": 50
        }
      },
      "preview": "bool TrackEntry::getReverse() { return _reverse; }"
    },
    {
      "name": "TrackEntry::setReverse",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 90,
          "character": 0
        },
        "end": {
          "line": 90,
          "character": 65
        }
      },
      "preview": "void TrackEntry::setReverse(bool inValue) { _reverse = inValue; }"
    },
    {
      "name": "TrackEntry::getShortestRotation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 92,
          "character": 0
        },
        "end": {
          "line": 92,
          "character": 68
        }
      },
      "preview": "bool TrackEntry::getShortestRotation() { return _shortestRotation; }"
    },
    {
      "name": "TrackEntry::setShortestRotation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 94,
          "character": 0
        },
        "end": {
          "line": 94,
          "character": 83
        }
      },
      "preview": "void TrackEntry::setShortestRotation(bool inValue) { _shortestRotation = inValue; }"
    },
    {
      "name": "TrackEntry::getDelay",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 96,
          "character": 0
        },
        "end": {
          "line": 96,
          "character": 47
        }
      },
      "preview": "float TrackEntry::getDelay() { return _delay; }"
    },
    {
      "name": "TrackEntry::setDelay",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 98,
          "character": 0
        },
        "end": {
          "line": 103,
          "character": 1
        }
      },
      "preview": "void TrackEntry::setDelay(float inValue) {"
    },
    {
      "name": "TrackEntry::getTrackTime",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 105,
          "character": 0
        },
        "end": {
          "line": 105,
          "character": 55
        }
      },
      "preview": "float TrackEntry::getTrackTime() { return _trackTime; }"
    },
    {
      "name": "TrackEntry::setTrackTime",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 107,
          "character": 0
        },
        "end": {
          "line": 107,
          "character": 70
        }
      },
      "preview": "void TrackEntry::setTrackTime(float inValue) { _trackTime = inValue; }"
    },
    {
      "name": "TrackEntry::getTrackEnd",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 109,
          "character": 0
        },
        "end": {
          "line": 109,
          "character": 53
        }
      },
      "preview": "float TrackEntry::getTrackEnd() { return _trackEnd; }"
    },
    {
      "name": "TrackEntry::setTrackEnd",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 111,
          "character": 0
        },
        "end": {
          "line": 111,
          "character": 68
        }
      },
      "preview": "void TrackEntry::setTrackEnd(float inValue) { _trackEnd = inValue; }"
    },
    {
      "name": "TrackEntry::getAnimationStart",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 113,
          "character": 0
        },
        "end": {
          "line": 113,
          "character": 65
        }
      },
      "preview": "float TrackEntry::getAnimationStart() { return _animationStart; }"
    },
    {
      "name": "TrackEntry::setAnimationStart",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 115,
          "character": 0
        },
        "end": {
          "line": 115,
          "character": 80
        }
      },
      "preview": "void TrackEntry::setAnimationStart(float inValue) { _animationStart = inValue; }"
    },
    {
      "name": "TrackEntry::getAnimationEnd",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 117,
          "character": 0
        },
        "end": {
          "line": 117,
          "character": 61
        }
      },
      "preview": "float TrackEntry::getAnimationEnd() { return _animationEnd; }"
    },
    {
      "name": "TrackEntry::setAnimationEnd",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 119,
          "character": 0
        },
        "end": {
          "line": 119,
          "character": 76
        }
      },
      "preview": "void TrackEntry::setAnimationEnd(float inValue) { _animationEnd = inValue; }"
    },
    {
      "name": "TrackEntry::getAnimationLast",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 121,
          "character": 0
        },
        "end": {
          "line": 121,
          "character": 63
        }
      },
      "preview": "float TrackEntry::getAnimationLast() { return _animationLast; }"
    },
    {
      "name": "TrackEntry::setAnimationLast",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 123,
          "character": 0
        },
        "end": {
          "line": 126,
          "character": 1
        }
      },
      "preview": "void TrackEntry::setAnimationLast(float inValue) {"
    },
    {
      "name": "TrackEntry::getAnimationTime",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 128,
          "character": 0
        },
        "end": {
          "line": 136,
          "character": 1
        }
      },
      "preview": "float TrackEntry::getAnimationTime() {"
    },
    {
      "name": "TrackEntry::getTimeScale",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 138,
          "character": 0
        },
        "end": {
          "line": 138,
          "character": 55
        }
      },
      "preview": "float TrackEntry::getTimeScale() { return _timeScale; }"
    },
    {
      "name": "TrackEntry::setTimeScale",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 140,
          "character": 0
        },
        "end": {
          "line": 140,
          "character": 70
        }
      },
      "preview": "void TrackEntry::setTimeScale(float inValue) { _timeScale = inValue; }"
    },
    {
      "name": "TrackEntry::getAlpha",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 142,
          "character": 0
        },
        "end": {
          "line": 142,
          "character": 47
        }
      },
      "preview": "float TrackEntry::getAlpha() { return _alpha; }"
    },
    {
      "name": "TrackEntry::setAlpha",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 144,
          "character": 0
        },
        "end": {
          "line": 144,
          "character": 62
        }
      },
      "preview": "void TrackEntry::setAlpha(float inValue) { _alpha = inValue; }"
    },
    {
      "name": "TrackEntry::getEventThreshold",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 146,
          "character": 0
        },
        "end": {
          "line": 146,
          "character": 65
        }
      },
      "preview": "float TrackEntry::getEventThreshold() { return _eventThreshold; }"
    },
    {
      "name": "TrackEntry::setEventThreshold",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 148,
          "character": 0
        },
        "end": {
          "line": 148,
          "character": 80
        }
      },
      "preview": "void TrackEntry::setEventThreshold(float inValue) { _eventThreshold = inValue; }"
    },
    {
      "name": "TrackEntry::getMixAttachmentThreshold",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 150,
          "character": 0
        },
        "end": {
          "line": 150,
          "character": 81
        }
      },
      "preview": "float TrackEntry::getMixAttachmentThreshold() { return _mixAttachmentThreshold; }"
    },
    {
      "name": "TrackEntry::setMixAttachmentThreshold",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 152,
          "character": 0
        },
        "end": {
          "line": 152,
          "character": 96
        }
      },
      "preview": "void TrackEntry::setMixAttachmentThreshold(float inValue) { _mixAttachmentThreshold = inValue; }"
    },
    {
      "name": "TrackEntry::getAlphaAttachmentThreshold",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 154,
          "character": 0
        },
        "end": {
          "line": 154,
          "character": 85
        }
      },
      "preview": "float TrackEntry::getAlphaAttachmentThreshold() { return _alphaAttachmentThreshold; }"
    },
    {
      "name": "TrackEntry::setAlphaAttachmentThreshold",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 156,
          "character": 0
        },
        "end": {
          "line": 156,
          "character": 100
        }
      },
      "preview": "void TrackEntry::setAlphaAttachmentThreshold(float inValue) { _alphaAttachmentThreshold = inValue; }"
    },
    {
      "name": "TrackEntry::getMixDrawOrderThreshold",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 158,
          "character": 0
        },
        "end": {
          "line": 158,
          "character": 79
        }
      },
      "preview": "float TrackEntry::getMixDrawOrderThreshold() { return _mixDrawOrderThreshold; }"
    },
    {
      "name": "TrackEntry::setMixDrawOrderThreshold",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 160,
          "character": 0
        },
        "end": {
          "line": 160,
          "character": 94
        }
      },
      "preview": "void TrackEntry::setMixDrawOrderThreshold(float inValue) { _mixDrawOrderThreshold = inValue; }"
    },
    {
      "name": "TrackEntry::getNext",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 162,
          "character": 0
        },
        "end": {
          "line": 162,
          "character": 51
        }
      },
      "preview": "TrackEntry *TrackEntry::getNext() { return _next; }"
    },
    {
      "name": "TrackEntry::isComplete",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 164,
          "character": 0
        },
        "end": {
          "line": 166,
          "character": 1
        }
      },
      "preview": "bool TrackEntry::isComplete() {"
    },
    {
      "name": "TrackEntry::getMixTime",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 168,
          "character": 0
        },
        "end": {
          "line": 168,
          "character": 51
        }
      },
      "preview": "float TrackEntry::getMixTime() { return _mixTime; }"
    },
    {
      "name": "TrackEntry::setMixTime",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 170,
          "character": 0
        },
        "end": {
          "line": 170,
          "character": 66
        }
      },
      "preview": "void TrackEntry::setMixTime(float inValue) { _mixTime = inValue; }"
    },
    {
      "name": "TrackEntry::getMixDuration",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 172,
          "character": 0
        },
        "end": {
          "line": 172,
          "character": 59
        }
      },
      "preview": "float TrackEntry::getMixDuration() { return _mixDuration; }"
    },
    {
      "name": "TrackEntry::setMixDuration",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 174,
          "character": 0
        },
        "end": {
          "line": 174,
          "character": 74
        }
      },
      "preview": "void TrackEntry::setMixDuration(float inValue) { _mixDuration = inValue; }"
    },
    {
      "name": "TrackEntry::setMixDuration",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 176,
          "character": 0
        },
        "end": {
          "line": 185,
          "character": 1
        }
      },
      "preview": "void TrackEntry::setMixDuration(float mixDuration, float delay) {"
    },
    {
      "name": "TrackEntry::getMixingFrom",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 187,
          "character": 0
        },
        "end": {
          "line": 187,
          "character": 63
        }
      },
      "preview": "TrackEntry *TrackEntry::getMixingFrom() { return _mixingFrom; }"
    },
    {
      "name": "TrackEntry::getMixingTo",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 189,
          "character": 0
        },
        "end": {
          "line": 189,
          "character": 59
        }
      },
      "preview": "TrackEntry *TrackEntry::getMixingTo() { return _mixingTo; }"
    },
    {
      "name": "TrackEntry::setMixBlend",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 191,
          "character": 0
        },
        "end": {
          "line": 193,
          "character": 1
        }
      },
      "preview": "void TrackEntry::setMixBlend(MixBlend blend) {"
    },
    {
      "name": "TrackEntry::getMixBlend",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 195,
          "character": 0
        },
        "end": {
          "line": 195,
          "character": 56
        }
      },
      "preview": "MixBlend TrackEntry::getMixBlend() { return _mixBlend; }"
    },
    {
      "name": "TrackEntry::resetRotationDirections",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 197,
          "character": 0
        },
        "end": {
          "line": 199,
          "character": 1
        }
      },
      "preview": "void TrackEntry::resetRotationDirections() {"
    },
    {
      "name": "TrackEntry::setListener",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 201,
          "character": 0
        },
        "end": {
          "line": 204,
          "character": 1
        }
      },
      "preview": "void TrackEntry::setListener(AnimationStateListener inValue) {"
    },
    {
      "name": "TrackEntry::setListener",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 206,
          "character": 0
        },
        "end": {
          "line": 209,
          "character": 1
        }
      },
      "preview": "void TrackEntry::setListener(AnimationStateListenerObject *inValue) {"
    },
    {
      "name": "TrackEntry::reset",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 211,
          "character": 0
        },
        "end": {
          "line": 226,
          "character": 1
        }
      },
      "preview": "void TrackEntry::reset() {"
    },
    {
      "name": "TrackEntry::getTrackComplete",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 228,
          "character": 0
        },
        "end": {
          "line": 235,
          "character": 1
        }
      },
      "preview": "float TrackEntry::getTrackComplete() {"
    },
    {
      "name": "TrackEntry::wasApplied",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 237,
          "character": 0
        },
        "end": {
          "line": 239,
          "character": 1
        }
      },
      "preview": "bool TrackEntry::wasApplied() {"
    },
    {
      "name": "TrackEntry::isEmptyAnimation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 241,
          "character": 0
        },
        "end": {
          "line": 243,
          "character": 1
        }
      },
      "preview": "bool TrackEntry::isEmptyAnimation() {"
    },
    {
      "name": "EventQueueEntry::EventQueueEntry",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 245,
          "character": 0
        },
        "end": {
          "line": 248,
          "character": 1
        }
      },
      "preview": "EventQueueEntry::EventQueueEntry(EventType eventType, TrackEntry *trackEntry, Event *event) : _type(eventType),"
    },
    {
      "name": "EventQueue::newEventQueue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 250,
          "character": 0
        },
        "end": {
          "line": 252,
          "character": 1
        }
      },
      "preview": "EventQueue *EventQueue::newEventQueue(AnimationState &state) {"
    },
    {
      "name": "EventQueue::newEventQueueEntry",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 254,
          "character": 0
        },
        "end": {
          "line": 256,
          "character": 1
        }
      },
      "preview": "EventQueueEntry EventQueue::newEventQueueEntry(EventType eventType, TrackEntry *entry, Event *event) {"
    },
    {
      "name": "EventQueue::EventQueue",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 258,
          "character": 0
        },
        "end": {
          "line": 260,
          "character": 1
        }
      },
      "preview": "EventQueue::EventQueue(AnimationState &state) : _state(state),"
    },
    {
      "name": "EventQueue::~EventQueue",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 262,
          "character": 0
        },
        "end": {
          "line": 263,
          "character": 1
        }
      },
      "preview": "EventQueue::~EventQueue() {"
    },
    {
      "name": "EventQueue::start",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 265,
          "character": 0
        },
        "end": {
          "line": 268,
          "character": 1
        }
      },
      "preview": "void EventQueue::start(TrackEntry *entry) {"
    },
    {
      "name": "EventQueue::interrupt",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 270,
          "character": 0
        },
        "end": {
          "line": 272,
          "character": 1
        }
      },
      "preview": "void EventQueue::interrupt(TrackEntry *entry) {"
    },
    {
      "name": "EventQueue::end",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 274,
          "character": 0
        },
        "end": {
          "line": 277,
          "character": 1
        }
      },
      "preview": "void EventQueue::end(TrackEntry *entry) {"
    },
    {
      "name": "EventQueue::dispose",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 279,
          "character": 0
        },
        "end": {
          "line": 281,
          "character": 1
        }
      },
      "preview": "void EventQueue::dispose(TrackEntry *entry) {"
    },
    {
      "name": "EventQueue::complete",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 283,
          "character": 0
        },
        "end": {
          "line": 285,
          "character": 1
        }
      },
      "preview": "void EventQueue::complete(TrackEntry *entry) {"
    },
    {
      "name": "EventQueue::event",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 287,
          "character": 0
        },
        "end": {
          "line": 289,
          "character": 1
        }
      },
      "preview": "void EventQueue::event(TrackEntry *entry, Event *event) {"
    },
    {
      "name": "EventQueue::drain",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 292,
          "character": 0
        },
        "end": {
          "line": 349,
          "character": 1
        }
      },
      "preview": "void EventQueue::drain() {",
      "documentation": "Raises all events in the queue and drains the queue."
    },
    {
      "name": "AnimationState::AnimationState",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 351,
          "character": 0
        },
        "end": {
          "line": 359,
          "character": 1
        }
      },
      "preview": "AnimationState::AnimationState(AnimationStateData *data) : _data(data),"
    },
    {
      "name": "AnimationState::~AnimationState",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 361,
          "character": 0
        },
        "end": {
          "line": 381,
          "character": 1
        }
      },
      "preview": "AnimationState::~AnimationState() {"
    },
    {
      "name": "AnimationState::update",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 383,
          "character": 0
        },
        "end": {
          "line": 447,
          "character": 1
        }
      },
      "preview": "void AnimationState::update(float delta) {"
    },
    {
      "name": "AnimationState::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 449,
          "character": 0
        },
        "end": {
          "line": 541,
          "character": 1
        }
      },
      "preview": "bool AnimationState::apply(Skeleton &skeleton) {"
    },
    {
      "name": "AnimationState::clearTracks",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 543,
          "character": 0
        },
        "end": {
          "line": 551,
          "character": 1
        }
      },
      "preview": "void AnimationState::clearTracks() {"
    },
    {
      "name": "AnimationState::clearTrack",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 553,
          "character": 0
        },
        "end": {
          "line": 577,
          "character": 1
        }
      },
      "preview": "void AnimationState::clearTrack(size_t trackIndex) {"
    },
    {
      "name": "AnimationState::setAnimation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 579,
          "character": 0
        },
        "end": {
          "line": 583,
          "character": 1
        }
      },
      "preview": "TrackEntry *AnimationState::setAnimation(size_t trackIndex, const String &animationName, bool loop) {"
    },
    {
      "name": "AnimationState::setAnimation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 585,
          "character": 0
        },
        "end": {
          "line": 609,
          "character": 1
        }
      },
      "preview": "TrackEntry *AnimationState::setAnimation(size_t trackIndex, Animation *animation, bool loop) {"
    },
    {
      "name": "AnimationState::addAnimation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 611,
          "character": 0
        },
        "end": {
          "line": 615,
          "character": 1
        }
      },
      "preview": "TrackEntry *AnimationState::addAnimation(size_t trackIndex, const String &animationName, bool loop, float delay) {"
    },
    {
      "name": "AnimationState::addAnimation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 617,
          "character": 0
        },
        "end": {
          "line": 640,
          "character": 1
        }
      },
      "preview": "TrackEntry *AnimationState::addAnimation(size_t trackIndex, Animation *animation, bool loop, float delay) {"
    },
    {
      "name": "AnimationState::setEmptyAnimation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 642,
          "character": 0
        },
        "end": {
          "line": 647,
          "character": 1
        }
      },
      "preview": "TrackEntry *AnimationState::setEmptyAnimation(size_t trackIndex, float mixDuration) {"
    },
    {
      "name": "AnimationState::addEmptyAnimation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 649,
          "character": 0
        },
        "end": {
          "line": 655,
          "character": 1
        }
      },
      "preview": "TrackEntry *AnimationState::addEmptyAnimation(size_t trackIndex, float mixDuration, float delay) {"
    },
    {
      "name": "AnimationState::setEmptyAnimations",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 657,
          "character": 0
        },
        "end": {
          "line": 668,
          "character": 1
        }
      },
      "preview": "void AnimationState::setEmptyAnimations(float mixDuration) {"
    },
    {
      "name": "AnimationState::getCurrent",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 670,
          "character": 0
        },
        "end": {
          "line": 672,
          "character": 1
        }
      },
      "preview": "TrackEntry *AnimationState::getCurrent(size_t trackIndex) {"
    },
    {
      "name": "AnimationState::getData",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 674,
          "character": 0
        },
        "end": {
          "line": 676,
          "character": 1
        }
      },
      "preview": "AnimationStateData *AnimationState::getData() {"
    },
    {
      "name": "AnimationState::getTracks",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 678,
          "character": 0
        },
        "end": {
          "line": 680,
          "character": 1
        }
      },
      "preview": "Vector<TrackEntry *> &AnimationState::getTracks() {"
    },
    {
      "name": "AnimationState::getTimeScale",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 682,
          "character": 0
        },
        "end": {
          "line": 684,
          "character": 1
        }
      },
      "preview": "float AnimationState::getTimeScale() {"
    },
    {
      "name": "AnimationState::setTimeScale",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 686,
          "character": 0
        },
        "end": {
          "line": 688,
          "character": 1
        }
      },
      "preview": "void AnimationState::setTimeScale(float inValue) {"
    },
    {
      "name": "AnimationState::setListener",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 690,
          "character": 0
        },
        "end": {
          "line": 693,
          "character": 1
        }
      },
      "preview": "void AnimationState::setListener(AnimationStateListener inValue) {"
    },
    {
      "name": "AnimationState::setListener",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 695,
          "character": 0
        },
        "end": {
          "line": 698,
          "character": 1
        }
      },
      "preview": "void AnimationState::setListener(AnimationStateListenerObject *inValue) {"
    },
    {
      "name": "AnimationState::disableQueue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 700,
          "character": 0
        },
        "end": {
          "line": 702,
          "character": 1
        }
      },
      "preview": "void AnimationState::disableQueue() {"
    },
    {
      "name": "AnimationState::enableQueue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 704,
          "character": 0
        },
        "end": {
          "line": 706,
          "character": 1
        }
      },
      "preview": "void AnimationState::enableQueue() {"
    },
    {
      "name": "AnimationState::setManualTrackEntryDisposal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 708,
          "character": 0
        },
        "end": {
          "line": 710,
          "character": 1
        }
      },
      "preview": "void AnimationState::setManualTrackEntryDisposal(bool inValue) {"
    },
    {
      "name": "AnimationState::getManualTrackEntryDisposal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 712,
          "character": 0
        },
        "end": {
          "line": 714,
          "character": 1
        }
      },
      "preview": "bool AnimationState::getManualTrackEntryDisposal() {"
    },
    {
      "name": "AnimationState::disposeTrackEntry",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 716,
          "character": 0
        },
        "end": {
          "line": 719,
          "character": 1
        }
      },
      "preview": "void AnimationState::disposeTrackEntry(TrackEntry *entry) {"
    },
    {
      "name": "AnimationState::getEmptyAnimation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 721,
          "character": 0
        },
        "end": {
          "line": 725,
          "character": 1
        }
      },
      "preview": "Animation *AnimationState::getEmptyAnimation() {"
    },
    {
      "name": "AnimationState::applyAttachmentTimeline",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 727,
          "character": 0
        },
        "end": {
          "line": 743,
          "character": 1
        }
      },
      "preview": "void AnimationState::applyAttachmentTimeline(AttachmentTimeline *attachmentTimeline, Skeleton &skeleton, float time,"
    },
    {
      "name": "AnimationState::applyRotateTimeline",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 746,
          "character": 0
        },
        "end": {
          "line": 807,
          "character": 1
        }
      },
      "preview": "void AnimationState::applyRotateTimeline(RotateTimeline *rotateTimeline, Skeleton &skeleton, float time, float alpha,"
    },
    {
      "name": "AnimationState::updateMixingFrom",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 809,
          "character": 0
        },
        "end": {
          "line": 836,
          "character": 1
        }
      },
      "preview": "bool AnimationState::updateMixingFrom(TrackEntry *to, float delta) {"
    },
    {
      "name": "AnimationState::applyMixingFrom",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 838,
          "character": 0
        },
        "end": {
          "line": 936,
          "character": 1
        }
      },
      "preview": "float AnimationState::applyMixingFrom(TrackEntry *to, Skeleton &skeleton, MixBlend blend) {"
    },
    {
      "name": "AnimationState::setAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 938,
          "character": 0
        },
        "end": {
          "line": 942,
          "character": 1
        }
      },
      "preview": "void AnimationState::setAttachment(Skeleton &skeleton, Slot &slot, const String &attachmentName, bool attachments) {"
    },
    {
      "name": "AnimationState::queueEvents",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 944,
          "character": 0
        },
        "end": {
          "line": 978,
          "character": 1
        }
      },
      "preview": "void AnimationState::queueEvents(TrackEntry *entry, float animationTime) {"
    },
    {
      "name": "AnimationState::setCurrent",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 980,
          "character": 0
        },
        "end": {
          "line": 1001,
          "character": 1
        }
      },
      "preview": "void AnimationState::setCurrent(size_t index, TrackEntry *current, bool interrupt) {"
    },
    {
      "name": "AnimationState::expandToIndex",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 1003,
          "character": 0
        },
        "end": {
          "line": 1008,
          "character": 1
        }
      },
      "preview": "TrackEntry *AnimationState::expandToIndex(size_t index) {"
    },
    {
      "name": "AnimationState::newTrackEntry",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 1010,
          "character": 0
        },
        "end": {
          "line": 1047,
          "character": 1
        }
      },
      "preview": "TrackEntry *AnimationState::newTrackEntry(size_t trackIndex, Animation *animation, bool loop, TrackEntry *last) {"
    },
    {
      "name": "AnimationState::clearNext",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 1049,
          "character": 0
        },
        "end": {
          "line": 1056,
          "character": 1
        }
      },
      "preview": "void AnimationState::clearNext(TrackEntry *entry) {"
    },
    {
      "name": "AnimationState::animationsChanged",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 1058,
          "character": 0
        },
        "end": {
          "line": 1075,
          "character": 1
        }
      },
      "preview": "void AnimationState::animationsChanged() {"
    },
    {
      "name": "AnimationState::computeHold",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationState.cpp",
      "range": {
        "start": {
          "line": 1077,
          "character": 0
        },
        "end": {
          "line": 1121,
          "character": 1
        }
      },
      "preview": "void AnimationState::computeHold(TrackEntry *entry) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationStateData.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "AnimationStateData::AnimationStateData",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationStateData.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 36,
          "character": 1
        }
      },
      "preview": "AnimationStateData::AnimationStateData(SkeletonData *skeletonData) : _skeletonData(skeletonData), _defaultMix(0) {"
    },
    {
      "name": "AnimationStateData::setMix",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationStateData.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 1
        }
      },
      "preview": "void AnimationStateData::setMix(const String &fromName, const String &toName, float duration) {"
    },
    {
      "name": "AnimationStateData::setMix",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationStateData.cpp",
      "range": {
        "start": {
          "line": 45,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "void AnimationStateData::setMix(Animation *from, Animation *to, float duration) {"
    },
    {
      "name": "AnimationStateData::getMix",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationStateData.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 61,
          "character": 1
        }
      },
      "preview": "float AnimationStateData::getMix(Animation *from, Animation *to) {"
    },
    {
      "name": "AnimationStateData::getSkeletonData",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationStateData.cpp",
      "range": {
        "start": {
          "line": 63,
          "character": 0
        },
        "end": {
          "line": 65,
          "character": 1
        }
      },
      "preview": "SkeletonData *AnimationStateData::getSkeletonData() {"
    },
    {
      "name": "AnimationStateData::getDefaultMix",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationStateData.cpp",
      "range": {
        "start": {
          "line": 67,
          "character": 0
        },
        "end": {
          "line": 69,
          "character": 1
        }
      },
      "preview": "float AnimationStateData::getDefaultMix() {"
    },
    {
      "name": "AnimationStateData::setDefaultMix",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationStateData.cpp",
      "range": {
        "start": {
          "line": 71,
          "character": 0
        },
        "end": {
          "line": 73,
          "character": 1
        }
      },
      "preview": "void AnimationStateData::setDefaultMix(float inValue) {"
    },
    {
      "name": "AnimationStateData::clear",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationStateData.cpp",
      "range": {
        "start": {
          "line": 75,
          "character": 0
        },
        "end": {
          "line": 78,
          "character": 1
        }
      },
      "preview": "void AnimationStateData::clear() {"
    },
    {
      "name": "AnimationStateData::AnimationPair::AnimationPair",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationStateData.cpp",
      "range": {
        "start": {
          "line": 80,
          "character": 0
        },
        "end": {
          "line": 81,
          "character": 1
        }
      },
      "preview": "AnimationStateData::AnimationPair::AnimationPair(Animation *a1, Animation *a2) : _a1(a1), _a2(a2) {"
    },
    {
      "name": "AnimationStateData::AnimationPair::operator==",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AnimationStateData.cpp",
      "range": {
        "start": {
          "line": 83,
          "character": 0
        },
        "end": {
          "line": 85,
          "character": 1
        }
      },
      "preview": "bool AnimationStateData::AnimationPair::operator==(const AnimationPair &other) const {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 35,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "Atlas::Atlas",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 60,
          "character": 1
        }
      },
      "preview": "Atlas::Atlas(const String &path, TextureLoader *textureLoader, bool createTexture) : _textureLoader(textureLoader) {"
    },
    {
      "name": "Atlas::Atlas",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
      "range": {
        "start": {
          "line": 62,
          "character": 0
        },
        "end": {
          "line": 66,
          "character": 1
        }
      },
      "preview": "Atlas::Atlas(const char *data, int length, const char *dir, TextureLoader *textureLoader, bool createTexture)"
    },
    {
      "name": "Atlas::~Atlas",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
      "range": {
        "start": {
          "line": 68,
          "character": 0
        },
        "end": {
          "line": 76,
          "character": 1
        }
      },
      "preview": "Atlas::~Atlas() {"
    },
    {
      "name": "Atlas::flipV",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
      "range": {
        "start": {
          "line": 78,
          "character": 0
        },
        "end": {
          "line": 85,
          "character": 1
        }
      },
      "preview": "void Atlas::flipV() {"
    },
    {
      "name": "Atlas::findRegion",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
      "range": {
        "start": {
          "line": 87,
          "character": 0
        },
        "end": {
          "line": 91,
          "character": 1
        }
      },
      "preview": "AtlasRegion *Atlas::findRegion(const String &name) {"
    },
    {
      "name": "Atlas::getPages",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
      "range": {
        "start": {
          "line": 93,
          "character": 0
        },
        "end": {
          "line": 95,
          "character": 1
        }
      },
      "preview": "Vector<AtlasPage *> &Atlas::getPages() {"
    },
    {
      "name": "Atlas::getRegions",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
      "range": {
        "start": {
          "line": 97,
          "character": 0
        },
        "end": {
          "line": 99,
          "character": 1
        }
      },
      "preview": "Vector<AtlasRegion *> &Atlas::getRegions() {"
    },
    {
      "name": "SimpleString",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
      "range": {
        "start": {
          "line": 101,
          "character": 0
        },
        "end": {
          "line": 175,
          "character": 1
        }
      },
      "preview": "struct SimpleString {",
      "children": [
        {
          "name": "start",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 102,
              "character": 0
            },
            "end": {
              "line": 102,
              "character": 12
            }
          },
          "preview": "char *start;"
        },
        {
          "name": "end",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 103,
              "character": 0
            },
            "end": {
              "line": 103,
              "character": 10
            }
          },
          "preview": "char *end;"
        },
        {
          "name": "length",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 104,
              "character": 0
            },
            "end": {
              "line": 104,
              "character": 11
            }
          },
          "preview": "int length;"
        },
        {
          "name": "trim",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 106,
              "character": 0
            },
            "end": {
              "line": 119,
              "character": 2
            }
          },
          "preview": "SimpleString trim() {"
        },
        {
          "name": "indexOf",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 121,
              "character": 0
            },
            "end": {
              "line": 128,
              "character": 2
            }
          },
          "preview": "int indexOf(char needle) {"
        },
        {
          "name": "indexOf",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 130,
              "character": 0
            },
            "end": {
              "line": 137,
              "character": 2
            }
          },
          "preview": "int indexOf(char needle, int at) {"
        },
        {
          "name": "substr",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 139,
              "character": 0
            },
            "end": {
              "line": 146,
              "character": 2
            }
          },
          "preview": "SimpleString substr(int s, int e) {"
        },
        {
          "name": "substr",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 148,
              "character": 0
            },
            "end": {
              "line": 154,
              "character": 2
            }
          },
          "preview": "SimpleString substr(int s) {"
        },
        {
          "name": "equals",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 156,
              "character": 0
            },
            "end": {
              "line": 163,
              "character": 2
            }
          },
          "preview": "bool equals(const char *str) {"
        },
        {
          "name": "copy",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 165,
              "character": 0
            },
            "end": {
              "line": 170,
              "character": 2
            }
          },
          "preview": "char *copy() {"
        },
        {
          "name": "toInt",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 172,
              "character": 0
            },
            "end": {
              "line": 174,
              "character": 2
            }
          },
          "preview": "int toInt() {"
        }
      ]
    },
    {
      "name": "AtlasInput",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
      "range": {
        "start": {
          "line": 177,
          "character": 0
        },
        "end": {
          "line": 217,
          "character": 1
        }
      },
      "preview": "struct AtlasInput {",
      "children": [
        {
          "name": "start",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 178,
              "character": 0
            },
            "end": {
              "line": 178,
              "character": 18
            }
          },
          "preview": "const char *start;"
        },
        {
          "name": "end",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 179,
              "character": 0
            },
            "end": {
              "line": 179,
              "character": 16
            }
          },
          "preview": "const char *end;"
        },
        {
          "name": "index",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 180,
              "character": 0
            },
            "end": {
              "line": 180,
              "character": 12
            }
          },
          "preview": "char *index;"
        },
        {
          "name": "length",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 181,
              "character": 0
            },
            "end": {
              "line": 181,
              "character": 11
            }
          },
          "preview": "int length;"
        },
        {
          "name": "line",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 182,
              "character": 0
            },
            "end": {
              "line": 182,
              "character": 18
            }
          },
          "preview": "SimpleString line;"
        },
        {
          "name": "AtlasInput",
          "kind": "constructor",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 184,
              "character": 0
            },
            "end": {
              "line": 184,
              "character": 116
            }
          },
          "preview": "AtlasInput(const char *data, int length) : start(data), end(data + length), index((char *) data), length(length) {}"
        },
        {
          "name": "readLine",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 186,
              "character": 0
            },
            "end": {
              "line": 196,
              "character": 2
            }
          },
          "preview": "SimpleString *readLine() {"
        },
        {
          "name": "readEntry",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
          "range": {
            "start": {
              "line": 198,
              "character": 0
            },
            "end": {
              "line": 216,
              "character": 2
            }
          },
          "preview": "static int readEntry(SimpleString entry[5], SimpleString *line) {"
        }
      ]
    },
    {
      "name": "indexOf",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
      "range": {
        "start": {
          "line": 219,
          "character": 0
        },
        "end": {
          "line": 223,
          "character": 1
        }
      },
      "preview": "int indexOf(const char **array, int count, SimpleString *str) {"
    },
    {
      "name": "Atlas::load",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Atlas.cpp",
      "range": {
        "start": {
          "line": 225,
          "character": 0
        },
        "end": {
          "line": 349,
          "character": 1
        }
      },
      "preview": "void Atlas::load(const char *begin, int length, const char *dir, bool createTexture) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AtlasAttachmentLoader.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "AtlasAttachmentLoader::AtlasAttachmentLoader",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AtlasAttachmentLoader.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 1
        }
      },
      "preview": "AtlasAttachmentLoader::AtlasAttachmentLoader(Atlas *atlas) : AttachmentLoader(), _atlas(atlas) {"
    },
    {
      "name": "loadSequence",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AtlasAttachmentLoader.cpp",
      "range": {
        "start": {
          "line": 45,
          "character": 0
        },
        "end": {
          "line": 53,
          "character": 1
        }
      },
      "preview": "bool loadSequence(Atlas *atlas, const String &basePath, Sequence *sequence) {"
    },
    {
      "name": "AtlasAttachmentLoader::newRegionAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AtlasAttachmentLoader.cpp",
      "range": {
        "start": {
          "line": 55,
          "character": 0
        },
        "end": {
          "line": 66,
          "character": 1
        }
      },
      "preview": "RegionAttachment *AtlasAttachmentLoader::newRegionAttachment(Skin &skin, const String &name, const String &path, Sequence *sequence) {"
    },
    {
      "name": "AtlasAttachmentLoader::newMeshAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AtlasAttachmentLoader.cpp",
      "range": {
        "start": {
          "line": 68,
          "character": 0
        },
        "end": {
          "line": 80,
          "character": 1
        }
      },
      "preview": "MeshAttachment *AtlasAttachmentLoader::newMeshAttachment(Skin &skin, const String &name, const String &path, Sequence *sequence) {"
    },
    {
      "name": "AtlasAttachmentLoader::newBoundingBoxAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AtlasAttachmentLoader.cpp",
      "range": {
        "start": {
          "line": 82,
          "character": 0
        },
        "end": {
          "line": 85,
          "character": 1
        }
      },
      "preview": "BoundingBoxAttachment *AtlasAttachmentLoader::newBoundingBoxAttachment(Skin &skin, const String &name) {"
    },
    {
      "name": "AtlasAttachmentLoader::newPathAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AtlasAttachmentLoader.cpp",
      "range": {
        "start": {
          "line": 87,
          "character": 0
        },
        "end": {
          "line": 90,
          "character": 1
        }
      },
      "preview": "PathAttachment *AtlasAttachmentLoader::newPathAttachment(Skin &skin, const String &name) {"
    },
    {
      "name": "AtlasAttachmentLoader::newPointAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AtlasAttachmentLoader.cpp",
      "range": {
        "start": {
          "line": 92,
          "character": 0
        },
        "end": {
          "line": 95,
          "character": 1
        }
      },
      "preview": "PointAttachment *AtlasAttachmentLoader::newPointAttachment(Skin &skin, const String &name) {"
    },
    {
      "name": "AtlasAttachmentLoader::newClippingAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AtlasAttachmentLoader.cpp",
      "range": {
        "start": {
          "line": 97,
          "character": 0
        },
        "end": {
          "line": 100,
          "character": 1
        }
      },
      "preview": "ClippingAttachment *AtlasAttachmentLoader::newClippingAttachment(Skin &skin, const String &name) {"
    },
    {
      "name": "AtlasAttachmentLoader::configureAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AtlasAttachmentLoader.cpp",
      "range": {
        "start": {
          "line": 102,
          "character": 0
        },
        "end": {
          "line": 104,
          "character": 1
        }
      },
      "preview": "void AtlasAttachmentLoader::configureAttachment(Attachment *attachment) {"
    },
    {
      "name": "AtlasAttachmentLoader::findRegion",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AtlasAttachmentLoader.cpp",
      "range": {
        "start": {
          "line": 106,
          "character": 0
        },
        "end": {
          "line": 108,
          "character": 1
        }
      },
      "preview": "AtlasRegion *AtlasAttachmentLoader::findRegion(const String &name) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Attachment.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL_NOPARENT",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Attachment.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 35,
          "character": 30
        }
      },
      "preview": "RTTI_IMPL_NOPARENT(Attachment)",
      "children": [
        {
          "name": "Attachment::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Attachment.cpp",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 35,
              "character": 18
            }
          },
          "preview": "RTTI_IMPL_NOPARENT(Attachment)"
        },
        {
          "name": "Attachment::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Attachment.cpp",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 35,
              "character": 18
            }
          },
          "preview": "RTTI_IMPL_NOPARENT(Attachment)"
        }
      ]
    },
    {
      "name": "Attachment::Attachment",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Attachment.cpp",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 39,
          "character": 1
        }
      },
      "preview": "Attachment::Attachment(const String &name) : _name(name), _refCount(0) {"
    },
    {
      "name": "Attachment::~Attachment",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Attachment.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 1
        }
      },
      "preview": "Attachment::~Attachment() {"
    },
    {
      "name": "Attachment::getName",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Attachment.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 46,
          "character": 1
        }
      },
      "preview": "const String &Attachment::getName() const {"
    },
    {
      "name": "Attachment::getRefCount",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Attachment.cpp",
      "range": {
        "start": {
          "line": 48,
          "character": 0
        },
        "end": {
          "line": 50,
          "character": 1
        }
      },
      "preview": "int Attachment::getRefCount() {"
    },
    {
      "name": "Attachment::reference",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Attachment.cpp",
      "range": {
        "start": {
          "line": 52,
          "character": 0
        },
        "end": {
          "line": 54,
          "character": 1
        }
      },
      "preview": "void Attachment::reference() {"
    },
    {
      "name": "Attachment::dereference",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Attachment.cpp",
      "range": {
        "start": {
          "line": 56,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "void Attachment::dereference() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AttachmentLoader.cpp",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 39,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "AttachmentLoader::AttachmentLoader",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AttachmentLoader.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 1
        }
      },
      "preview": "AttachmentLoader::AttachmentLoader() {"
    },
    {
      "name": "AttachmentLoader::~AttachmentLoader",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AttachmentLoader.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 1
        }
      },
      "preview": "AttachmentLoader::~AttachmentLoader() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AttachmentTimeline.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL_MULTI",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AttachmentTimeline.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 59
        }
      },
      "preview": "RTTI_IMPL_MULTI(AttachmentTimeline, Timeline, SlotTimeline)",
      "children": [
        {
          "name": "AttachmentTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AttachmentTimeline.cpp",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(AttachmentTimeline, Timeline, SlotTimeline)"
        },
        {
          "name": "AttachmentTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AttachmentTimeline.cpp",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(AttachmentTimeline, Timeline, SlotTimeline)"
        }
      ]
    },
    {
      "name": "AttachmentTimeline::AttachmentTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AttachmentTimeline.cpp",
      "range": {
        "start": {
          "line": 45,
          "character": 0
        },
        "end": {
          "line": 54,
          "character": 1
        }
      },
      "preview": "AttachmentTimeline::AttachmentTimeline(size_t frameCount, int slotIndex) : Timeline(frameCount, 1),"
    },
    {
      "name": "AttachmentTimeline::~AttachmentTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AttachmentTimeline.cpp",
      "range": {
        "start": {
          "line": 56,
          "character": 0
        },
        "end": {
          "line": 56,
          "character": 44
        }
      },
      "preview": "AttachmentTimeline::~AttachmentTimeline() {}"
    },
    {
      "name": "AttachmentTimeline::setAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AttachmentTimeline.cpp",
      "range": {
        "start": {
          "line": 58,
          "character": 0
        },
        "end": {
          "line": 60,
          "character": 1
        }
      },
      "preview": "void AttachmentTimeline::setAttachment(Skeleton &skeleton, SlotPose &pose, String *attachmentName) {"
    },
    {
      "name": "AttachmentTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AttachmentTimeline.cpp",
      "range": {
        "start": {
          "line": 62,
          "character": 0
        },
        "end": {
          "line": 79,
          "character": 1
        }
      },
      "preview": "void AttachmentTimeline::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha,"
    },
    {
      "name": "AttachmentTimeline::setFrame",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AttachmentTimeline.cpp",
      "range": {
        "start": {
          "line": 81,
          "character": 0
        },
        "end": {
          "line": 84,
          "character": 1
        }
      },
      "preview": "void AttachmentTimeline::setFrame(int frame, float time, const String &attachmentName) {"
    },
    {
      "name": "AttachmentTimeline::getAttachmentNames",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/AttachmentTimeline.cpp",
      "range": {
        "start": {
          "line": 86,
          "character": 0
        },
        "end": {
          "line": 88,
          "character": 1
        }
      },
      "preview": "Vector<String> &AttachmentTimeline::getAttachmentNames() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Bone.cpp",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 34,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL_NOPARENT",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Bone.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 36,
          "character": 24
        }
      },
      "preview": "RTTI_IMPL_NOPARENT(Bone)",
      "children": [
        {
          "name": "Bone::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Bone.cpp",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 18
            }
          },
          "preview": "RTTI_IMPL_NOPARENT(Bone)"
        },
        {
          "name": "Bone::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Bone.cpp",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 18
            }
          },
          "preview": "RTTI_IMPL_NOPARENT(Bone)"
        }
      ]
    },
    {
      "name": "Bone::yDown",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Bone.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 38,
          "character": 23
        }
      },
      "preview": "bool Bone::yDown = true;"
    },
    {
      "name": "Bone::Bone",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Bone.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 47,
          "character": 1
        }
      },
      "preview": "Bone::Bone(BoneData &data, Bone *parent) : PosedGeneric<BoneData, BoneLocal, BonePose>(data),"
    },
    {
      "name": "Bone::getParent",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Bone.cpp",
      "range": {
        "start": {
          "line": 49,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "Bone *Bone::getParent() {"
    },
    {
      "name": "Bone::getChildren",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Bone.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 55,
          "character": 1
        }
      },
      "preview": "Vector<Bone *> &Bone::getChildren() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneData.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "BoneData::BoneData",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneData.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 1
        }
      },
      "preview": "BoneData::BoneData(int index, const String &name, BoneData *parent) : PosedDataGeneric<BoneLocal>(name),"
    },
    {
      "name": "BoneData::getIndex",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneData.cpp",
      "range": {
        "start": {
          "line": 45,
          "character": 0
        },
        "end": {
          "line": 47,
          "character": 1
        }
      },
      "preview": "int BoneData::getIndex() {"
    },
    {
      "name": "BoneData::getParent",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneData.cpp",
      "range": {
        "start": {
          "line": 49,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "BoneData *BoneData::getParent() {"
    },
    {
      "name": "BoneData::getLength",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneData.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 55,
          "character": 1
        }
      },
      "preview": "float BoneData::getLength() {"
    },
    {
      "name": "BoneData::setLength",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneData.cpp",
      "range": {
        "start": {
          "line": 57,
          "character": 0
        },
        "end": {
          "line": 59,
          "character": 1
        }
      },
      "preview": "void BoneData::setLength(float inValue) {"
    },
    {
      "name": "BoneData::getColor",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneData.cpp",
      "range": {
        "start": {
          "line": 61,
          "character": 0
        },
        "end": {
          "line": 63,
          "character": 1
        }
      },
      "preview": "Color &BoneData::getColor() {"
    },
    {
      "name": "BoneData::getIcon",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneData.cpp",
      "range": {
        "start": {
          "line": 65,
          "character": 0
        },
        "end": {
          "line": 67,
          "character": 1
        }
      },
      "preview": "const String &BoneData::getIcon() {"
    },
    {
      "name": "BoneData::setIcon",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneData.cpp",
      "range": {
        "start": {
          "line": 69,
          "character": 0
        },
        "end": {
          "line": 71,
          "character": 1
        }
      },
      "preview": "void BoneData::setIcon(const String &icon) {"
    },
    {
      "name": "BoneData::getVisible",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneData.cpp",
      "range": {
        "start": {
          "line": 73,
          "character": 0
        },
        "end": {
          "line": 75,
          "character": 1
        }
      },
      "preview": "bool BoneData::getVisible() {"
    },
    {
      "name": "BoneData::setVisible",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneData.cpp",
      "range": {
        "start": {
          "line": 77,
          "character": 0
        },
        "end": {
          "line": 79,
          "character": 1
        }
      },
      "preview": "void BoneData::setVisible(bool inValue) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 31,
          "character": 0
        },
        "end": {
          "line": 31,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "BoneLocal::BoneLocal",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 34,
          "character": 1
        }
      },
      "preview": "BoneLocal::BoneLocal() : _x(0), _y(0), _rotation(0), _scaleX(1), _scaleY(1), _shearX(0), _shearY(0), _inherit(Inherit_Normal) {"
    },
    {
      "name": "BoneLocal::~BoneLocal",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 37,
          "character": 1
        }
      },
      "preview": "BoneLocal::~BoneLocal() {"
    },
    {
      "name": "BoneLocal::set",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 48,
          "character": 1
        }
      },
      "preview": "void BoneLocal::set(BoneLocal &pose) {"
    },
    {
      "name": "BoneLocal::getX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 50,
          "character": 0
        },
        "end": {
          "line": 52,
          "character": 1
        }
      },
      "preview": "float BoneLocal::getX() {"
    },
    {
      "name": "BoneLocal::setX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 54,
          "character": 0
        },
        "end": {
          "line": 56,
          "character": 1
        }
      },
      "preview": "void BoneLocal::setX(float x) {"
    },
    {
      "name": "BoneLocal::getY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 58,
          "character": 0
        },
        "end": {
          "line": 60,
          "character": 1
        }
      },
      "preview": "float BoneLocal::getY() {"
    },
    {
      "name": "BoneLocal::setY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 62,
          "character": 0
        },
        "end": {
          "line": 64,
          "character": 1
        }
      },
      "preview": "void BoneLocal::setY(float y) {"
    },
    {
      "name": "BoneLocal::setPosition",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 66,
          "character": 0
        },
        "end": {
          "line": 69,
          "character": 1
        }
      },
      "preview": "void BoneLocal::setPosition(float x, float y) {"
    },
    {
      "name": "BoneLocal::getRotation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 71,
          "character": 0
        },
        "end": {
          "line": 73,
          "character": 1
        }
      },
      "preview": "float BoneLocal::getRotation() {"
    },
    {
      "name": "BoneLocal::setRotation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 75,
          "character": 0
        },
        "end": {
          "line": 77,
          "character": 1
        }
      },
      "preview": "void BoneLocal::setRotation(float rotation) {"
    },
    {
      "name": "BoneLocal::getScaleX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 79,
          "character": 0
        },
        "end": {
          "line": 81,
          "character": 1
        }
      },
      "preview": "float BoneLocal::getScaleX() {"
    },
    {
      "name": "BoneLocal::setScaleX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 83,
          "character": 0
        },
        "end": {
          "line": 85,
          "character": 1
        }
      },
      "preview": "void BoneLocal::setScaleX(float scaleX) {"
    },
    {
      "name": "BoneLocal::getScaleY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 87,
          "character": 0
        },
        "end": {
          "line": 89,
          "character": 1
        }
      },
      "preview": "float BoneLocal::getScaleY() {"
    },
    {
      "name": "BoneLocal::setScaleY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 91,
          "character": 0
        },
        "end": {
          "line": 93,
          "character": 1
        }
      },
      "preview": "void BoneLocal::setScaleY(float scaleY) {"
    },
    {
      "name": "BoneLocal::setScale",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 95,
          "character": 0
        },
        "end": {
          "line": 98,
          "character": 1
        }
      },
      "preview": "void BoneLocal::setScale(float scaleX, float scaleY) {"
    },
    {
      "name": "BoneLocal::setScale",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 100,
          "character": 0
        },
        "end": {
          "line": 103,
          "character": 1
        }
      },
      "preview": "void BoneLocal::setScale(float scale) {"
    },
    {
      "name": "BoneLocal::getShearX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 105,
          "character": 0
        },
        "end": {
          "line": 107,
          "character": 1
        }
      },
      "preview": "float BoneLocal::getShearX() {"
    },
    {
      "name": "BoneLocal::setShearX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 109,
          "character": 0
        },
        "end": {
          "line": 111,
          "character": 1
        }
      },
      "preview": "void BoneLocal::setShearX(float shearX) {"
    },
    {
      "name": "BoneLocal::getShearY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 113,
          "character": 0
        },
        "end": {
          "line": 115,
          "character": 1
        }
      },
      "preview": "float BoneLocal::getShearY() {"
    },
    {
      "name": "BoneLocal::setShearY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 117,
          "character": 0
        },
        "end": {
          "line": 119,
          "character": 1
        }
      },
      "preview": "void BoneLocal::setShearY(float shearY) {"
    },
    {
      "name": "BoneLocal::getInherit",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 121,
          "character": 0
        },
        "end": {
          "line": 123,
          "character": 1
        }
      },
      "preview": "Inherit BoneLocal::getInherit() {"
    },
    {
      "name": "BoneLocal::setInherit",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneLocal.cpp",
      "range": {
        "start": {
          "line": 125,
          "character": 0
        },
        "end": {
          "line": 127,
          "character": 1
        }
      },
      "preview": "void BoneLocal::setInherit(Inherit inherit) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 36,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "BonePose::BonePose",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 39,
          "character": 1
        }
      },
      "preview": "BonePose::BonePose() : BoneLocal(), _bone(nullptr), _a(0), _b(0), _worldX(0), _c(0), _d(0), _worldY(0), _world(0), _local(0) {"
    },
    {
      "name": "BonePose::~BonePose",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 1
        }
      },
      "preview": "BonePose::~BonePose() {"
    },
    {
      "name": "BonePose::update",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 46,
          "character": 1
        }
      },
      "preview": "void BonePose::update(Skeleton &skeleton, Physics physics) {"
    },
    {
      "name": "BonePose::updateWorldTransform",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 48,
          "character": 0
        },
        "end": {
          "line": 154,
          "character": 1
        }
      },
      "preview": "void BonePose::updateWorldTransform(Skeleton &skeleton) {"
    },
    {
      "name": "BonePose::updateLocalTransform",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 156,
          "character": 0
        },
        "end": {
          "line": 240,
          "character": 1
        }
      },
      "preview": "void BonePose::updateLocalTransform(Skeleton &skeleton) {"
    },
    {
      "name": "BonePose::validateLocalTransform",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 242,
          "character": 0
        },
        "end": {
          "line": 244,
          "character": 1
        }
      },
      "preview": "void BonePose::validateLocalTransform(Skeleton &skeleton) {"
    },
    {
      "name": "BonePose::modifyLocal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 246,
          "character": 0
        },
        "end": {
          "line": 250,
          "character": 1
        }
      },
      "preview": "void BonePose::modifyLocal(Skeleton &skeleton) {"
    },
    {
      "name": "BonePose::modifyWorld",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 252,
          "character": 0
        },
        "end": {
          "line": 256,
          "character": 1
        }
      },
      "preview": "void BonePose::modifyWorld(int update) {"
    },
    {
      "name": "BonePose::resetWorld",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 258,
          "character": 0
        },
        "end": {
          "line": 268,
          "character": 1
        }
      },
      "preview": "void BonePose::resetWorld(int update) {"
    },
    {
      "name": "BonePose::getA",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 270,
          "character": 0
        },
        "end": {
          "line": 272,
          "character": 1
        }
      },
      "preview": "float BonePose::getA() {"
    },
    {
      "name": "BonePose::setA",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 274,
          "character": 0
        },
        "end": {
          "line": 276,
          "character": 1
        }
      },
      "preview": "void BonePose::setA(float a) {"
    },
    {
      "name": "BonePose::getB",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 278,
          "character": 0
        },
        "end": {
          "line": 280,
          "character": 1
        }
      },
      "preview": "float BonePose::getB() {"
    },
    {
      "name": "BonePose::setB",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 282,
          "character": 0
        },
        "end": {
          "line": 284,
          "character": 1
        }
      },
      "preview": "void BonePose::setB(float b) {"
    },
    {
      "name": "BonePose::getC",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 286,
          "character": 0
        },
        "end": {
          "line": 288,
          "character": 1
        }
      },
      "preview": "float BonePose::getC() {"
    },
    {
      "name": "BonePose::setC",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 290,
          "character": 0
        },
        "end": {
          "line": 292,
          "character": 1
        }
      },
      "preview": "void BonePose::setC(float c) {"
    },
    {
      "name": "BonePose::getD",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 294,
          "character": 0
        },
        "end": {
          "line": 296,
          "character": 1
        }
      },
      "preview": "float BonePose::getD() {"
    },
    {
      "name": "BonePose::setD",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 298,
          "character": 0
        },
        "end": {
          "line": 300,
          "character": 1
        }
      },
      "preview": "void BonePose::setD(float d) {"
    },
    {
      "name": "BonePose::getWorldX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 302,
          "character": 0
        },
        "end": {
          "line": 304,
          "character": 1
        }
      },
      "preview": "float BonePose::getWorldX() {"
    },
    {
      "name": "BonePose::setWorldX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 306,
          "character": 0
        },
        "end": {
          "line": 308,
          "character": 1
        }
      },
      "preview": "void BonePose::setWorldX(float _worldX) {"
    },
    {
      "name": "BonePose::getWorldY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 310,
          "character": 0
        },
        "end": {
          "line": 312,
          "character": 1
        }
      },
      "preview": "float BonePose::getWorldY() {"
    },
    {
      "name": "BonePose::setWorldY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 314,
          "character": 0
        },
        "end": {
          "line": 316,
          "character": 1
        }
      },
      "preview": "void BonePose::setWorldY(float _worldY) {"
    },
    {
      "name": "BonePose::getWorldRotationX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 318,
          "character": 0
        },
        "end": {
          "line": 320,
          "character": 1
        }
      },
      "preview": "float BonePose::getWorldRotationX() {"
    },
    {
      "name": "BonePose::getWorldRotationY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 322,
          "character": 0
        },
        "end": {
          "line": 324,
          "character": 1
        }
      },
      "preview": "float BonePose::getWorldRotationY() {"
    },
    {
      "name": "BonePose::getWorldScaleX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 326,
          "character": 0
        },
        "end": {
          "line": 328,
          "character": 1
        }
      },
      "preview": "float BonePose::getWorldScaleX() {"
    },
    {
      "name": "BonePose::getWorldScaleY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 330,
          "character": 0
        },
        "end": {
          "line": 332,
          "character": 1
        }
      },
      "preview": "float BonePose::getWorldScaleY() {"
    },
    {
      "name": "BonePose::worldToLocal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 335,
          "character": 0
        },
        "end": {
          "line": 340,
          "character": 1
        }
      },
      "preview": "void BonePose::worldToLocal(float worldX, float worldY, float &outLocalX, float &outLocalY) {"
    },
    {
      "name": "BonePose::localToWorld",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 342,
          "character": 0
        },
        "end": {
          "line": 345,
          "character": 1
        }
      },
      "preview": "void BonePose::localToWorld(float localX, float localY, float &outWorldX, float &outWorldY) {"
    },
    {
      "name": "BonePose::worldToParent",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 347,
          "character": 0
        },
        "end": {
          "line": 354,
          "character": 1
        }
      },
      "preview": "void BonePose::worldToParent(float worldX, float worldY, float &outParentX, float &outParentY) {"
    },
    {
      "name": "BonePose::parentToWorld",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 356,
          "character": 0
        },
        "end": {
          "line": 363,
          "character": 1
        }
      },
      "preview": "void BonePose::parentToWorld(float parentX, float parentY, float &outWorldX, float &outWorldY) {"
    },
    {
      "name": "BonePose::worldToLocalRotation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 365,
          "character": 0
        },
        "end": {
          "line": 369,
          "character": 1
        }
      },
      "preview": "float BonePose::worldToLocalRotation(float worldRotation) {"
    },
    {
      "name": "BonePose::localToWorldRotation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 371,
          "character": 0
        },
        "end": {
          "line": 375,
          "character": 1
        }
      },
      "preview": "float BonePose::localToWorldRotation(float localRotation) {"
    },
    {
      "name": "BonePose::rotateWorld",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BonePose.cpp",
      "range": {
        "start": {
          "line": 377,
          "character": 0
        },
        "end": {
          "line": 385,
          "character": 1
        }
      },
      "preview": "void BonePose::rotateWorld(float degrees) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneTimeline.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 38,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL_NOPARENT",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneTimeline.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 32
        }
      },
      "preview": "RTTI_IMPL_NOPARENT(BoneTimeline)",
      "children": [
        {
          "name": "BoneTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneTimeline.cpp",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 40,
              "character": 18
            }
          },
          "preview": "RTTI_IMPL_NOPARENT(BoneTimeline)"
        },
        {
          "name": "BoneTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneTimeline.cpp",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 40,
              "character": 18
            }
          },
          "preview": "RTTI_IMPL_NOPARENT(BoneTimeline)"
        }
      ]
    },
    {
      "name": "RTTI_IMPL_MULTI",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneTimeline.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 60
        }
      },
      "preview": "RTTI_IMPL_MULTI(BoneTimeline1, CurveTimeline1, BoneTimeline)",
      "children": [
        {
          "name": "BoneTimeline1::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneTimeline.cpp",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(BoneTimeline1, CurveTimeline1, BoneTimeline)"
        },
        {
          "name": "BoneTimeline1::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneTimeline.cpp",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(BoneTimeline1, CurveTimeline1, BoneTimeline)"
        }
      ]
    },
    {
      "name": "BoneTimeline1::BoneTimeline1",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneTimeline.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 47,
          "character": 1
        }
      },
      "preview": "BoneTimeline1::BoneTimeline1(size_t frameCount, size_t bezierCount, int boneIndex, Property property) : CurveTimeline1(frameCount, bezierCount), BoneTimeline(boneIndex) {"
    },
    {
      "name": "BoneTimeline1::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneTimeline.cpp",
      "range": {
        "start": {
          "line": 49,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "void BoneTimeline1::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha,"
    },
    {
      "name": "RTTI_IMPL_MULTI",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneTimeline.cpp",
      "range": {
        "start": {
          "line": 60,
          "character": 0
        },
        "end": {
          "line": 60,
          "character": 60
        }
      },
      "preview": "RTTI_IMPL_MULTI(BoneTimeline2, CurveTimeline2, BoneTimeline)",
      "children": [
        {
          "name": "BoneTimeline2::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneTimeline.cpp",
          "range": {
            "start": {
              "line": 60,
              "character": 0
            },
            "end": {
              "line": 60,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(BoneTimeline2, CurveTimeline2, BoneTimeline)"
        },
        {
          "name": "BoneTimeline2::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneTimeline.cpp",
          "range": {
            "start": {
              "line": 60,
              "character": 0
            },
            "end": {
              "line": 60,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(BoneTimeline2, CurveTimeline2, BoneTimeline)"
        }
      ]
    },
    {
      "name": "BoneTimeline2::BoneTimeline2",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneTimeline.cpp",
      "range": {
        "start": {
          "line": 62,
          "character": 0
        },
        "end": {
          "line": 65,
          "character": 1
        }
      },
      "preview": "BoneTimeline2::BoneTimeline2(size_t frameCount, size_t bezierCount, int boneIndex, Property property1, Property property2) : CurveTimeline2(frameCount, bezierCount), BoneTimeline(boneIndex) {"
    },
    {
      "name": "BoneTimeline2::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoneTimeline.cpp",
      "range": {
        "start": {
          "line": 67,
          "character": 0
        },
        "end": {
          "line": 76,
          "character": 1
        }
      },
      "preview": "void BoneTimeline2::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha,"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoundingBoxAttachment.cpp",
      "range": {
        "start": {
          "line": 31,
          "character": 0
        },
        "end": {
          "line": 31,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoundingBoxAttachment.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 50
        }
      },
      "preview": "RTTI_IMPL(BoundingBoxAttachment, VertexAttachment)",
      "children": [
        {
          "name": "BoundingBoxAttachment::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoundingBoxAttachment.cpp",
          "range": {
            "start": {
              "line": 33,
              "character": 0
            },
            "end": {
              "line": 33,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(BoundingBoxAttachment, VertexAttachment)"
        },
        {
          "name": "BoundingBoxAttachment::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoundingBoxAttachment.cpp",
          "range": {
            "start": {
              "line": 33,
              "character": 0
            },
            "end": {
              "line": 33,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(BoundingBoxAttachment, VertexAttachment)"
        }
      ]
    },
    {
      "name": "BoundingBoxAttachment::BoundingBoxAttachment",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoundingBoxAttachment.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 36,
          "character": 1
        }
      },
      "preview": "BoundingBoxAttachment::BoundingBoxAttachment(const String &name) : VertexAttachment(name), _color() {"
    },
    {
      "name": "BoundingBoxAttachment::getColor",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoundingBoxAttachment.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 1
        }
      },
      "preview": "Color &BoundingBoxAttachment::getColor() {"
    },
    {
      "name": "BoundingBoxAttachment::copy",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/BoundingBoxAttachment.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 46,
          "character": 1
        }
      },
      "preview": "Attachment *BoundingBoxAttachment::copy() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ClippingAttachment.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ClippingAttachment.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 35,
          "character": 47
        }
      },
      "preview": "RTTI_IMPL(ClippingAttachment, VertexAttachment)",
      "children": [
        {
          "name": "ClippingAttachment::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ClippingAttachment.cpp",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 35,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(ClippingAttachment, VertexAttachment)"
        },
        {
          "name": "ClippingAttachment::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ClippingAttachment.cpp",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 35,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(ClippingAttachment, VertexAttachment)"
        }
      ]
    },
    {
      "name": "ClippingAttachment::ClippingAttachment",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ClippingAttachment.cpp",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 38,
          "character": 1
        }
      },
      "preview": "ClippingAttachment::ClippingAttachment(const String &name) : VertexAttachment(name), _endSlot(NULL), _color() {"
    },
    {
      "name": "ClippingAttachment::getEndSlot",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ClippingAttachment.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 1
        }
      },
      "preview": "SlotData *ClippingAttachment::getEndSlot() {"
    },
    {
      "name": "ClippingAttachment::setEndSlot",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ClippingAttachment.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 46,
          "character": 1
        }
      },
      "preview": "void ClippingAttachment::setEndSlot(SlotData *inValue) {"
    },
    {
      "name": "ClippingAttachment::getColor",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ClippingAttachment.cpp",
      "range": {
        "start": {
          "line": 48,
          "character": 0
        },
        "end": {
          "line": 50,
          "character": 1
        }
      },
      "preview": "Color &ClippingAttachment::getColor() {"
    },
    {
      "name": "ClippingAttachment::copy",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ClippingAttachment.cpp",
      "range": {
        "start": {
          "line": 52,
          "character": 0
        },
        "end": {
          "line": 57,
          "character": 1
        }
      },
      "preview": "Attachment *ClippingAttachment::copy() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 42
        }
      },
      "preview": "RTTI_IMPL(RGBATimeline, SlotCurveTimeline)",
      "children": [
        {
          "name": "RGBATimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(RGBATimeline, SlotCurveTimeline)"
        },
        {
          "name": "RGBATimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(RGBATimeline, SlotCurveTimeline)"
        }
      ]
    },
    {
      "name": "RGBATimeline::RGBATimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 49,
          "character": 1
        }
      },
      "preview": "RGBATimeline::RGBATimeline(size_t frameCount, size_t bezierCount, int slotIndex)"
    },
    {
      "name": "RGBATimeline::~RGBATimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 51,
          "character": 0
        },
        "end": {
          "line": 52,
          "character": 1
        }
      },
      "preview": "RGBATimeline::~RGBATimeline() {"
    },
    {
      "name": "RGBATimeline::setFrame",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 54,
          "character": 0
        },
        "end": {
          "line": 61,
          "character": 1
        }
      },
      "preview": "void RGBATimeline::setFrame(int frame, float time, float r, float g, float b, float a) {"
    },
    {
      "name": "RGBATimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 63,
          "character": 0
        },
        "end": {
          "line": 120,
          "character": 1
        }
      },
      "preview": "void RGBATimeline::apply(Slot &slot, SlotPose &pose, float time, float alpha, MixBlend blend) {"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 122,
          "character": 0
        },
        "end": {
          "line": 122,
          "character": 41
        }
      },
      "preview": "RTTI_IMPL(RGBTimeline, SlotCurveTimeline)",
      "children": [
        {
          "name": "RGBTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
          "range": {
            "start": {
              "line": 122,
              "character": 0
            },
            "end": {
              "line": 122,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(RGBTimeline, SlotCurveTimeline)"
        },
        {
          "name": "RGBTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
          "range": {
            "start": {
              "line": 122,
              "character": 0
            },
            "end": {
              "line": 122,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(RGBTimeline, SlotCurveTimeline)"
        }
      ]
    },
    {
      "name": "RGBTimeline::RGBTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 124,
          "character": 0
        },
        "end": {
          "line": 128,
          "character": 1
        }
      },
      "preview": "RGBTimeline::RGBTimeline(size_t frameCount, size_t bezierCount, int slotIndex)"
    },
    {
      "name": "RGBTimeline::~RGBTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 130,
          "character": 0
        },
        "end": {
          "line": 131,
          "character": 1
        }
      },
      "preview": "RGBTimeline::~RGBTimeline() {"
    },
    {
      "name": "RGBTimeline::setFrame",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 133,
          "character": 0
        },
        "end": {
          "line": 139,
          "character": 1
        }
      },
      "preview": "void RGBTimeline::setFrame(int frame, float time, float r, float g, float b) {"
    },
    {
      "name": "RGBTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 141,
          "character": 0
        },
        "end": {
          "line": 205,
          "character": 1
        }
      },
      "preview": "void RGBTimeline::apply(Slot &slot, SlotPose &pose, float time, float alpha, MixBlend blend) {"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 207,
          "character": 0
        },
        "end": {
          "line": 207,
          "character": 43
        }
      },
      "preview": "RTTI_IMPL(AlphaTimeline, SlotCurveTimeline)",
      "children": [
        {
          "name": "AlphaTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
          "range": {
            "start": {
              "line": 207,
              "character": 0
            },
            "end": {
              "line": 207,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(AlphaTimeline, SlotCurveTimeline)"
        },
        {
          "name": "AlphaTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
          "range": {
            "start": {
              "line": 207,
              "character": 0
            },
            "end": {
              "line": 207,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(AlphaTimeline, SlotCurveTimeline)"
        }
      ]
    },
    {
      "name": "AlphaTimeline::AlphaTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 209,
          "character": 0
        },
        "end": {
          "line": 213,
          "character": 1
        }
      },
      "preview": "AlphaTimeline::AlphaTimeline(size_t frameCount, size_t bezierCount, int slotIndex)"
    },
    {
      "name": "AlphaTimeline::~AlphaTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 215,
          "character": 0
        },
        "end": {
          "line": 216,
          "character": 1
        }
      },
      "preview": "AlphaTimeline::~AlphaTimeline() {"
    },
    {
      "name": "AlphaTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 218,
          "character": 0
        },
        "end": {
          "line": 249,
          "character": 1
        }
      },
      "preview": "void AlphaTimeline::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha,"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 251,
          "character": 0
        },
        "end": {
          "line": 251,
          "character": 43
        }
      },
      "preview": "RTTI_IMPL(RGBA2Timeline, SlotCurveTimeline)",
      "children": [
        {
          "name": "RGBA2Timeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
          "range": {
            "start": {
              "line": 251,
              "character": 0
            },
            "end": {
              "line": 251,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(RGBA2Timeline, SlotCurveTimeline)"
        },
        {
          "name": "RGBA2Timeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
          "range": {
            "start": {
              "line": 251,
              "character": 0
            },
            "end": {
              "line": 251,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(RGBA2Timeline, SlotCurveTimeline)"
        }
      ]
    },
    {
      "name": "RGBA2Timeline::RGBA2Timeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 253,
          "character": 0
        },
        "end": {
          "line": 259,
          "character": 1
        }
      },
      "preview": "RGBA2Timeline::RGBA2Timeline(size_t frameCount, size_t bezierCount, int slotIndex)"
    },
    {
      "name": "RGBA2Timeline::~RGBA2Timeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 261,
          "character": 0
        },
        "end": {
          "line": 262,
          "character": 1
        }
      },
      "preview": "RGBA2Timeline::~RGBA2Timeline() {"
    },
    {
      "name": "RGBA2Timeline::setFrame",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 264,
          "character": 0
        },
        "end": {
          "line": 274,
          "character": 1
        }
      },
      "preview": "void RGBA2Timeline::setFrame(int frame, float time, float r, float g, float b, float a, float r2, float g2, float b2) {"
    },
    {
      "name": "RGBA2Timeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 276,
          "character": 0
        },
        "end": {
          "line": 367,
          "character": 1
        }
      },
      "preview": "void RGBA2Timeline::apply(Slot &slot, SlotPose &pose, float time, float alpha, MixBlend blend) {"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 369,
          "character": 0
        },
        "end": {
          "line": 369,
          "character": 42
        }
      },
      "preview": "RTTI_IMPL(RGB2Timeline, SlotCurveTimeline)",
      "children": [
        {
          "name": "RGB2Timeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
          "range": {
            "start": {
              "line": 369,
              "character": 0
            },
            "end": {
              "line": 369,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(RGB2Timeline, SlotCurveTimeline)"
        },
        {
          "name": "RGB2Timeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
          "range": {
            "start": {
              "line": 369,
              "character": 0
            },
            "end": {
              "line": 369,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(RGB2Timeline, SlotCurveTimeline)"
        }
      ]
    },
    {
      "name": "RGB2Timeline::RGB2Timeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 371,
          "character": 0
        },
        "end": {
          "line": 376,
          "character": 1
        }
      },
      "preview": "RGB2Timeline::RGB2Timeline(size_t frameCount, size_t bezierCount, int slotIndex)"
    },
    {
      "name": "RGB2Timeline::~RGB2Timeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 378,
          "character": 0
        },
        "end": {
          "line": 379,
          "character": 1
        }
      },
      "preview": "RGB2Timeline::~RGB2Timeline() {"
    },
    {
      "name": "RGB2Timeline::setFrame",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 381,
          "character": 0
        },
        "end": {
          "line": 390,
          "character": 1
        }
      },
      "preview": "void RGB2Timeline::setFrame(int frame, float time, float r, float g, float b, float r2, float g2, float b2) {"
    },
    {
      "name": "RGB2Timeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ColorTimeline.cpp",
      "range": {
        "start": {
          "line": 392,
          "character": 0
        },
        "end": {
          "line": 486,
          "character": 1
        }
      },
      "preview": "void RGB2Timeline::apply(Slot &slot, SlotPose &pose, float time, float alpha, MixBlend blend) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Constraint.cpp",
      "range": {
        "start": {
          "line": 31,
          "character": 0
        },
        "end": {
          "line": 31,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "Constraint::Constraint",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Constraint.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 34,
          "character": 1
        }
      },
      "preview": "Constraint::Constraint() {"
    },
    {
      "name": "Constraint::~Constraint",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Constraint.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 37,
          "character": 1
        }
      },
      "preview": "Constraint::~Constraint() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ConstraintData.cpp",
      "range": {
        "start": {
          "line": 31,
          "character": 0
        },
        "end": {
          "line": 31,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL_NOPARENT",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ConstraintData.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 34
        }
      },
      "preview": "RTTI_IMPL_NOPARENT(ConstraintData)",
      "children": [
        {
          "name": "ConstraintData::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ConstraintData.cpp",
          "range": {
            "start": {
              "line": 33,
              "character": 0
            },
            "end": {
              "line": 33,
              "character": 18
            }
          },
          "preview": "RTTI_IMPL_NOPARENT(ConstraintData)"
        },
        {
          "name": "ConstraintData::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ConstraintData.cpp",
          "range": {
            "start": {
              "line": 33,
              "character": 0
            },
            "end": {
              "line": 33,
              "character": 18
            }
          },
          "preview": "RTTI_IMPL_NOPARENT(ConstraintData)"
        }
      ]
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 31,
          "character": 0
        },
        "end": {
          "line": 31,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL_NOPARENT",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 38
        }
      },
      "preview": "RTTI_IMPL_NOPARENT(ConstraintTimeline)",
      "children": [
        {
          "name": "ConstraintTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 33,
              "character": 0
            },
            "end": {
              "line": 33,
              "character": 18
            }
          },
          "preview": "RTTI_IMPL_NOPARENT(ConstraintTimeline)"
        },
        {
          "name": "ConstraintTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 33,
              "character": 0
            },
            "end": {
              "line": 33,
              "character": 18
            }
          },
          "preview": "RTTI_IMPL_NOPARENT(ConstraintTimeline)"
        }
      ]
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ConstraintTimeline1.cpp",
      "range": {
        "start": {
          "line": 31,
          "character": 0
        },
        "end": {
          "line": 31,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL_MULTI",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ConstraintTimeline1.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 72
        }
      },
      "preview": "RTTI_IMPL_MULTI(ConstraintTimeline1, CurveTimeline1, ConstraintTimeline)",
      "children": [
        {
          "name": "ConstraintTimeline1::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ConstraintTimeline1.cpp",
          "range": {
            "start": {
              "line": 33,
              "character": 0
            },
            "end": {
              "line": 33,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(ConstraintTimeline1, CurveTimeline1, ConstraintTimeline)"
        },
        {
          "name": "ConstraintTimeline1::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ConstraintTimeline1.cpp",
          "range": {
            "start": {
              "line": 33,
              "character": 0
            },
            "end": {
              "line": 33,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(ConstraintTimeline1, CurveTimeline1, ConstraintTimeline)"
        }
      ]
    },
    {
      "name": "ConstraintTimeline1::ConstraintTimeline1",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ConstraintTimeline1.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 39,
          "character": 1
        }
      },
      "preview": "ConstraintTimeline1::ConstraintTimeline1(size_t frameCount, size_t bezierCount, int constraintIndex, Property property)"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 35,
          "character": 34
        }
      },
      "preview": "RTTI_IMPL(CurveTimeline, Timeline)",
      "children": [
        {
          "name": "CurveTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 35,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(CurveTimeline, Timeline)"
        },
        {
          "name": "CurveTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 35,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(CurveTimeline, Timeline)"
        }
      ]
    },
    {
      "name": "CurveTimeline::CurveTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 1
        }
      },
      "preview": "CurveTimeline::CurveTimeline(size_t frameCount, size_t frameEntries, size_t bezierCount) : Timeline(frameCount,"
    },
    {
      "name": "CurveTimeline::~CurveTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 44,
          "character": 1
        }
      },
      "preview": "CurveTimeline::~CurveTimeline() {"
    },
    {
      "name": "CurveTimeline::setLinear",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 46,
          "character": 0
        },
        "end": {
          "line": 48,
          "character": 1
        }
      },
      "preview": "void CurveTimeline::setLinear(size_t frame) {"
    },
    {
      "name": "CurveTimeline::setStepped",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 50,
          "character": 0
        },
        "end": {
          "line": 52,
          "character": 1
        }
      },
      "preview": "void CurveTimeline::setStepped(size_t frame) {"
    },
    {
      "name": "CurveTimeline::setBezier",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 54,
          "character": 0
        },
        "end": {
          "line": 73,
          "character": 1
        }
      },
      "preview": "void CurveTimeline::setBezier(size_t bezier, size_t frame, float value, float time1, float value1, float cx1, float cy1,"
    },
    {
      "name": "CurveTimeline::getBezierValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 75,
          "character": 0
        },
        "end": {
          "line": 90,
          "character": 1
        }
      },
      "preview": "float CurveTimeline::getBezierValue(float time, size_t frameIndex, size_t valueOffset, size_t i) {"
    },
    {
      "name": "CurveTimeline::getCurves",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 92,
          "character": 0
        },
        "end": {
          "line": 94,
          "character": 1
        }
      },
      "preview": "Vector<float> &CurveTimeline::getCurves() {"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 96,
          "character": 0
        },
        "end": {
          "line": 96,
          "character": 40
        }
      },
      "preview": "RTTI_IMPL(CurveTimeline1, CurveTimeline)",
      "children": [
        {
          "name": "CurveTimeline1::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
          "range": {
            "start": {
              "line": 96,
              "character": 0
            },
            "end": {
              "line": 96,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(CurveTimeline1, CurveTimeline)"
        },
        {
          "name": "CurveTimeline1::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
          "range": {
            "start": {
              "line": 96,
              "character": 0
            },
            "end": {
              "line": 96,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(CurveTimeline1, CurveTimeline)"
        }
      ]
    },
    {
      "name": "CurveTimeline1::CurveTimeline1",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 98,
          "character": 0
        },
        "end": {
          "line": 101,
          "character": 1
        }
      },
      "preview": "CurveTimeline1::CurveTimeline1(size_t frameCount, size_t bezierCount) : CurveTimeline(frameCount,"
    },
    {
      "name": "CurveTimeline1::~CurveTimeline1",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 103,
          "character": 0
        },
        "end": {
          "line": 104,
          "character": 1
        }
      },
      "preview": "CurveTimeline1::~CurveTimeline1() {"
    },
    {
      "name": "CurveTimeline1::setFrame",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 106,
          "character": 0
        },
        "end": {
          "line": 110,
          "character": 1
        }
      },
      "preview": "void CurveTimeline1::setFrame(size_t frame, float time, float value) {"
    },
    {
      "name": "CurveTimeline1::getCurveValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 112,
          "character": 0
        },
        "end": {
          "line": 132,
          "character": 1
        }
      },
      "preview": "float CurveTimeline1::getCurveValue(float time) {"
    },
    {
      "name": "CurveTimeline1::getRelativeValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 134,
          "character": 0
        },
        "end": {
          "line": 156,
          "character": 1
        }
      },
      "preview": "float CurveTimeline1::getRelativeValue(float time, float alpha, MixBlend blend, float current, float setup) {"
    },
    {
      "name": "CurveTimeline1::getAbsoluteValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 158,
          "character": 0
        },
        "end": {
          "line": 180,
          "character": 1
        }
      },
      "preview": "float CurveTimeline1::getAbsoluteValue(float time, float alpha, MixBlend blend, float current, float setup) {"
    },
    {
      "name": "CurveTimeline1::getAbsoluteValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 182,
          "character": 0
        },
        "end": {
          "line": 203,
          "character": 1
        }
      },
      "preview": "float CurveTimeline1::getAbsoluteValue(float time, float alpha, MixBlend blend, float current, float setup, float value) {"
    },
    {
      "name": "CurveTimeline1::getScaleValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 205,
          "character": 0
        },
        "end": {
          "line": 248,
          "character": 1
        }
      },
      "preview": "float CurveTimeline1::getScaleValue(float time, float alpha, MixBlend blend, MixDirection direction, float current,"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 251,
          "character": 0
        },
        "end": {
          "line": 251,
          "character": 40
        }
      },
      "preview": "RTTI_IMPL(CurveTimeline2, CurveTimeline)",
      "children": [
        {
          "name": "CurveTimeline2::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
          "range": {
            "start": {
              "line": 251,
              "character": 0
            },
            "end": {
              "line": 251,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(CurveTimeline2, CurveTimeline)"
        },
        {
          "name": "CurveTimeline2::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
          "range": {
            "start": {
              "line": 251,
              "character": 0
            },
            "end": {
              "line": 251,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(CurveTimeline2, CurveTimeline)"
        }
      ]
    },
    {
      "name": "CurveTimeline2::CurveTimeline2",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 253,
          "character": 0
        },
        "end": {
          "line": 256,
          "character": 1
        }
      },
      "preview": "CurveTimeline2::CurveTimeline2(size_t frameCount, size_t bezierCount) : CurveTimeline(frameCount,"
    },
    {
      "name": "CurveTimeline2::~CurveTimeline2",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 258,
          "character": 0
        },
        "end": {
          "line": 259,
          "character": 1
        }
      },
      "preview": "CurveTimeline2::~CurveTimeline2() {"
    },
    {
      "name": "CurveTimeline2::setFrame",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/CurveTimeline.cpp",
      "range": {
        "start": {
          "line": 261,
          "character": 0
        },
        "end": {
          "line": 266,
          "character": 1
        }
      },
      "preview": "void CurveTimeline2::setFrame(size_t frame, float time, float value1, float value2) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DeformTimeline.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DeformTimeline.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 40
        }
      },
      "preview": "RTTI_IMPL(DeformTimeline, CurveTimeline)",
      "children": [
        {
          "name": "DeformTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DeformTimeline.cpp",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(DeformTimeline, CurveTimeline)"
        },
        {
          "name": "DeformTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DeformTimeline.cpp",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(DeformTimeline, CurveTimeline)"
        }
      ]
    },
    {
      "name": "DeformTimeline::DeformTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DeformTimeline.cpp",
      "range": {
        "start": {
          "line": 45,
          "character": 0
        },
        "end": {
          "line": 55,
          "character": 1
        }
      },
      "preview": "DeformTimeline::DeformTimeline(size_t frameCount, size_t bezierCount, int slotIndex, VertexAttachment *attachment)"
    },
    {
      "name": "DeformTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DeformTimeline.cpp",
      "range": {
        "start": {
          "line": 57,
          "character": 0
        },
        "end": {
          "line": 69,
          "character": 1
        }
      },
      "preview": "void DeformTimeline::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha,"
    },
    {
      "name": "DeformTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DeformTimeline.cpp",
      "range": {
        "start": {
          "line": 71,
          "character": 0
        },
        "end": {
          "line": 260,
          "character": 1
        }
      },
      "preview": "void DeformTimeline::apply(Slot &slot, SlotPose &pose, float time, float alpha, MixBlend blend) {"
    },
    {
      "name": "DeformTimeline::setBezier",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DeformTimeline.cpp",
      "range": {
        "start": {
          "line": 262,
          "character": 0
        },
        "end": {
          "line": 284,
          "character": 1
        }
      },
      "preview": "void DeformTimeline::setBezier(size_t bezier, size_t frame, float value, float time1, float value1, float cx1, float cy1,"
    },
    {
      "name": "DeformTimeline::getCurvePercent",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DeformTimeline.cpp",
      "range": {
        "start": {
          "line": 286,
          "character": 0
        },
        "end": {
          "line": 312,
          "character": 1
        }
      },
      "preview": "float DeformTimeline::getCurvePercent(float time, int frame) {"
    },
    {
      "name": "DeformTimeline::setFrame",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DeformTimeline.cpp",
      "range": {
        "start": {
          "line": 314,
          "character": 0
        },
        "end": {
          "line": 318,
          "character": 1
        }
      },
      "preview": "void DeformTimeline::setFrame(int frame, float time, Vector<float> &vertices) {"
    },
    {
      "name": "DeformTimeline::getVertices",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DeformTimeline.cpp",
      "range": {
        "start": {
          "line": 320,
          "character": 0
        },
        "end": {
          "line": 322,
          "character": 1
        }
      },
      "preview": "Vector<Vector<float>> &DeformTimeline::getVertices() {"
    },
    {
      "name": "DeformTimeline::getAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DeformTimeline.cpp",
      "range": {
        "start": {
          "line": 324,
          "character": 0
        },
        "end": {
          "line": 326,
          "character": 1
        }
      },
      "preview": "VertexAttachment *DeformTimeline::getAttachment() {"
    },
    {
      "name": "DeformTimeline::setAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DeformTimeline.cpp",
      "range": {
        "start": {
          "line": 328,
          "character": 0
        },
        "end": {
          "line": 330,
          "character": 1
        }
      },
      "preview": "void DeformTimeline::setAttachment(VertexAttachment *inValue) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DrawOrderTimeline.cpp",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 39,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DrawOrderTimeline.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 38
        }
      },
      "preview": "RTTI_IMPL(DrawOrderTimeline, Timeline)",
      "children": [
        {
          "name": "DrawOrderTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DrawOrderTimeline.cpp",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(DrawOrderTimeline, Timeline)"
        },
        {
          "name": "DrawOrderTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DrawOrderTimeline.cpp",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(DrawOrderTimeline, Timeline)"
        }
      ]
    },
    {
      "name": "DrawOrderTimeline::DrawOrderTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DrawOrderTimeline.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 52,
          "character": 1
        }
      },
      "preview": "DrawOrderTimeline::DrawOrderTimeline(size_t frameCount) : Timeline(frameCount, 1) {"
    },
    {
      "name": "DrawOrderTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DrawOrderTimeline.cpp",
      "range": {
        "start": {
          "line": 54,
          "character": 0
        },
        "end": {
          "line": 95,
          "character": 1
        }
      },
      "preview": "void DrawOrderTimeline::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha,"
    },
    {
      "name": "DrawOrderTimeline::setFrame",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DrawOrderTimeline.cpp",
      "range": {
        "start": {
          "line": 97,
          "character": 0
        },
        "end": {
          "line": 103,
          "character": 1
        }
      },
      "preview": "void DrawOrderTimeline::setFrame(size_t frame, float time, Vector<int> *drawOrder) {"
    },
    {
      "name": "DrawOrderTimeline::getFrameCount",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DrawOrderTimeline.cpp",
      "range": {
        "start": {
          "line": 105,
          "character": 0
        },
        "end": {
          "line": 107,
          "character": 1
        }
      },
      "preview": "size_t DrawOrderTimeline::getFrameCount() {"
    },
    {
      "name": "DrawOrderTimeline::getDrawOrders",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/DrawOrderTimeline.cpp",
      "range": {
        "start": {
          "line": 109,
          "character": 0
        },
        "end": {
          "line": 111,
          "character": 1
        }
      },
      "preview": "Vector<Vector<int>> &DrawOrderTimeline::getDrawOrders() {"
    },
    {
      "name": "spine::Event::Event",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Event.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 1
        }
      },
      "preview": "spine::Event::Event(float time, const spine::EventData &data) : _data(data),"
    },
    {
      "name": "spine::Event::getData",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Event.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 44,
          "character": 1
        }
      },
      "preview": "const spine::EventData &spine::Event::getData() {"
    },
    {
      "name": "spine::Event::getTime",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Event.cpp",
      "range": {
        "start": {
          "line": 46,
          "character": 0
        },
        "end": {
          "line": 48,
          "character": 1
        }
      },
      "preview": "float spine::Event::getTime() {"
    },
    {
      "name": "spine::Event::getIntValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Event.cpp",
      "range": {
        "start": {
          "line": 50,
          "character": 0
        },
        "end": {
          "line": 52,
          "character": 1
        }
      },
      "preview": "int spine::Event::getIntValue() {"
    },
    {
      "name": "spine::Event::setIntValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Event.cpp",
      "range": {
        "start": {
          "line": 54,
          "character": 0
        },
        "end": {
          "line": 56,
          "character": 1
        }
      },
      "preview": "void spine::Event::setIntValue(int inValue) {"
    },
    {
      "name": "spine::Event::getFloatValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Event.cpp",
      "range": {
        "start": {
          "line": 58,
          "character": 0
        },
        "end": {
          "line": 60,
          "character": 1
        }
      },
      "preview": "float spine::Event::getFloatValue() {"
    },
    {
      "name": "spine::Event::setFloatValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Event.cpp",
      "range": {
        "start": {
          "line": 62,
          "character": 0
        },
        "end": {
          "line": 64,
          "character": 1
        }
      },
      "preview": "void spine::Event::setFloatValue(float inValue) {"
    },
    {
      "name": "spine::Event::getStringValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Event.cpp",
      "range": {
        "start": {
          "line": 66,
          "character": 0
        },
        "end": {
          "line": 68,
          "character": 1
        }
      },
      "preview": "const spine::String &spine::Event::getStringValue() {"
    },
    {
      "name": "spine::Event::setStringValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Event.cpp",
      "range": {
        "start": {
          "line": 70,
          "character": 0
        },
        "end": {
          "line": 72,
          "character": 1
        }
      },
      "preview": "void spine::Event::setStringValue(const spine::String &inValue) {"
    },
    {
      "name": "spine::Event::getVolume",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Event.cpp",
      "range": {
        "start": {
          "line": 75,
          "character": 0
        },
        "end": {
          "line": 77,
          "character": 1
        }
      },
      "preview": "float spine::Event::getVolume() {"
    },
    {
      "name": "spine::Event::setVolume",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Event.cpp",
      "range": {
        "start": {
          "line": 79,
          "character": 0
        },
        "end": {
          "line": 81,
          "character": 1
        }
      },
      "preview": "void spine::Event::setVolume(float inValue) {"
    },
    {
      "name": "spine::Event::getBalance",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Event.cpp",
      "range": {
        "start": {
          "line": 83,
          "character": 0
        },
        "end": {
          "line": 85,
          "character": 1
        }
      },
      "preview": "float spine::Event::getBalance() {"
    },
    {
      "name": "spine::Event::setBalance",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Event.cpp",
      "range": {
        "start": {
          "line": 87,
          "character": 0
        },
        "end": {
          "line": 89,
          "character": 1
        }
      },
      "preview": "void spine::Event::setBalance(float inValue) {"
    },
    {
      "name": "spine::EventData::EventData",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventData.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 1
        }
      },
      "preview": "spine::EventData::EventData(const spine::String &name) : _name(name),"
    },
    {
      "name": "spine::EventData::getName",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventData.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 46,
          "character": 1
        }
      },
      "preview": "const spine::String &spine::EventData::getName() const {",
      "documentation": "The name of the event, which is unique within the skeleton."
    },
    {
      "name": "spine::EventData::getIntValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventData.cpp",
      "range": {
        "start": {
          "line": 48,
          "character": 0
        },
        "end": {
          "line": 50,
          "character": 1
        }
      },
      "preview": "int spine::EventData::getIntValue() const {"
    },
    {
      "name": "spine::EventData::setIntValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventData.cpp",
      "range": {
        "start": {
          "line": 52,
          "character": 0
        },
        "end": {
          "line": 54,
          "character": 1
        }
      },
      "preview": "void spine::EventData::setIntValue(int inValue) {"
    },
    {
      "name": "spine::EventData::getFloatValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventData.cpp",
      "range": {
        "start": {
          "line": 56,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "float spine::EventData::getFloatValue() const {"
    },
    {
      "name": "spine::EventData::setFloatValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventData.cpp",
      "range": {
        "start": {
          "line": 60,
          "character": 0
        },
        "end": {
          "line": 62,
          "character": 1
        }
      },
      "preview": "void spine::EventData::setFloatValue(float inValue) {"
    },
    {
      "name": "spine::EventData::getStringValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventData.cpp",
      "range": {
        "start": {
          "line": 64,
          "character": 0
        },
        "end": {
          "line": 66,
          "character": 1
        }
      },
      "preview": "const spine::String &spine::EventData::getStringValue() const {"
    },
    {
      "name": "spine::EventData::setStringValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventData.cpp",
      "range": {
        "start": {
          "line": 68,
          "character": 0
        },
        "end": {
          "line": 70,
          "character": 1
        }
      },
      "preview": "void spine::EventData::setStringValue(const spine::String &inValue) {"
    },
    {
      "name": "spine::EventData::getAudioPath",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventData.cpp",
      "range": {
        "start": {
          "line": 72,
          "character": 0
        },
        "end": {
          "line": 74,
          "character": 1
        }
      },
      "preview": "const spine::String &spine::EventData::getAudioPath() const {"
    },
    {
      "name": "spine::EventData::setAudioPath",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventData.cpp",
      "range": {
        "start": {
          "line": 76,
          "character": 0
        },
        "end": {
          "line": 78,
          "character": 1
        }
      },
      "preview": "void spine::EventData::setAudioPath(const spine::String &inValue) {"
    },
    {
      "name": "spine::EventData::getVolume",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventData.cpp",
      "range": {
        "start": {
          "line": 81,
          "character": 0
        },
        "end": {
          "line": 83,
          "character": 1
        }
      },
      "preview": "float spine::EventData::getVolume() const {"
    },
    {
      "name": "spine::EventData::setVolume",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventData.cpp",
      "range": {
        "start": {
          "line": 85,
          "character": 0
        },
        "end": {
          "line": 87,
          "character": 1
        }
      },
      "preview": "void spine::EventData::setVolume(float inValue) {"
    },
    {
      "name": "spine::EventData::getBalance",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventData.cpp",
      "range": {
        "start": {
          "line": 89,
          "character": 0
        },
        "end": {
          "line": 91,
          "character": 1
        }
      },
      "preview": "float spine::EventData::getBalance() const {"
    },
    {
      "name": "spine::EventData::setBalance",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventData.cpp",
      "range": {
        "start": {
          "line": 93,
          "character": 0
        },
        "end": {
          "line": 95,
          "character": 1
        }
      },
      "preview": "void spine::EventData::setBalance(float inValue) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventTimeline.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventTimeline.cpp",
      "range": {
        "start": {
          "line": 45,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 34
        }
      },
      "preview": "RTTI_IMPL(EventTimeline, Timeline)",
      "children": [
        {
          "name": "EventTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventTimeline.cpp",
          "range": {
            "start": {
              "line": 45,
              "character": 0
            },
            "end": {
              "line": 45,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(EventTimeline, Timeline)"
        },
        {
          "name": "EventTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventTimeline.cpp",
          "range": {
            "start": {
              "line": 45,
              "character": 0
            },
            "end": {
              "line": 45,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(EventTimeline, Timeline)"
        }
      ]
    },
    {
      "name": "EventTimeline::EventTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventTimeline.cpp",
      "range": {
        "start": {
          "line": 47,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "EventTimeline::EventTimeline(size_t frameCount) : Timeline(frameCount, 1) {"
    },
    {
      "name": "EventTimeline::~EventTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventTimeline.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 55,
          "character": 1
        }
      },
      "preview": "EventTimeline::~EventTimeline() {"
    },
    {
      "name": "EventTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventTimeline.cpp",
      "range": {
        "start": {
          "line": 57,
          "character": 0
        },
        "end": {
          "line": 91,
          "character": 1
        }
      },
      "preview": "void EventTimeline::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha,"
    },
    {
      "name": "EventTimeline::setFrame",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventTimeline.cpp",
      "range": {
        "start": {
          "line": 93,
          "character": 0
        },
        "end": {
          "line": 96,
          "character": 1
        }
      },
      "preview": "void EventTimeline::setFrame(size_t frame, Event *event) {"
    },
    {
      "name": "EventTimeline::getFrameCount",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventTimeline.cpp",
      "range": {
        "start": {
          "line": 98,
          "character": 0
        },
        "end": {
          "line": 100,
          "character": 1
        }
      },
      "preview": "size_t EventTimeline::getFrameCount() {"
    },
    {
      "name": "EventTimeline::getEvents",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/EventTimeline.cpp",
      "range": {
        "start": {
          "line": 102,
          "character": 0
        },
        "end": {
          "line": 104,
          "character": 1
        }
      },
      "preview": "Vector<Event *> &EventTimeline::getEvents() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Extension.cpp",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 34,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "SpineExtension::_instance",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Extension.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 36,
          "character": 48
        }
      },
      "preview": "SpineExtension *SpineExtension::_instance = NULL;"
    },
    {
      "name": "SpineExtension::setInstance",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Extension.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 1
        }
      },
      "preview": "void SpineExtension::setInstance(SpineExtension *inValue) {"
    },
    {
      "name": "SpineExtension::getInstance",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Extension.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 49,
          "character": 1
        }
      },
      "preview": "SpineExtension *SpineExtension::getInstance() {"
    },
    {
      "name": "SpineExtension::~SpineExtension",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Extension.cpp",
      "range": {
        "start": {
          "line": 51,
          "character": 0
        },
        "end": {
          "line": 52,
          "character": 1
        }
      },
      "preview": "SpineExtension::~SpineExtension() {"
    },
    {
      "name": "SpineExtension::SpineExtension",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Extension.cpp",
      "range": {
        "start": {
          "line": 54,
          "character": 0
        },
        "end": {
          "line": 55,
          "character": 1
        }
      },
      "preview": "SpineExtension::SpineExtension() {"
    },
    {
      "name": "DefaultSpineExtension::~DefaultSpineExtension",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Extension.cpp",
      "range": {
        "start": {
          "line": 57,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "DefaultSpineExtension::~DefaultSpineExtension() {"
    },
    {
      "name": "DefaultSpineExtension::_alloc",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Extension.cpp",
      "range": {
        "start": {
          "line": 60,
          "character": 0
        },
        "end": {
          "line": 68,
          "character": 1
        }
      },
      "preview": "void *DefaultSpineExtension::_alloc(size_t size, const char *file, int line) {"
    },
    {
      "name": "DefaultSpineExtension::_calloc",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Extension.cpp",
      "range": {
        "start": {
          "line": 70,
          "character": 0
        },
        "end": {
          "line": 82,
          "character": 1
        }
      },
      "preview": "void *DefaultSpineExtension::_calloc(size_t size, const char *file, int line) {"
    },
    {
      "name": "DefaultSpineExtension::_realloc",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Extension.cpp",
      "range": {
        "start": {
          "line": 84,
          "character": 0
        },
        "end": {
          "line": 96,
          "character": 1
        }
      },
      "preview": "void *DefaultSpineExtension::_realloc(void *ptr, size_t size, const char *file, int line) {"
    },
    {
      "name": "DefaultSpineExtension::_free",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Extension.cpp",
      "range": {
        "start": {
          "line": 98,
          "character": 0
        },
        "end": {
          "line": 103,
          "character": 1
        }
      },
      "preview": "void DefaultSpineExtension::_free(void *mem, const char *file, int line) {"
    },
    {
      "name": "DefaultSpineExtension::_readFile",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Extension.cpp",
      "range": {
        "start": {
          "line": 105,
          "character": 0
        },
        "end": {
          "line": 123,
          "character": 1
        }
      },
      "preview": "char *DefaultSpineExtension::_readFile(const String &path, int *length) {"
    },
    {
      "name": "DefaultSpineExtension::DefaultSpineExtension",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Extension.cpp",
      "range": {
        "start": {
          "line": 125,
          "character": 0
        },
        "end": {
          "line": 126,
          "character": 1
        }
      },
      "preview": "DefaultSpineExtension::DefaultSpineExtension() : SpineExtension() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraint.cpp",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 39,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraint.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 35
        }
      },
      "preview": "RTTI_IMPL(IkConstraint, Constraint)",
      "children": [
        {
          "name": "IkConstraint::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraint.cpp",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(IkConstraint, Constraint)"
        },
        {
          "name": "IkConstraint::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraint.cpp",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(IkConstraint, Constraint)"
        }
      ]
    },
    {
      "name": "IkConstraint::IkConstraint",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraint.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "IkConstraint::IkConstraint(IkConstraintData &data, Skeleton &skeleton) : ConstraintGeneric<IkConstraint, IkConstraintData, IkConstraintPose>(data),"
    },
    {
      "name": "IkConstraint::copy",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraint.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 57,
          "character": 1
        }
      },
      "preview": "IkConstraint *IkConstraint::copy(Skeleton &skeleton) {"
    },
    {
      "name": "IkConstraint::update",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraint.cpp",
      "range": {
        "start": {
          "line": 59,
          "character": 0
        },
        "end": {
          "line": 72,
          "character": 1
        }
      },
      "preview": "void IkConstraint::update(Skeleton &skeleton, Physics physics) {"
    },
    {
      "name": "IkConstraint::sort",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraint.cpp",
      "range": {
        "start": {
          "line": 74,
          "character": 0
        },
        "end": {
          "line": 83,
          "character": 1
        }
      },
      "preview": "void IkConstraint::sort(Skeleton &skeleton) {"
    },
    {
      "name": "IkConstraint::getData",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraint.cpp",
      "range": {
        "start": {
          "line": 85,
          "character": 0
        },
        "end": {
          "line": 87,
          "character": 1
        }
      },
      "preview": "IkConstraintData &IkConstraint::getData() {"
    },
    {
      "name": "IkConstraint::getBones",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraint.cpp",
      "range": {
        "start": {
          "line": 89,
          "character": 0
        },
        "end": {
          "line": 91,
          "character": 1
        }
      },
      "preview": "Vector<BonePose *> &IkConstraint::getBones() {"
    },
    {
      "name": "IkConstraint::getTarget",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraint.cpp",
      "range": {
        "start": {
          "line": 93,
          "character": 0
        },
        "end": {
          "line": 95,
          "character": 1
        }
      },
      "preview": "Bone *IkConstraint::getTarget() {"
    },
    {
      "name": "IkConstraint::setTarget",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraint.cpp",
      "range": {
        "start": {
          "line": 97,
          "character": 0
        },
        "end": {
          "line": 99,
          "character": 1
        }
      },
      "preview": "void IkConstraint::setTarget(Bone *target) {"
    },
    {
      "name": "IkConstraint::isSourceActive",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraint.cpp",
      "range": {
        "start": {
          "line": 101,
          "character": 0
        },
        "end": {
          "line": 103,
          "character": 1
        }
      },
      "preview": "bool IkConstraint::isSourceActive() {"
    },
    {
      "name": "IkConstraint::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraint.cpp",
      "range": {
        "start": {
          "line": 105,
          "character": 0
        },
        "end": {
          "line": 162,
          "character": 1
        }
      },
      "preview": "void IkConstraint::apply(Skeleton &skeleton, BonePose &bone, float targetX, float targetY, bool compress, bool stretch, bool uniform, float mix) {"
    },
    {
      "name": "IkConstraint::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraint.cpp",
      "range": {
        "start": {
          "line": 164,
          "character": 0
        },
        "end": {
          "line": 311,
          "character": 1
        }
      },
      "preview": "void IkConstraint::apply(Skeleton &skeleton, BonePose &parent, BonePose &child, float targetX, float targetY, int bendDir,"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintData.cpp",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 34,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintData.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 36,
          "character": 43
        }
      },
      "preview": "RTTI_IMPL(IkConstraintData, ConstraintData)",
      "children": [
        {
          "name": "IkConstraintData::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintData.cpp",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(IkConstraintData, ConstraintData)"
        },
        {
          "name": "IkConstraintData::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintData.cpp",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(IkConstraintData, ConstraintData)"
        }
      ]
    },
    {
      "name": "IkConstraintData::IkConstraintData",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintData.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 1
        }
      },
      "preview": "IkConstraintData::IkConstraintData(const String &name) : ConstraintDataGeneric<IkConstraint, IkConstraintPose>(name),"
    },
    {
      "name": "IkConstraintData::getBones",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintData.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 1
        }
      },
      "preview": "Vector<BoneData *> &IkConstraintData::getBones() {"
    },
    {
      "name": "IkConstraintData::getTarget",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintData.cpp",
      "range": {
        "start": {
          "line": 47,
          "character": 0
        },
        "end": {
          "line": 49,
          "character": 1
        }
      },
      "preview": "BoneData *IkConstraintData::getTarget() {"
    },
    {
      "name": "IkConstraintData::setTarget",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintData.cpp",
      "range": {
        "start": {
          "line": 51,
          "character": 0
        },
        "end": {
          "line": 53,
          "character": 1
        }
      },
      "preview": "void IkConstraintData::setTarget(BoneData *inValue) {"
    },
    {
      "name": "IkConstraintData::getUniform",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintData.cpp",
      "range": {
        "start": {
          "line": 55,
          "character": 0
        },
        "end": {
          "line": 57,
          "character": 1
        }
      },
      "preview": "bool IkConstraintData::getUniform() {"
    },
    {
      "name": "IkConstraintData::setUniform",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintData.cpp",
      "range": {
        "start": {
          "line": 59,
          "character": 0
        },
        "end": {
          "line": 61,
          "character": 1
        }
      },
      "preview": "void IkConstraintData::setUniform(bool uniform) {"
    },
    {
      "name": "IkConstraintData::create",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintData.cpp",
      "range": {
        "start": {
          "line": 63,
          "character": 0
        },
        "end": {
          "line": 65,
          "character": 1
        }
      },
      "preview": "Constraint* IkConstraintData::create(Skeleton& skeleton) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintPose.cpp",
      "range": {
        "start": {
          "line": 31,
          "character": 0
        },
        "end": {
          "line": 31,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "IkConstraintPose::IkConstraintPose",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintPose.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 34,
          "character": 1
        }
      },
      "preview": "IkConstraintPose::IkConstraintPose() : _bendDirection(0), _compress(false), _stretch(false), _mix(0), _softness(0) {"
    },
    {
      "name": "IkConstraintPose::~IkConstraintPose",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintPose.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 37,
          "character": 1
        }
      },
      "preview": "IkConstraintPose::~IkConstraintPose() {"
    },
    {
      "name": "IkConstraintPose::set",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintPose.cpp",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 1
        }
      },
      "preview": "void IkConstraintPose::set(IkConstraintPose &pose) {"
    },
    {
      "name": "IkConstraintPose::getMix",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintPose.cpp",
      "range": {
        "start": {
          "line": 47,
          "character": 0
        },
        "end": {
          "line": 49,
          "character": 1
        }
      },
      "preview": "float IkConstraintPose::getMix() {"
    },
    {
      "name": "IkConstraintPose::setMix",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintPose.cpp",
      "range": {
        "start": {
          "line": 51,
          "character": 0
        },
        "end": {
          "line": 53,
          "character": 1
        }
      },
      "preview": "void IkConstraintPose::setMix(float mix) {"
    },
    {
      "name": "IkConstraintPose::getSoftness",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintPose.cpp",
      "range": {
        "start": {
          "line": 55,
          "character": 0
        },
        "end": {
          "line": 57,
          "character": 1
        }
      },
      "preview": "float IkConstraintPose::getSoftness() {"
    },
    {
      "name": "IkConstraintPose::setSoftness",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintPose.cpp",
      "range": {
        "start": {
          "line": 59,
          "character": 0
        },
        "end": {
          "line": 61,
          "character": 1
        }
      },
      "preview": "void IkConstraintPose::setSoftness(float softness) {"
    },
    {
      "name": "IkConstraintPose::getBendDirection",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintPose.cpp",
      "range": {
        "start": {
          "line": 63,
          "character": 0
        },
        "end": {
          "line": 65,
          "character": 1
        }
      },
      "preview": "int IkConstraintPose::getBendDirection() {"
    },
    {
      "name": "IkConstraintPose::setBendDirection",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintPose.cpp",
      "range": {
        "start": {
          "line": 67,
          "character": 0
        },
        "end": {
          "line": 69,
          "character": 1
        }
      },
      "preview": "void IkConstraintPose::setBendDirection(int bendDirection) {"
    },
    {
      "name": "IkConstraintPose::getCompress",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintPose.cpp",
      "range": {
        "start": {
          "line": 71,
          "character": 0
        },
        "end": {
          "line": 73,
          "character": 1
        }
      },
      "preview": "bool IkConstraintPose::getCompress() {"
    },
    {
      "name": "IkConstraintPose::setCompress",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintPose.cpp",
      "range": {
        "start": {
          "line": 75,
          "character": 0
        },
        "end": {
          "line": 77,
          "character": 1
        }
      },
      "preview": "void IkConstraintPose::setCompress(bool compress) {"
    },
    {
      "name": "IkConstraintPose::getStretch",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintPose.cpp",
      "range": {
        "start": {
          "line": 79,
          "character": 0
        },
        "end": {
          "line": 81,
          "character": 1
        }
      },
      "preview": "bool IkConstraintPose::getStretch() {"
    },
    {
      "name": "IkConstraintPose::setStretch",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintPose.cpp",
      "range": {
        "start": {
          "line": 83,
          "character": 0
        },
        "end": {
          "line": 85,
          "character": 1
        }
      },
      "preview": "void IkConstraintPose::setStretch(bool stretch) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL_MULTI",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 44,
          "character": 72
        }
      },
      "preview": "RTTI_IMPL_MULTI(IkConstraintTimeline, CurveTimeline, ConstraintTimeline)",
      "children": [
        {
          "name": "IkConstraintTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 44,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(IkConstraintTimeline, CurveTimeline, ConstraintTimeline)"
        },
        {
          "name": "IkConstraintTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 44,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(IkConstraintTimeline, CurveTimeline, ConstraintTimeline)"
        }
      ]
    },
    {
      "name": "IkConstraintTimeline::IkConstraintTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 46,
          "character": 0
        },
        "end": {
          "line": 50,
          "character": 1
        }
      },
      "preview": "IkConstraintTimeline::IkConstraintTimeline(size_t frameCount, size_t bezierCount, int ikConstraintIndex)"
    },
    {
      "name": "IkConstraintTimeline::~IkConstraintTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 52,
          "character": 0
        },
        "end": {
          "line": 53,
          "character": 1
        }
      },
      "preview": "IkConstraintTimeline::~IkConstraintTimeline() {"
    },
    {
      "name": "IkConstraintTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 55,
          "character": 0
        },
        "end": {
          "line": 140,
          "character": 1
        }
      },
      "preview": "void IkConstraintTimeline::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha,"
    },
    {
      "name": "IkConstraintTimeline::setFrame",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/IkConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 142,
          "character": 0
        },
        "end": {
          "line": 151,
          "character": 1
        }
      },
      "preview": "void IkConstraintTimeline::setFrame(int frame, float time, float mix, float softness, int bendDirection, bool compress,"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/InheritTimeline.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL_MULTI",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/InheritTimeline.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 56
        }
      },
      "preview": "RTTI_IMPL_MULTI(InheritTimeline, Timeline, BoneTimeline)",
      "children": [
        {
          "name": "InheritTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/InheritTimeline.cpp",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(InheritTimeline, Timeline, BoneTimeline)"
        },
        {
          "name": "InheritTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/InheritTimeline.cpp",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(InheritTimeline, Timeline, BoneTimeline)"
        }
      ]
    },
    {
      "name": "InheritTimeline::InheritTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/InheritTimeline.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 48,
          "character": 1
        }
      },
      "preview": "InheritTimeline::InheritTimeline(size_t frameCount, int boneIndex) : Timeline(frameCount, ENTRIES),"
    },
    {
      "name": "InheritTimeline::~InheritTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/InheritTimeline.cpp",
      "range": {
        "start": {
          "line": 50,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "InheritTimeline::~InheritTimeline() {"
    },
    {
      "name": "InheritTimeline::setFrame",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/InheritTimeline.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 57,
          "character": 1
        }
      },
      "preview": "void InheritTimeline::setFrame(int frame, float time, Inherit inherit) {"
    },
    {
      "name": "InheritTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/InheritTimeline.cpp",
      "range": {
        "start": {
          "line": 60,
          "character": 0
        },
        "end": {
          "line": 81,
          "character": 1
        }
      },
      "preview": "void InheritTimeline::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha,"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "Json::JSON_FALSE",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 45,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 30
        }
      },
      "preview": "const int Json::JSON_FALSE = 0;"
    },
    {
      "name": "Json::JSON_TRUE",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 46,
          "character": 0
        },
        "end": {
          "line": 46,
          "character": 29
        }
      },
      "preview": "const int Json::JSON_TRUE = 1;"
    },
    {
      "name": "Json::JSON_NULL",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 47,
          "character": 0
        },
        "end": {
          "line": 47,
          "character": 29
        }
      },
      "preview": "const int Json::JSON_NULL = 2;"
    },
    {
      "name": "Json::JSON_NUMBER",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 48,
          "character": 0
        },
        "end": {
          "line": 48,
          "character": 31
        }
      },
      "preview": "const int Json::JSON_NUMBER = 3;"
    },
    {
      "name": "Json::JSON_STRING",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 49,
          "character": 0
        },
        "end": {
          "line": 49,
          "character": 31
        }
      },
      "preview": "const int Json::JSON_STRING = 4;"
    },
    {
      "name": "Json::JSON_ARRAY",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 50,
          "character": 0
        },
        "end": {
          "line": 50,
          "character": 30
        }
      },
      "preview": "const int Json::JSON_ARRAY = 5;"
    },
    {
      "name": "Json::JSON_OBJECT",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 51,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 31
        }
      },
      "preview": "const int Json::JSON_OBJECT = 6;"
    },
    {
      "name": "Json::_error",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 53,
          "character": 31
        }
      },
      "preview": "const char *Json::_error = NULL;"
    },
    {
      "name": "Json::getItem",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 55,
          "character": 0
        },
        "end": {
          "line": 61,
          "character": 1
        }
      },
      "preview": "Json *Json::getItem(Json *object, const char *string) {"
    },
    {
      "name": "Json::getItem",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 63,
          "character": 0
        },
        "end": {
          "line": 70,
          "character": 1
        }
      },
      "preview": "Json *Json::getItem(Json *object, int childIndex) {"
    },
    {
      "name": "Json::getString",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 72,
          "character": 0
        },
        "end": {
          "line": 79,
          "character": 1
        }
      },
      "preview": "const char *Json::getString(Json *object, const char *name, const char *defaultValue) {"
    },
    {
      "name": "Json::getFloat",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 81,
          "character": 0
        },
        "end": {
          "line": 84,
          "character": 1
        }
      },
      "preview": "float Json::getFloat(Json *value, const char *name, float defaultValue) {"
    },
    {
      "name": "Json::getInt",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 86,
          "character": 0
        },
        "end": {
          "line": 89,
          "character": 1
        }
      },
      "preview": "int Json::getInt(Json *value, const char *name, int defaultValue) {"
    },
    {
      "name": "Json::getBoolean",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 91,
          "character": 0
        },
        "end": {
          "line": 103,
          "character": 1
        }
      },
      "preview": "bool Json::getBoolean(spine::Json *value, const char *name, bool defaultValue) {"
    },
    {
      "name": "Json::getError",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 105,
          "character": 0
        },
        "end": {
          "line": 107,
          "character": 1
        }
      },
      "preview": "const char *Json::getError() {"
    },
    {
      "name": "Json::Json",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 109,
          "character": 0
        },
        "end": {
          "line": 125,
          "character": 1
        }
      },
      "preview": "Json::Json(const char *value) : _next(NULL),"
    },
    {
      "name": "Json::~Json",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 127,
          "character": 0
        },
        "end": {
          "line": 145,
          "character": 1
        }
      },
      "preview": "Json::~Json() {"
    },
    {
      "name": "Json::skip",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 147,
          "character": 0
        },
        "end": {
          "line": 158,
          "character": 1
        }
      },
      "preview": "const char *Json::skip(const char *inValue) {"
    },
    {
      "name": "Json::parseValue",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 160,
          "character": 0
        },
        "end": {
          "line": 218,
          "character": 1
        }
      },
      "preview": "const char *Json::parseValue(Json *item, const char *value) {"
    },
    {
      "name": "firstByteMark",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 220,
          "character": 0
        },
        "end": {
          "line": 220,
          "character": 88
        }
      },
      "preview": "static const unsigned char firstByteMark[7] = {0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC};"
    },
    {
      "name": "Json::parseString",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 222,
          "character": 0
        },
        "end": {
          "line": 337,
          "character": 1
        }
      },
      "preview": "const char *Json::parseString(Json *item, const char *str) {"
    },
    {
      "name": "Json::parseNumber",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 339,
          "character": 0
        },
        "end": {
          "line": 406,
          "character": 1
        }
      },
      "preview": "const char *Json::parseNumber(Json *item, const char *num) {"
    },
    {
      "name": "Json::parseArray",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 408,
          "character": 0
        },
        "end": {
          "line": 461,
          "character": 1
        }
      },
      "preview": "const char *Json::parseArray(Json *item, const char *value) {"
    },
    {
      "name": "Json::parseObject",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 464,
          "character": 0
        },
        "end": {
          "line": 537,
          "character": 1
        }
      },
      "preview": "const char *Json::parseObject(Json *item, const char *value) {"
    },
    {
      "name": "Json::json_strcasecmp",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Json.cpp",
      "range": {
        "start": {
          "line": 539,
          "character": 0
        },
        "end": {
          "line": 558,
          "character": 1
        }
      },
      "preview": "int Json::json_strcasecmp(const char *s1, const char *s2) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/LinkedMesh.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "LinkedMesh::LinkedMesh",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/LinkedMesh.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 1
        }
      },
      "preview": "LinkedMesh::LinkedMesh(MeshAttachment *mesh, const int skinIndex, size_t slotIndex, const String &parent,"
    },
    {
      "name": "LinkedMesh::LinkedMesh",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/LinkedMesh.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "LinkedMesh::LinkedMesh(MeshAttachment *mesh, const String &skin, size_t slotIndex, const String &parent,"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Log.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "spine::spDebug_printSkeletonData",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Log.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 1
        }
      },
      "preview": "void spine::spDebug_printSkeletonData(SkeletonData *skeletonData) {"
    },
    {
      "name": "_spDebug_printTimelineBase",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Log.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "void _spDebug_printTimelineBase(Timeline *timeline) {"
    },
    {
      "name": "_spDebug_printCurveTimeline",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Log.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "void _spDebug_printCurveTimeline(CurveTimeline *timeline) {"
    },
    {
      "name": "spine::spDebug_printTimeline",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Log.cpp",
      "range": {
        "start": {
          "line": 60,
          "character": 0
        },
        "end": {
          "line": 65,
          "character": 1
        }
      },
      "preview": "void spine::spDebug_printTimeline(Timeline *timeline) {"
    },
    {
      "name": "spine::spDebug_printAnimation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Log.cpp",
      "range": {
        "start": {
          "line": 67,
          "character": 0
        },
        "end": {
          "line": 75,
          "character": 1
        }
      },
      "preview": "void spine::spDebug_printAnimation(Animation *animation) {"
    },
    {
      "name": "spine::spDebug_printBoneDatas",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Log.cpp",
      "range": {
        "start": {
          "line": 77,
          "character": 0
        },
        "end": {
          "line": 82,
          "character": 1
        }
      },
      "preview": "void spine::spDebug_printBoneDatas(Vector<BoneData *> &boneDatas) {"
    },
    {
      "name": "spine::spDebug_printBoneData",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Log.cpp",
      "range": {
        "start": {
          "line": 84,
          "character": 0
        },
        "end": {
          "line": 89,
          "character": 1
        }
      },
      "preview": "void spine::spDebug_printBoneData(BoneData *boneData) {"
    },
    {
      "name": "spine::spDebug_printSkeleton",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Log.cpp",
      "range": {
        "start": {
          "line": 91,
          "character": 0
        },
        "end": {
          "line": 93,
          "character": 1
        }
      },
      "preview": "void spine::spDebug_printSkeleton(Skeleton *skeleton) {"
    },
    {
      "name": "spine::spDebug_printBones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Log.cpp",
      "range": {
        "start": {
          "line": 95,
          "character": 0
        },
        "end": {
          "line": 100,
          "character": 1
        }
      },
      "preview": "void spine::spDebug_printBones(Vector<Bone *> &bones) {"
    },
    {
      "name": "spine::spDebug_printBone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Log.cpp",
      "range": {
        "start": {
          "line": 102,
          "character": 0
        },
        "end": {
          "line": 106,
          "character": 1
        }
      },
      "preview": "void spine::spDebug_printBone(Bone *bone) {"
    },
    {
      "name": "spine::spDebug_printFloats",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Log.cpp",
      "range": {
        "start": {
          "line": 108,
          "character": 0
        },
        "end": {
          "line": 115,
          "character": 1
        }
      },
      "preview": "void spine::spDebug_printFloats(float *values, int numFloats) {"
    },
    {
      "name": "spine::spDebug_printFloats",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Log.cpp",
      "range": {
        "start": {
          "line": 117,
          "character": 0
        },
        "end": {
          "line": 124,
          "character": 1
        }
      },
      "preview": "void spine::spDebug_printFloats(Vector<float> &values) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 39,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "MathUtil::Pi",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 49
        }
      },
      "preview": "const float MathUtil::Pi = 3.1415926535897932385f;"
    },
    {
      "name": "MathUtil::Pi_2",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 55
        }
      },
      "preview": "const float MathUtil::Pi_2 = 3.1415926535897932385f * 2;"
    },
    {
      "name": "MathUtil::InvPi_2",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 50
        }
      },
      "preview": "const float MathUtil::InvPi_2 = 1 / MathUtil::Pi_2;"
    },
    {
      "name": "MathUtil::Deg_Rad",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 44,
          "character": 65
        }
      },
      "preview": "const float MathUtil::Deg_Rad = (3.1415926535897932385f / 180.0f);"
    },
    {
      "name": "MathUtil::Rad_Deg",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 45,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 65
        }
      },
      "preview": "const float MathUtil::Rad_Deg = (180.0f / 3.1415926535897932385f);"
    },
    {
      "name": "MathUtil::abs",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 47,
          "character": 0
        },
        "end": {
          "line": 49,
          "character": 1
        }
      },
      "preview": "float MathUtil::abs(float v) {"
    },
    {
      "name": "MathUtil::sign",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 51,
          "character": 0
        },
        "end": {
          "line": 54,
          "character": 1
        }
      },
      "preview": "float MathUtil::sign(float v) {"
    },
    {
      "name": "MathUtil::clamp",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 56,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "float MathUtil::clamp(float x, float min, float max) {"
    },
    {
      "name": "MathUtil::fmod",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 60,
          "character": 0
        },
        "end": {
          "line": 62,
          "character": 1
        }
      },
      "preview": "float MathUtil::fmod(float a, float b) {"
    },
    {
      "name": "MathUtil::atan2",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 66,
          "character": 0
        },
        "end": {
          "line": 68,
          "character": 1
        }
      },
      "preview": "float MathUtil::atan2(float y, float x) {",
      "documentation": "Returns atan2 in radians, faster but less accurate than Math.Atan2. Average error of 0.00231 radians (0.1323\ndegrees), largest error of 0.00488 radians (0.2796 degrees)."
    },
    {
      "name": "MathUtil::atan2Deg",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 70,
          "character": 0
        },
        "end": {
          "line": 72,
          "character": 1
        }
      },
      "preview": "float MathUtil::atan2Deg(float y, float x) {"
    },
    {
      "name": "MathUtil::cos",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 75,
          "character": 0
        },
        "end": {
          "line": 77,
          "character": 1
        }
      },
      "preview": "float MathUtil::cos(float radians) {",
      "documentation": "Returns the cosine in radians from a lookup table."
    },
    {
      "name": "MathUtil::sin",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 80,
          "character": 0
        },
        "end": {
          "line": 82,
          "character": 1
        }
      },
      "preview": "float MathUtil::sin(float radians) {",
      "documentation": "Returns the sine in radians from a lookup table."
    },
    {
      "name": "MathUtil::sqrt",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 84,
          "character": 0
        },
        "end": {
          "line": 86,
          "character": 1
        }
      },
      "preview": "float MathUtil::sqrt(float v) {"
    },
    {
      "name": "MathUtil::acos",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 88,
          "character": 0
        },
        "end": {
          "line": 90,
          "character": 1
        }
      },
      "preview": "float MathUtil::acos(float v) {"
    },
    {
      "name": "MathUtil::sinDeg",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 93,
          "character": 0
        },
        "end": {
          "line": 95,
          "character": 1
        }
      },
      "preview": "float MathUtil::sinDeg(float degrees) {",
      "documentation": "Returns the sine in radians from a lookup table."
    },
    {
      "name": "MathUtil::cosDeg",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 98,
          "character": 0
        },
        "end": {
          "line": 100,
          "character": 1
        }
      },
      "preview": "float MathUtil::cosDeg(float degrees) {",
      "documentation": "Returns the cosine in radians from a lookup table."
    },
    {
      "name": "MathUtil::isNan",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 102,
          "character": 0
        },
        "end": {
          "line": 104,
          "character": 1
        }
      },
      "preview": "bool MathUtil::isNan(float v) {"
    },
    {
      "name": "MathUtil::quietNan",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 106,
          "character": 0
        },
        "end": {
          "line": 108,
          "character": 1
        }
      },
      "preview": "float MathUtil::quietNan() {"
    },
    {
      "name": "MathUtil::random",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 110,
          "character": 0
        },
        "end": {
          "line": 112,
          "character": 1
        }
      },
      "preview": "float MathUtil::random() {"
    },
    {
      "name": "MathUtil::randomTriangular",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 114,
          "character": 0
        },
        "end": {
          "line": 116,
          "character": 1
        }
      },
      "preview": "float MathUtil::randomTriangular(float min, float max) {"
    },
    {
      "name": "MathUtil::randomTriangular",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 118,
          "character": 0
        },
        "end": {
          "line": 123,
          "character": 1
        }
      },
      "preview": "float MathUtil::randomTriangular(float min, float max, float mode) {"
    },
    {
      "name": "MathUtil::pow",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 125,
          "character": 0
        },
        "end": {
          "line": 127,
          "character": 1
        }
      },
      "preview": "float MathUtil::pow(float a, float b) {"
    },
    {
      "name": "MathUtil::ceil",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MathUtil.cpp",
      "range": {
        "start": {
          "line": 129,
          "character": 0
        },
        "end": {
          "line": 131,
          "character": 1
        }
      },
      "preview": "float MathUtil::ceil(float v) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 32,
          "character": 0
        },
        "end": {
          "line": 32,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 34,
          "character": 43
        }
      },
      "preview": "RTTI_IMPL(MeshAttachment, VertexAttachment)",
      "children": [
        {
          "name": "MeshAttachment::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
          "range": {
            "start": {
              "line": 34,
              "character": 0
            },
            "end": {
              "line": 34,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(MeshAttachment, VertexAttachment)"
        },
        {
          "name": "MeshAttachment::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
          "range": {
            "start": {
              "line": 34,
              "character": 0
            },
            "end": {
              "line": 34,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(MeshAttachment, VertexAttachment)"
        }
      ]
    },
    {
      "name": "MeshAttachment::MeshAttachment",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 44,
          "character": 32
        }
      },
      "preview": "MeshAttachment::MeshAttachment(const String &name) : VertexAttachment(name),"
    },
    {
      "name": "MeshAttachment::~MeshAttachment",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 46,
          "character": 0
        },
        "end": {
          "line": 48,
          "character": 1
        }
      },
      "preview": "MeshAttachment::~MeshAttachment() {"
    },
    {
      "name": "MeshAttachment::updateRegion",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 50,
          "character": 0
        },
        "end": {
          "line": 115,
          "character": 1
        }
      },
      "preview": "void MeshAttachment::updateRegion() {"
    },
    {
      "name": "MeshAttachment::getHullLength",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 117,
          "character": 0
        },
        "end": {
          "line": 119,
          "character": 1
        }
      },
      "preview": "int MeshAttachment::getHullLength() {"
    },
    {
      "name": "MeshAttachment::setHullLength",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 121,
          "character": 0
        },
        "end": {
          "line": 123,
          "character": 1
        }
      },
      "preview": "void MeshAttachment::setHullLength(int inValue) {"
    },
    {
      "name": "MeshAttachment::getRegionUVs",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 125,
          "character": 0
        },
        "end": {
          "line": 127,
          "character": 1
        }
      },
      "preview": "Vector<float> &MeshAttachment::getRegionUVs() {"
    },
    {
      "name": "MeshAttachment::getUVs",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 129,
          "character": 0
        },
        "end": {
          "line": 131,
          "character": 1
        }
      },
      "preview": "Vector<float> &MeshAttachment::getUVs() {"
    },
    {
      "name": "MeshAttachment::getTriangles",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 133,
          "character": 0
        },
        "end": {
          "line": 135,
          "character": 1
        }
      },
      "preview": "Vector<unsigned short> &MeshAttachment::getTriangles() {"
    },
    {
      "name": "MeshAttachment::getPath",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 137,
          "character": 0
        },
        "end": {
          "line": 139,
          "character": 1
        }
      },
      "preview": "const String &MeshAttachment::getPath() {"
    },
    {
      "name": "MeshAttachment::setPath",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 141,
          "character": 0
        },
        "end": {
          "line": 143,
          "character": 1
        }
      },
      "preview": "void MeshAttachment::setPath(const String &inValue) {"
    },
    {
      "name": "MeshAttachment::getRegion",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 145,
          "character": 0
        },
        "end": {
          "line": 147,
          "character": 1
        }
      },
      "preview": "TextureRegion *MeshAttachment::getRegion() {"
    },
    {
      "name": "MeshAttachment::setRegion",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 149,
          "character": 0
        },
        "end": {
          "line": 151,
          "character": 1
        }
      },
      "preview": "void MeshAttachment::setRegion(TextureRegion *region) {"
    },
    {
      "name": "MeshAttachment::getSequence",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 153,
          "character": 0
        },
        "end": {
          "line": 155,
          "character": 1
        }
      },
      "preview": "Sequence *MeshAttachment::getSequence() {"
    },
    {
      "name": "MeshAttachment::setSequence",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 157,
          "character": 0
        },
        "end": {
          "line": 159,
          "character": 1
        }
      },
      "preview": "void MeshAttachment::setSequence(Sequence *sequence) {"
    },
    {
      "name": "MeshAttachment::getParentMesh",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 161,
          "character": 0
        },
        "end": {
          "line": 163,
          "character": 1
        }
      },
      "preview": "MeshAttachment *MeshAttachment::getParentMesh() {"
    },
    {
      "name": "MeshAttachment::setParentMesh",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 165,
          "character": 0
        },
        "end": {
          "line": 178,
          "character": 1
        }
      },
      "preview": "void MeshAttachment::setParentMesh(MeshAttachment *inValue) {"
    },
    {
      "name": "MeshAttachment::getEdges",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 180,
          "character": 0
        },
        "end": {
          "line": 182,
          "character": 1
        }
      },
      "preview": "Vector<unsigned short> &MeshAttachment::getEdges() {"
    },
    {
      "name": "MeshAttachment::getWidth",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 184,
          "character": 0
        },
        "end": {
          "line": 186,
          "character": 1
        }
      },
      "preview": "float MeshAttachment::getWidth() {"
    },
    {
      "name": "MeshAttachment::setWidth",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 188,
          "character": 0
        },
        "end": {
          "line": 190,
          "character": 1
        }
      },
      "preview": "void MeshAttachment::setWidth(float inValue) {"
    },
    {
      "name": "MeshAttachment::getHeight",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 192,
          "character": 0
        },
        "end": {
          "line": 194,
          "character": 1
        }
      },
      "preview": "float MeshAttachment::getHeight() {"
    },
    {
      "name": "MeshAttachment::setHeight",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 196,
          "character": 0
        },
        "end": {
          "line": 198,
          "character": 1
        }
      },
      "preview": "void MeshAttachment::setHeight(float inValue) {"
    },
    {
      "name": "MeshAttachment::getColor",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 200,
          "character": 0
        },
        "end": {
          "line": 202,
          "character": 1
        }
      },
      "preview": "spine::Color &MeshAttachment::getColor() {"
    },
    {
      "name": "MeshAttachment::copy",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 204,
          "character": 0
        },
        "end": {
          "line": 224,
          "character": 1
        }
      },
      "preview": "Attachment *MeshAttachment::copy() {"
    },
    {
      "name": "MeshAttachment::newLinkedMesh",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 226,
          "character": 0
        },
        "end": {
          "line": 235,
          "character": 1
        }
      },
      "preview": "MeshAttachment *MeshAttachment::newLinkedMesh() {"
    },
    {
      "name": "MeshAttachment::computeWorldVertices",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/MeshAttachment.cpp",
      "range": {
        "start": {
          "line": 237,
          "character": 0
        },
        "end": {
          "line": 241,
          "character": 1
        }
      },
      "preview": "void MeshAttachment::computeWorldVertices(Skeleton &skeleton, Slot &slot, size_t start, size_t count, float *worldVertices, size_t offset,"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathAttachment.cpp",
      "range": {
        "start": {
          "line": 31,
          "character": 0
        },
        "end": {
          "line": 31,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathAttachment.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 43
        }
      },
      "preview": "RTTI_IMPL(PathAttachment, VertexAttachment)",
      "children": [
        {
          "name": "PathAttachment::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathAttachment.cpp",
          "range": {
            "start": {
              "line": 33,
              "character": 0
            },
            "end": {
              "line": 33,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PathAttachment, VertexAttachment)"
        },
        {
          "name": "PathAttachment::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathAttachment.cpp",
          "range": {
            "start": {
              "line": 33,
              "character": 0
            },
            "end": {
              "line": 33,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PathAttachment, VertexAttachment)"
        }
      ]
    },
    {
      "name": "PathAttachment::PathAttachment",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathAttachment.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 37,
          "character": 1
        }
      },
      "preview": "PathAttachment::PathAttachment(const String &name) : VertexAttachment(name), _closed(false), _constantSpeed(false),"
    },
    {
      "name": "PathAttachment::getLengths",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathAttachment.cpp",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 1
        }
      },
      "preview": "Vector<float> &PathAttachment::getLengths() {"
    },
    {
      "name": "PathAttachment::isClosed",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathAttachment.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 1
        }
      },
      "preview": "bool PathAttachment::isClosed() {"
    },
    {
      "name": "PathAttachment::setClosed",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathAttachment.cpp",
      "range": {
        "start": {
          "line": 47,
          "character": 0
        },
        "end": {
          "line": 49,
          "character": 1
        }
      },
      "preview": "void PathAttachment::setClosed(bool inValue) {"
    },
    {
      "name": "PathAttachment::isConstantSpeed",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathAttachment.cpp",
      "range": {
        "start": {
          "line": 51,
          "character": 0
        },
        "end": {
          "line": 53,
          "character": 1
        }
      },
      "preview": "bool PathAttachment::isConstantSpeed() {"
    },
    {
      "name": "PathAttachment::setConstantSpeed",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathAttachment.cpp",
      "range": {
        "start": {
          "line": 55,
          "character": 0
        },
        "end": {
          "line": 57,
          "character": 1
        }
      },
      "preview": "void PathAttachment::setConstantSpeed(bool inValue) {"
    },
    {
      "name": "PathAttachment::getColor",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathAttachment.cpp",
      "range": {
        "start": {
          "line": 59,
          "character": 0
        },
        "end": {
          "line": 61,
          "character": 1
        }
      },
      "preview": "Color &PathAttachment::getColor() {"
    },
    {
      "name": "PathAttachment::copy",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathAttachment.cpp",
      "range": {
        "start": {
          "line": 63,
          "character": 0
        },
        "end": {
          "line": 70,
          "character": 1
        }
      },
      "preview": "Attachment *PathAttachment::copy() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 44,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 46,
          "character": 0
        },
        "end": {
          "line": 46,
          "character": 37
        }
      },
      "preview": "RTTI_IMPL(PathConstraint, Constraint)",
      "children": [
        {
          "name": "PathConstraint::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
          "range": {
            "start": {
              "line": 46,
              "character": 0
            },
            "end": {
              "line": 46,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PathConstraint, Constraint)"
        },
        {
          "name": "PathConstraint::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
          "range": {
            "start": {
              "line": 46,
              "character": 0
            },
            "end": {
              "line": 46,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PathConstraint, Constraint)"
        }
      ]
    },
    {
      "name": "PathConstraint::epsilon",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 48,
          "character": 0
        },
        "end": {
          "line": 48,
          "character": 46
        }
      },
      "preview": "const float PathConstraint::epsilon = 0.00001f;"
    },
    {
      "name": "PathConstraint::NONE",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 49,
          "character": 0
        },
        "end": {
          "line": 49,
          "character": 35
        }
      },
      "preview": "const int PathConstraint::NONE = -1;"
    },
    {
      "name": "PathConstraint::BEFORE",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 50,
          "character": 0
        },
        "end": {
          "line": 50,
          "character": 37
        }
      },
      "preview": "const int PathConstraint::BEFORE = -2;"
    },
    {
      "name": "PathConstraint::AFTER",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 51,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 36
        }
      },
      "preview": "const int PathConstraint::AFTER = -3;"
    },
    {
      "name": "PathConstraint::PathConstraint",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 63,
          "character": 1
        }
      },
      "preview": "PathConstraint::PathConstraint(PathConstraintData &data, Skeleton &skeleton) : ConstraintGeneric<PathConstraint, PathConstraintData, PathConstraintPose>(data) {"
    },
    {
      "name": "PathConstraint::copy",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 65,
          "character": 0
        },
        "end": {
          "line": 69,
          "character": 1
        }
      },
      "preview": "PathConstraint* PathConstraint::copy(Skeleton &skeleton) {"
    },
    {
      "name": "PathConstraint::update",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 71,
          "character": 0
        },
        "end": {
          "line": 211,
          "character": 1
        }
      },
      "preview": "void PathConstraint::update(Skeleton &skeleton, Physics physics) {"
    },
    {
      "name": "PathConstraint::sort",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 214,
          "character": 0
        },
        "end": {
          "line": 233,
          "character": 1
        }
      },
      "preview": "void PathConstraint::sort(Skeleton &skeleton) {"
    },
    {
      "name": "PathConstraint::isSourceActive",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 235,
          "character": 0
        },
        "end": {
          "line": 237,
          "character": 1
        }
      },
      "preview": "bool PathConstraint::isSourceActive() {"
    },
    {
      "name": "PathConstraint::getData",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 239,
          "character": 0
        },
        "end": {
          "line": 241,
          "character": 1
        }
      },
      "preview": "PathConstraintData &PathConstraint::getData() {"
    },
    {
      "name": "PathConstraint::getBones",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 243,
          "character": 0
        },
        "end": {
          "line": 245,
          "character": 1
        }
      },
      "preview": "Vector<BonePose *> &PathConstraint::getBones() {"
    },
    {
      "name": "PathConstraint::getSlot",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 247,
          "character": 0
        },
        "end": {
          "line": 249,
          "character": 1
        }
      },
      "preview": "Slot *PathConstraint::getSlot() {"
    },
    {
      "name": "PathConstraint::setSlot",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 251,
          "character": 0
        },
        "end": {
          "line": 253,
          "character": 1
        }
      },
      "preview": "void PathConstraint::setSlot(Slot *slot) {"
    },
    {
      "name": "PathConstraint::computeWorldPositions",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 256,
          "character": 0
        },
        "end": {
          "line": 500,
          "character": 1
        }
      },
      "preview": "PathConstraint::computeWorldPositions(Skeleton &skeleton, PathAttachment &path, int spacesCount, bool tangents) {"
    },
    {
      "name": "PathConstraint::addBeforePosition",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 502,
          "character": 0
        },
        "end": {
          "line": 507,
          "character": 1
        }
      },
      "preview": "void PathConstraint::addBeforePosition(float p, Vector<float> &temp, int i, Vector<float> &output, int o) {"
    },
    {
      "name": "PathConstraint::addAfterPosition",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 509,
          "character": 0
        },
        "end": {
          "line": 514,
          "character": 1
        }
      },
      "preview": "void PathConstraint::addAfterPosition(float p, Vector<float> &temp, int i, Vector<float> &output, int o) {"
    },
    {
      "name": "PathConstraint::addCurvePosition",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 516,
          "character": 0
        },
        "end": {
          "line": 536,
          "character": 1
        }
      },
      "preview": "void PathConstraint::addCurvePosition(float p, float x1, float y1, float cx1, float cy1, float cx2, float cy2, float x2,"
    },
    {
      "name": "PathConstraint::sortPathSlot",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 538,
          "character": 0
        },
        "end": {
          "line": 544,
          "character": 1
        }
      },
      "preview": "void PathConstraint::sortPathSlot(Skeleton &skeleton, Skin &skin, int slotIndex, Bone &slotBone) {"
    },
    {
      "name": "PathConstraint::sortPath",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraint.cpp",
      "range": {
        "start": {
          "line": 546,
          "character": 0
        },
        "end": {
          "line": 561,
          "character": 1
        }
      },
      "preview": "void PathConstraint::sortPath(Skeleton &skeleton, Attachment *attachment, Bone &slotBone) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintData.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 35,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintData.cpp",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 37,
          "character": 45
        }
      },
      "preview": "RTTI_IMPL(PathConstraintData, ConstraintData)",
      "children": [
        {
          "name": "PathConstraintData::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintData.cpp",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PathConstraintData, ConstraintData)"
        },
        {
          "name": "PathConstraintData::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintData.cpp",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PathConstraintData, ConstraintData)"
        }
      ]
    },
    {
      "name": "PathConstraintData::PathConstraintData",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintData.cpp",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 1
        }
      },
      "preview": "PathConstraintData::PathConstraintData(const String &name) : ConstraintDataGeneric<PathConstraint, PathConstraintPose>(name),"
    },
    {
      "name": "PathConstraintData::getBones",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintData.cpp",
      "range": {
        "start": {
          "line": 48,
          "character": 0
        },
        "end": {
          "line": 50,
          "character": 1
        }
      },
      "preview": "Vector<BoneData *> &PathConstraintData::getBones() {"
    },
    {
      "name": "PathConstraintData::getSlot",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintData.cpp",
      "range": {
        "start": {
          "line": 52,
          "character": 0
        },
        "end": {
          "line": 54,
          "character": 1
        }
      },
      "preview": "SlotData *PathConstraintData::getSlot() {"
    },
    {
      "name": "PathConstraintData::setSlot",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintData.cpp",
      "range": {
        "start": {
          "line": 56,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "void PathConstraintData::setSlot(SlotData *slot) {"
    },
    {
      "name": "PathConstraintData::getPositionMode",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintData.cpp",
      "range": {
        "start": {
          "line": 60,
          "character": 0
        },
        "end": {
          "line": 62,
          "character": 1
        }
      },
      "preview": "PositionMode PathConstraintData::getPositionMode() {"
    },
    {
      "name": "PathConstraintData::setPositionMode",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintData.cpp",
      "range": {
        "start": {
          "line": 64,
          "character": 0
        },
        "end": {
          "line": 66,
          "character": 1
        }
      },
      "preview": "void PathConstraintData::setPositionMode(PositionMode positionMode) {"
    },
    {
      "name": "PathConstraintData::getSpacingMode",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintData.cpp",
      "range": {
        "start": {
          "line": 68,
          "character": 0
        },
        "end": {
          "line": 70,
          "character": 1
        }
      },
      "preview": "SpacingMode PathConstraintData::getSpacingMode() {"
    },
    {
      "name": "PathConstraintData::setSpacingMode",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintData.cpp",
      "range": {
        "start": {
          "line": 72,
          "character": 0
        },
        "end": {
          "line": 74,
          "character": 1
        }
      },
      "preview": "void PathConstraintData::setSpacingMode(SpacingMode spacingMode) {"
    },
    {
      "name": "PathConstraintData::getRotateMode",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintData.cpp",
      "range": {
        "start": {
          "line": 76,
          "character": 0
        },
        "end": {
          "line": 78,
          "character": 1
        }
      },
      "preview": "RotateMode PathConstraintData::getRotateMode() {"
    },
    {
      "name": "PathConstraintData::setRotateMode",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintData.cpp",
      "range": {
        "start": {
          "line": 80,
          "character": 0
        },
        "end": {
          "line": 82,
          "character": 1
        }
      },
      "preview": "void PathConstraintData::setRotateMode(RotateMode rotateMode) {"
    },
    {
      "name": "PathConstraintData::getOffsetRotation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintData.cpp",
      "range": {
        "start": {
          "line": 84,
          "character": 0
        },
        "end": {
          "line": 86,
          "character": 1
        }
      },
      "preview": "float PathConstraintData::getOffsetRotation() {"
    },
    {
      "name": "PathConstraintData::setOffsetRotation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintData.cpp",
      "range": {
        "start": {
          "line": 88,
          "character": 0
        },
        "end": {
          "line": 90,
          "character": 1
        }
      },
      "preview": "void PathConstraintData::setOffsetRotation(float offsetRotation) {"
    },
    {
      "name": "PathConstraintData::create",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintData.cpp",
      "range": {
        "start": {
          "line": 92,
          "character": 0
        },
        "end": {
          "line": 94,
          "character": 1
        }
      },
      "preview": "Constraint* PathConstraintData::create(Skeleton& skeleton) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintMixTimeline.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL_MULTI",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintMixTimeline.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 44,
          "character": 77
        }
      },
      "preview": "RTTI_IMPL_MULTI(PathConstraintMixTimeline, CurveTimeline, ConstraintTimeline)",
      "children": [
        {
          "name": "PathConstraintMixTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintMixTimeline.cpp",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 44,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(PathConstraintMixTimeline, CurveTimeline, ConstraintTimeline)"
        },
        {
          "name": "PathConstraintMixTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintMixTimeline.cpp",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 44,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(PathConstraintMixTimeline, CurveTimeline, ConstraintTimeline)"
        }
      ]
    },
    {
      "name": "PathConstraintMixTimeline::PathConstraintMixTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintMixTimeline.cpp",
      "range": {
        "start": {
          "line": 46,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "PathConstraintMixTimeline::PathConstraintMixTimeline(size_t frameCount, size_t bezierCount, int pathConstraintIndex)"
    },
    {
      "name": "PathConstraintMixTimeline::~PathConstraintMixTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintMixTimeline.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 54,
          "character": 1
        }
      },
      "preview": "PathConstraintMixTimeline::~PathConstraintMixTimeline() {"
    },
    {
      "name": "PathConstraintMixTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintMixTimeline.cpp",
      "range": {
        "start": {
          "line": 56,
          "character": 0
        },
        "end": {
          "line": 132,
          "character": 1
        }
      },
      "preview": "void PathConstraintMixTimeline::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha,"
    },
    {
      "name": "PathConstraintMixTimeline::setFrame",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintMixTimeline.cpp",
      "range": {
        "start": {
          "line": 134,
          "character": 0
        },
        "end": {
          "line": 140,
          "character": 1
        }
      },
      "preview": "void PathConstraintMixTimeline::setFrame(int frame, float time, float mixRotate, float mixX, float mixY) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPose.cpp",
      "range": {
        "start": {
          "line": 31,
          "character": 0
        },
        "end": {
          "line": 31,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "PathConstraintPose::PathConstraintPose",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPose.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 34,
          "character": 1
        }
      },
      "preview": "PathConstraintPose::PathConstraintPose() : Pose<PathConstraintPose>(), _position(0), _spacing(0), _mixRotate(0), _mixX(0), _mixY(0) {"
    },
    {
      "name": "PathConstraintPose::~PathConstraintPose",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPose.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 37,
          "character": 1
        }
      },
      "preview": "PathConstraintPose::~PathConstraintPose() {"
    },
    {
      "name": "PathConstraintPose::set",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPose.cpp",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 1
        }
      },
      "preview": "void PathConstraintPose::set(PathConstraintPose &pose) {"
    },
    {
      "name": "PathConstraintPose::getPosition",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPose.cpp",
      "range": {
        "start": {
          "line": 47,
          "character": 0
        },
        "end": {
          "line": 49,
          "character": 1
        }
      },
      "preview": "float PathConstraintPose::getPosition() {"
    },
    {
      "name": "PathConstraintPose::setPosition",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPose.cpp",
      "range": {
        "start": {
          "line": 51,
          "character": 0
        },
        "end": {
          "line": 53,
          "character": 1
        }
      },
      "preview": "void PathConstraintPose::setPosition(float position) {"
    },
    {
      "name": "PathConstraintPose::getSpacing",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPose.cpp",
      "range": {
        "start": {
          "line": 55,
          "character": 0
        },
        "end": {
          "line": 57,
          "character": 1
        }
      },
      "preview": "float PathConstraintPose::getSpacing() {"
    },
    {
      "name": "PathConstraintPose::setSpacing",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPose.cpp",
      "range": {
        "start": {
          "line": 59,
          "character": 0
        },
        "end": {
          "line": 61,
          "character": 1
        }
      },
      "preview": "void PathConstraintPose::setSpacing(float spacing) {"
    },
    {
      "name": "PathConstraintPose::getMixRotate",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPose.cpp",
      "range": {
        "start": {
          "line": 63,
          "character": 0
        },
        "end": {
          "line": 65,
          "character": 1
        }
      },
      "preview": "float PathConstraintPose::getMixRotate() {"
    },
    {
      "name": "PathConstraintPose::setMixRotate",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPose.cpp",
      "range": {
        "start": {
          "line": 67,
          "character": 0
        },
        "end": {
          "line": 69,
          "character": 1
        }
      },
      "preview": "void PathConstraintPose::setMixRotate(float mixRotate) {"
    },
    {
      "name": "PathConstraintPose::getMixX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPose.cpp",
      "range": {
        "start": {
          "line": 71,
          "character": 0
        },
        "end": {
          "line": 73,
          "character": 1
        }
      },
      "preview": "float PathConstraintPose::getMixX() {"
    },
    {
      "name": "PathConstraintPose::setMixX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPose.cpp",
      "range": {
        "start": {
          "line": 75,
          "character": 0
        },
        "end": {
          "line": 77,
          "character": 1
        }
      },
      "preview": "void PathConstraintPose::setMixX(float mixX) {"
    },
    {
      "name": "PathConstraintPose::getMixY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPose.cpp",
      "range": {
        "start": {
          "line": 79,
          "character": 0
        },
        "end": {
          "line": 81,
          "character": 1
        }
      },
      "preview": "float PathConstraintPose::getMixY() {"
    },
    {
      "name": "PathConstraintPose::setMixY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPose.cpp",
      "range": {
        "start": {
          "line": 83,
          "character": 0
        },
        "end": {
          "line": 85,
          "character": 1
        }
      },
      "preview": "void PathConstraintPose::setMixY(float mixY) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPositionTimeline.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPositionTimeline.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 62
        }
      },
      "preview": "RTTI_IMPL(PathConstraintPositionTimeline, ConstraintTimeline1)",
      "children": [
        {
          "name": "PathConstraintPositionTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPositionTimeline.cpp",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PathConstraintPositionTimeline, ConstraintTimeline1)"
        },
        {
          "name": "PathConstraintPositionTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPositionTimeline.cpp",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PathConstraintPositionTimeline, ConstraintTimeline1)"
        }
      ]
    },
    {
      "name": "PathConstraintPositionTimeline::PathConstraintPositionTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPositionTimeline.cpp",
      "range": {
        "start": {
          "line": 45,
          "character": 0
        },
        "end": {
          "line": 52,
          "character": 1
        }
      },
      "preview": "PathConstraintPositionTimeline::PathConstraintPositionTimeline(size_t frameCount, size_t bezierCount,"
    },
    {
      "name": "PathConstraintPositionTimeline::~PathConstraintPositionTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPositionTimeline.cpp",
      "range": {
        "start": {
          "line": 54,
          "character": 0
        },
        "end": {
          "line": 55,
          "character": 1
        }
      },
      "preview": "PathConstraintPositionTimeline::~PathConstraintPositionTimeline() {"
    },
    {
      "name": "PathConstraintPositionTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintPositionTimeline.cpp",
      "range": {
        "start": {
          "line": 57,
          "character": 0
        },
        "end": {
          "line": 69,
          "character": 1
        }
      },
      "preview": "void PathConstraintPositionTimeline::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents,"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintSpacingTimeline.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintSpacingTimeline.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 61
        }
      },
      "preview": "RTTI_IMPL(PathConstraintSpacingTimeline, ConstraintTimeline1)",
      "children": [
        {
          "name": "PathConstraintSpacingTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintSpacingTimeline.cpp",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PathConstraintSpacingTimeline, ConstraintTimeline1)"
        },
        {
          "name": "PathConstraintSpacingTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintSpacingTimeline.cpp",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PathConstraintSpacingTimeline, ConstraintTimeline1)"
        }
      ]
    },
    {
      "name": "PathConstraintSpacingTimeline::PathConstraintSpacingTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintSpacingTimeline.cpp",
      "range": {
        "start": {
          "line": 45,
          "character": 0
        },
        "end": {
          "line": 52,
          "character": 1
        }
      },
      "preview": "PathConstraintSpacingTimeline::PathConstraintSpacingTimeline(size_t frameCount, size_t bezierCount,"
    },
    {
      "name": "PathConstraintSpacingTimeline::~PathConstraintSpacingTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintSpacingTimeline.cpp",
      "range": {
        "start": {
          "line": 54,
          "character": 0
        },
        "end": {
          "line": 55,
          "character": 1
        }
      },
      "preview": "PathConstraintSpacingTimeline::~PathConstraintSpacingTimeline() {"
    },
    {
      "name": "PathConstraintSpacingTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PathConstraintSpacingTimeline.cpp",
      "range": {
        "start": {
          "line": 57,
          "character": 0
        },
        "end": {
          "line": 69,
          "character": 1
        }
      },
      "preview": "void PathConstraintSpacingTimeline::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents,"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraint.cpp",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 39,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraint.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 40
        }
      },
      "preview": "RTTI_IMPL(PhysicsConstraint, Constraint)",
      "children": [
        {
          "name": "PhysicsConstraint::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraint.cpp",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraint, Constraint)"
        },
        {
          "name": "PhysicsConstraint::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraint.cpp",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraint, Constraint)"
        }
      ]
    },
    {
      "name": "PhysicsConstraint::PhysicsConstraint",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraint.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 50,
          "character": 1
        }
      },
      "preview": "PhysicsConstraint::PhysicsConstraint(PhysicsConstraintData &data, Skeleton &skeleton) : ConstraintGeneric<PhysicsConstraint, PhysicsConstraintData, PhysicsConstraintPose>(data),"
    },
    {
      "name": "PhysicsConstraint::copy",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraint.cpp",
      "range": {
        "start": {
          "line": 52,
          "character": 0
        },
        "end": {
          "line": 56,
          "character": 1
        }
      },
      "preview": "PhysicsConstraint *PhysicsConstraint::copy(Skeleton &skeleton) {"
    },
    {
      "name": "PhysicsConstraint::reset",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraint.cpp",
      "range": {
        "start": {
          "line": 58,
          "character": 0
        },
        "end": {
          "line": 74,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraint::reset(Skeleton &skeleton) {"
    },
    {
      "name": "PhysicsConstraint::translate",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraint.cpp",
      "range": {
        "start": {
          "line": 76,
          "character": 0
        },
        "end": {
          "line": 81,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraint::translate(float x, float y) {"
    },
    {
      "name": "PhysicsConstraint::rotate",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraint.cpp",
      "range": {
        "start": {
          "line": 83,
          "character": 0
        },
        "end": {
          "line": 87,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraint::rotate(float x, float y, float degrees) {"
    },
    {
      "name": "PhysicsConstraint::update",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraint.cpp",
      "range": {
        "start": {
          "line": 89,
          "character": 0
        },
        "end": {
          "line": 275,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraint::update(Skeleton &skeleton, Physics physics) {"
    },
    {
      "name": "PhysicsConstraint::sort",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraint.cpp",
      "range": {
        "start": {
          "line": 277,
          "character": 0
        },
        "end": {
          "line": 283,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraint::sort(Skeleton &skeleton) {"
    },
    {
      "name": "PhysicsConstraint::isSourceActive",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraint.cpp",
      "range": {
        "start": {
          "line": 285,
          "character": 0
        },
        "end": {
          "line": 287,
          "character": 1
        }
      },
      "preview": "bool PhysicsConstraint::isSourceActive() {"
    },
    {
      "name": "PhysicsConstraint::getBone",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraint.cpp",
      "range": {
        "start": {
          "line": 289,
          "character": 0
        },
        "end": {
          "line": 291,
          "character": 1
        }
      },
      "preview": "BonePose &PhysicsConstraint::getBone() {"
    },
    {
      "name": "PhysicsConstraint::setBone",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraint.cpp",
      "range": {
        "start": {
          "line": 293,
          "character": 0
        },
        "end": {
          "line": 295,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraint::setBone(BonePose &bone) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 34,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 36,
          "character": 48
        }
      },
      "preview": "RTTI_IMPL(PhysicsConstraintData, ConstraintData)",
      "children": [
        {
          "name": "PhysicsConstraintData::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraintData, ConstraintData)"
        },
        {
          "name": "PhysicsConstraintData::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraintData, ConstraintData)"
        }
      ]
    },
    {
      "name": "PhysicsConstraintData::PhysicsConstraintData",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 1
        }
      },
      "preview": "PhysicsConstraintData::PhysicsConstraintData(const String &name) : ConstraintDataGeneric<PhysicsConstraint, PhysicsConstraintPose>(name),"
    },
    {
      "name": "PhysicsConstraintData::getBone",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 45,
          "character": 0
        },
        "end": {
          "line": 47,
          "character": 1
        }
      },
      "preview": "BoneData *PhysicsConstraintData::getBone() {"
    },
    {
      "name": "PhysicsConstraintData::setBone",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 49,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintData::setBone(BoneData *bone) {"
    },
    {
      "name": "PhysicsConstraintData::getStep",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 55,
          "character": 1
        }
      },
      "preview": "float PhysicsConstraintData::getStep() {"
    },
    {
      "name": "PhysicsConstraintData::setStep",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 57,
          "character": 0
        },
        "end": {
          "line": 59,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintData::setStep(float step) {"
    },
    {
      "name": "PhysicsConstraintData::getX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 61,
          "character": 0
        },
        "end": {
          "line": 63,
          "character": 1
        }
      },
      "preview": "float PhysicsConstraintData::getX() {"
    },
    {
      "name": "PhysicsConstraintData::setX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 65,
          "character": 0
        },
        "end": {
          "line": 67,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintData::setX(float x) {"
    },
    {
      "name": "PhysicsConstraintData::getY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 69,
          "character": 0
        },
        "end": {
          "line": 71,
          "character": 1
        }
      },
      "preview": "float PhysicsConstraintData::getY() {"
    },
    {
      "name": "PhysicsConstraintData::setY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 73,
          "character": 0
        },
        "end": {
          "line": 75,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintData::setY(float y) {"
    },
    {
      "name": "PhysicsConstraintData::getRotate",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 77,
          "character": 0
        },
        "end": {
          "line": 79,
          "character": 1
        }
      },
      "preview": "float PhysicsConstraintData::getRotate() {"
    },
    {
      "name": "PhysicsConstraintData::setRotate",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 81,
          "character": 0
        },
        "end": {
          "line": 83,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintData::setRotate(float rotate) {"
    },
    {
      "name": "PhysicsConstraintData::getScaleX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 85,
          "character": 0
        },
        "end": {
          "line": 87,
          "character": 1
        }
      },
      "preview": "float PhysicsConstraintData::getScaleX() {"
    },
    {
      "name": "PhysicsConstraintData::setScaleX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 89,
          "character": 0
        },
        "end": {
          "line": 91,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintData::setScaleX(float scaleX) {"
    },
    {
      "name": "PhysicsConstraintData::getShearX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 93,
          "character": 0
        },
        "end": {
          "line": 95,
          "character": 1
        }
      },
      "preview": "float PhysicsConstraintData::getShearX() {"
    },
    {
      "name": "PhysicsConstraintData::setShearX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 97,
          "character": 0
        },
        "end": {
          "line": 99,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintData::setShearX(float shearX) {"
    },
    {
      "name": "PhysicsConstraintData::getLimit",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 101,
          "character": 0
        },
        "end": {
          "line": 103,
          "character": 1
        }
      },
      "preview": "float PhysicsConstraintData::getLimit() {"
    },
    {
      "name": "PhysicsConstraintData::setLimit",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 105,
          "character": 0
        },
        "end": {
          "line": 107,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintData::setLimit(float limit) {"
    },
    {
      "name": "PhysicsConstraintData::getInertiaGlobal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 109,
          "character": 0
        },
        "end": {
          "line": 111,
          "character": 1
        }
      },
      "preview": "bool PhysicsConstraintData::getInertiaGlobal() {"
    },
    {
      "name": "PhysicsConstraintData::setInertiaGlobal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 113,
          "character": 0
        },
        "end": {
          "line": 115,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintData::setInertiaGlobal(bool inertiaGlobal) {"
    },
    {
      "name": "PhysicsConstraintData::getStrengthGlobal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 117,
          "character": 0
        },
        "end": {
          "line": 119,
          "character": 1
        }
      },
      "preview": "bool PhysicsConstraintData::getStrengthGlobal() {"
    },
    {
      "name": "PhysicsConstraintData::setStrengthGlobal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 121,
          "character": 0
        },
        "end": {
          "line": 123,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintData::setStrengthGlobal(bool strengthGlobal) {"
    },
    {
      "name": "PhysicsConstraintData::getDampingGlobal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 125,
          "character": 0
        },
        "end": {
          "line": 127,
          "character": 1
        }
      },
      "preview": "bool PhysicsConstraintData::getDampingGlobal() {"
    },
    {
      "name": "PhysicsConstraintData::setDampingGlobal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 129,
          "character": 0
        },
        "end": {
          "line": 131,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintData::setDampingGlobal(bool dampingGlobal) {"
    },
    {
      "name": "PhysicsConstraintData::getMassGlobal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 133,
          "character": 0
        },
        "end": {
          "line": 135,
          "character": 1
        }
      },
      "preview": "bool PhysicsConstraintData::getMassGlobal() {"
    },
    {
      "name": "PhysicsConstraintData::setMassGlobal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 137,
          "character": 0
        },
        "end": {
          "line": 139,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintData::setMassGlobal(bool massGlobal) {"
    },
    {
      "name": "PhysicsConstraintData::getWindGlobal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 141,
          "character": 0
        },
        "end": {
          "line": 143,
          "character": 1
        }
      },
      "preview": "bool PhysicsConstraintData::getWindGlobal() {"
    },
    {
      "name": "PhysicsConstraintData::setWindGlobal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 145,
          "character": 0
        },
        "end": {
          "line": 147,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintData::setWindGlobal(bool windGlobal) {"
    },
    {
      "name": "PhysicsConstraintData::getGravityGlobal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 149,
          "character": 0
        },
        "end": {
          "line": 151,
          "character": 1
        }
      },
      "preview": "bool PhysicsConstraintData::getGravityGlobal() {"
    },
    {
      "name": "PhysicsConstraintData::setGravityGlobal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 153,
          "character": 0
        },
        "end": {
          "line": 155,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintData::setGravityGlobal(bool gravityGlobal) {"
    },
    {
      "name": "PhysicsConstraintData::getMixGlobal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 157,
          "character": 0
        },
        "end": {
          "line": 159,
          "character": 1
        }
      },
      "preview": "bool PhysicsConstraintData::getMixGlobal() {"
    },
    {
      "name": "PhysicsConstraintData::setMixGlobal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 161,
          "character": 0
        },
        "end": {
          "line": 163,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintData::setMixGlobal(bool mixGlobal) {"
    },
    {
      "name": "PhysicsConstraintData::create",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintData.cpp",
      "range": {
        "start": {
          "line": 165,
          "character": 0
        },
        "end": {
          "line": 167,
          "character": 1
        }
      },
      "preview": "Constraint* PhysicsConstraintData::create(Skeleton& skeleton) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 31,
          "character": 0
        },
        "end": {
          "line": 31,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "PhysicsConstraintPose::PhysicsConstraintPose",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 34,
          "character": 1
        }
      },
      "preview": "PhysicsConstraintPose::PhysicsConstraintPose() : Pose<PhysicsConstraintPose>(), _inertia(0), _strength(0), _damping(0), _massInverse(0), _wind(0), _gravity(0), _mix(0) {"
    },
    {
      "name": "PhysicsConstraintPose::~PhysicsConstraintPose",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 37,
          "character": 1
        }
      },
      "preview": "PhysicsConstraintPose::~PhysicsConstraintPose() {"
    },
    {
      "name": "PhysicsConstraintPose::set",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 47,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintPose::set(PhysicsConstraintPose &pose) {"
    },
    {
      "name": "PhysicsConstraintPose::getInertia",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 49,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "float PhysicsConstraintPose::getInertia() {"
    },
    {
      "name": "PhysicsConstraintPose::setInertia",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 55,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintPose::setInertia(float inertia) {"
    },
    {
      "name": "PhysicsConstraintPose::getStrength",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 57,
          "character": 0
        },
        "end": {
          "line": 59,
          "character": 1
        }
      },
      "preview": "float PhysicsConstraintPose::getStrength() {"
    },
    {
      "name": "PhysicsConstraintPose::setStrength",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 61,
          "character": 0
        },
        "end": {
          "line": 63,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintPose::setStrength(float strength) {"
    },
    {
      "name": "PhysicsConstraintPose::getDamping",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 65,
          "character": 0
        },
        "end": {
          "line": 67,
          "character": 1
        }
      },
      "preview": "float PhysicsConstraintPose::getDamping() {"
    },
    {
      "name": "PhysicsConstraintPose::setDamping",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 69,
          "character": 0
        },
        "end": {
          "line": 71,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintPose::setDamping(float damping) {"
    },
    {
      "name": "PhysicsConstraintPose::getMassInverse",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 73,
          "character": 0
        },
        "end": {
          "line": 75,
          "character": 1
        }
      },
      "preview": "float PhysicsConstraintPose::getMassInverse() {"
    },
    {
      "name": "PhysicsConstraintPose::setMassInverse",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 77,
          "character": 0
        },
        "end": {
          "line": 79,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintPose::setMassInverse(float massInverse) {"
    },
    {
      "name": "PhysicsConstraintPose::getWind",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 81,
          "character": 0
        },
        "end": {
          "line": 83,
          "character": 1
        }
      },
      "preview": "float PhysicsConstraintPose::getWind() {"
    },
    {
      "name": "PhysicsConstraintPose::setWind",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 85,
          "character": 0
        },
        "end": {
          "line": 87,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintPose::setWind(float wind) {"
    },
    {
      "name": "PhysicsConstraintPose::getGravity",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 89,
          "character": 0
        },
        "end": {
          "line": 91,
          "character": 1
        }
      },
      "preview": "float PhysicsConstraintPose::getGravity() {"
    },
    {
      "name": "PhysicsConstraintPose::setGravity",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 93,
          "character": 0
        },
        "end": {
          "line": 95,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintPose::setGravity(float gravity) {"
    },
    {
      "name": "PhysicsConstraintPose::getMix",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 97,
          "character": 0
        },
        "end": {
          "line": 99,
          "character": 1
        }
      },
      "preview": "float PhysicsConstraintPose::getMix() {"
    },
    {
      "name": "PhysicsConstraintPose::setMix",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintPose.cpp",
      "range": {
        "start": {
          "line": 101,
          "character": 0
        },
        "end": {
          "line": 103,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintPose::setMix(float mix) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL_MULTI",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 77
        }
      },
      "preview": "RTTI_IMPL_MULTI(PhysicsConstraintTimeline, CurveTimeline, ConstraintTimeline)",
      "children": [
        {
          "name": "PhysicsConstraintTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(PhysicsConstraintTimeline, CurveTimeline, ConstraintTimeline)"
        },
        {
          "name": "PhysicsConstraintTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(PhysicsConstraintTimeline, CurveTimeline, ConstraintTimeline)"
        }
      ]
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 44,
          "character": 70
        }
      },
      "preview": "RTTI_IMPL(PhysicsConstraintInertiaTimeline, PhysicsConstraintTimeline)",
      "children": [
        {
          "name": "PhysicsConstraintInertiaTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 44,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraintInertiaTimeline, PhysicsConstraintTimeline)"
        },
        {
          "name": "PhysicsConstraintInertiaTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 44,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraintInertiaTimeline, PhysicsConstraintTimeline)"
        }
      ]
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 45,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 71
        }
      },
      "preview": "RTTI_IMPL(PhysicsConstraintStrengthTimeline, PhysicsConstraintTimeline)",
      "children": [
        {
          "name": "PhysicsConstraintStrengthTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 45,
              "character": 0
            },
            "end": {
              "line": 45,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraintStrengthTimeline, PhysicsConstraintTimeline)"
        },
        {
          "name": "PhysicsConstraintStrengthTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 45,
              "character": 0
            },
            "end": {
              "line": 45,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraintStrengthTimeline, PhysicsConstraintTimeline)"
        }
      ]
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 46,
          "character": 0
        },
        "end": {
          "line": 46,
          "character": 70
        }
      },
      "preview": "RTTI_IMPL(PhysicsConstraintDampingTimeline, PhysicsConstraintTimeline)",
      "children": [
        {
          "name": "PhysicsConstraintDampingTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 46,
              "character": 0
            },
            "end": {
              "line": 46,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraintDampingTimeline, PhysicsConstraintTimeline)"
        },
        {
          "name": "PhysicsConstraintDampingTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 46,
              "character": 0
            },
            "end": {
              "line": 46,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraintDampingTimeline, PhysicsConstraintTimeline)"
        }
      ]
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 47,
          "character": 0
        },
        "end": {
          "line": 47,
          "character": 67
        }
      },
      "preview": "RTTI_IMPL(PhysicsConstraintMassTimeline, PhysicsConstraintTimeline)",
      "children": [
        {
          "name": "PhysicsConstraintMassTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 47,
              "character": 0
            },
            "end": {
              "line": 47,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraintMassTimeline, PhysicsConstraintTimeline)"
        },
        {
          "name": "PhysicsConstraintMassTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 47,
              "character": 0
            },
            "end": {
              "line": 47,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraintMassTimeline, PhysicsConstraintTimeline)"
        }
      ]
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 48,
          "character": 0
        },
        "end": {
          "line": 48,
          "character": 67
        }
      },
      "preview": "RTTI_IMPL(PhysicsConstraintWindTimeline, PhysicsConstraintTimeline)",
      "children": [
        {
          "name": "PhysicsConstraintWindTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 48,
              "character": 0
            },
            "end": {
              "line": 48,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraintWindTimeline, PhysicsConstraintTimeline)"
        },
        {
          "name": "PhysicsConstraintWindTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 48,
              "character": 0
            },
            "end": {
              "line": 48,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraintWindTimeline, PhysicsConstraintTimeline)"
        }
      ]
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 49,
          "character": 0
        },
        "end": {
          "line": 49,
          "character": 70
        }
      },
      "preview": "RTTI_IMPL(PhysicsConstraintGravityTimeline, PhysicsConstraintTimeline)",
      "children": [
        {
          "name": "PhysicsConstraintGravityTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 49,
              "character": 0
            },
            "end": {
              "line": 49,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraintGravityTimeline, PhysicsConstraintTimeline)"
        },
        {
          "name": "PhysicsConstraintGravityTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 49,
              "character": 0
            },
            "end": {
              "line": 49,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraintGravityTimeline, PhysicsConstraintTimeline)"
        }
      ]
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 50,
          "character": 0
        },
        "end": {
          "line": 50,
          "character": 66
        }
      },
      "preview": "RTTI_IMPL(PhysicsConstraintMixTimeline, PhysicsConstraintTimeline)",
      "children": [
        {
          "name": "PhysicsConstraintMixTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 50,
              "character": 0
            },
            "end": {
              "line": 50,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraintMixTimeline, PhysicsConstraintTimeline)"
        },
        {
          "name": "PhysicsConstraintMixTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 50,
              "character": 0
            },
            "end": {
              "line": 50,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PhysicsConstraintMixTimeline, PhysicsConstraintTimeline)"
        }
      ]
    },
    {
      "name": "RTTI_IMPL_MULTI",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 51,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 77
        }
      },
      "preview": "RTTI_IMPL_MULTI(PhysicsConstraintResetTimeline, Timeline, ConstraintTimeline)",
      "children": [
        {
          "name": "PhysicsConstraintResetTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 51,
              "character": 0
            },
            "end": {
              "line": 51,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(PhysicsConstraintResetTimeline, Timeline, ConstraintTimeline)"
        },
        {
          "name": "PhysicsConstraintResetTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 51,
              "character": 0
            },
            "end": {
              "line": 51,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(PhysicsConstraintResetTimeline, Timeline, ConstraintTimeline)"
        }
      ]
    },
    {
      "name": "PhysicsConstraintTimeline::PhysicsConstraintTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "PhysicsConstraintTimeline::PhysicsConstraintTimeline(size_t frameCount, size_t bezierCount,"
    },
    {
      "name": "PhysicsConstraintTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 60,
          "character": 0
        },
        "end": {
          "line": 82,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintTimeline::apply(Skeleton &skeleton, float, float time, Vector<Event *> *,"
    },
    {
      "name": "PhysicsConstraintResetTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PhysicsConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 84,
          "character": 0
        },
        "end": {
          "line": 109,
          "character": 1
        }
      },
      "preview": "void PhysicsConstraintResetTimeline::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *, float alpha, MixBlend blend, MixDirection direction, bool appliedPose) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PointAttachment.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 35,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PointAttachment.cpp",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 37,
          "character": 38
        }
      },
      "preview": "RTTI_IMPL(PointAttachment, Attachment)",
      "children": [
        {
          "name": "PointAttachment::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PointAttachment.cpp",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PointAttachment, Attachment)"
        },
        {
          "name": "PointAttachment::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PointAttachment.cpp",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(PointAttachment, Attachment)"
        }
      ]
    },
    {
      "name": "PointAttachment::PointAttachment",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PointAttachment.cpp",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 1
        }
      },
      "preview": "PointAttachment::PointAttachment(const String &name) : Attachment(name), _x(0), _y(0), _rotation(0), _color(0.9451f, 0.9451f, 0, 1) {"
    },
    {
      "name": "PointAttachment::getX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PointAttachment.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 44,
          "character": 1
        }
      },
      "preview": "float PointAttachment::getX() {"
    },
    {
      "name": "PointAttachment::setX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PointAttachment.cpp",
      "range": {
        "start": {
          "line": 46,
          "character": 0
        },
        "end": {
          "line": 48,
          "character": 1
        }
      },
      "preview": "void PointAttachment::setX(float inValue) {"
    },
    {
      "name": "PointAttachment::getY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PointAttachment.cpp",
      "range": {
        "start": {
          "line": 50,
          "character": 0
        },
        "end": {
          "line": 52,
          "character": 1
        }
      },
      "preview": "float PointAttachment::getY() {"
    },
    {
      "name": "PointAttachment::setY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PointAttachment.cpp",
      "range": {
        "start": {
          "line": 54,
          "character": 0
        },
        "end": {
          "line": 56,
          "character": 1
        }
      },
      "preview": "void PointAttachment::setY(float inValue) {"
    },
    {
      "name": "PointAttachment::getRotation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PointAttachment.cpp",
      "range": {
        "start": {
          "line": 58,
          "character": 0
        },
        "end": {
          "line": 60,
          "character": 1
        }
      },
      "preview": "float PointAttachment::getRotation() {"
    },
    {
      "name": "PointAttachment::setRotation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PointAttachment.cpp",
      "range": {
        "start": {
          "line": 62,
          "character": 0
        },
        "end": {
          "line": 64,
          "character": 1
        }
      },
      "preview": "void PointAttachment::setRotation(float inValue) {"
    },
    {
      "name": "PointAttachment::getColor",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PointAttachment.cpp",
      "range": {
        "start": {
          "line": 66,
          "character": 0
        },
        "end": {
          "line": 68,
          "character": 1
        }
      },
      "preview": "Color &PointAttachment::getColor() {"
    },
    {
      "name": "PointAttachment::computeWorldPosition",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PointAttachment.cpp",
      "range": {
        "start": {
          "line": 70,
          "character": 0
        },
        "end": {
          "line": 73,
          "character": 1
        }
      },
      "preview": "void PointAttachment::computeWorldPosition(BonePose &bone, float &ox, float &oy) {"
    },
    {
      "name": "PointAttachment::computeWorldRotation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PointAttachment.cpp",
      "range": {
        "start": {
          "line": 75,
          "character": 0
        },
        "end": {
          "line": 80,
          "character": 1
        }
      },
      "preview": "float PointAttachment::computeWorldRotation(BonePose &bone) {"
    },
    {
      "name": "PointAttachment::copy",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/PointAttachment.cpp",
      "range": {
        "start": {
          "line": 82,
          "character": 0
        },
        "end": {
          "line": 89,
          "character": 1
        }
      },
      "preview": "Attachment *PointAttachment::copy() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RTTI.cpp",
      "range": {
        "start": {
          "line": 32,
          "character": 0
        },
        "end": {
          "line": 32,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI::RTTI",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RTTI.cpp",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 38,
          "character": 1
        }
      },
      "preview": "RTTI::RTTI(const char *className) : _className(className), _pBaseRTTI(NULL), _interfaceCount(0) {"
    },
    {
      "name": "RTTI::RTTI",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RTTI.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 44,
          "character": 1
        }
      },
      "preview": "RTTI::RTTI(const char *className, const RTTI &baseRTTI) : _className(className), _pBaseRTTI(&baseRTTI), _interfaceCount(0) {"
    },
    {
      "name": "RTTI::RTTI",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RTTI.cpp",
      "range": {
        "start": {
          "line": 46,
          "character": 0
        },
        "end": {
          "line": 55,
          "character": 1
        }
      },
      "preview": "RTTI::RTTI(const char *className, const RTTI &baseRTTI, const RTTI* interface1, const RTTI* interface2, const RTTI* interface3)"
    },
    {
      "name": "RTTI::getClassName",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RTTI.cpp",
      "range": {
        "start": {
          "line": 57,
          "character": 0
        },
        "end": {
          "line": 59,
          "character": 1
        }
      },
      "preview": "const char *RTTI::getClassName() const {"
    },
    {
      "name": "RTTI::isExactly",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RTTI.cpp",
      "range": {
        "start": {
          "line": 61,
          "character": 0
        },
        "end": {
          "line": 63,
          "character": 1
        }
      },
      "preview": "bool RTTI::isExactly(const RTTI &rtti) const {"
    },
    {
      "name": "RTTI::instanceOf",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RTTI.cpp",
      "range": {
        "start": {
          "line": 65,
          "character": 0
        },
        "end": {
          "line": 82,
          "character": 1
        }
      },
      "preview": "bool RTTI::instanceOf(const RTTI &rtti) const {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 36,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 38,
          "character": 39
        }
      },
      "preview": "RTTI_IMPL(RegionAttachment, Attachment)",
      "children": [
        {
          "name": "RegionAttachment::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(RegionAttachment, Attachment)"
        },
        {
          "name": "RegionAttachment::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(RegionAttachment, Attachment)"
        }
      ]
    },
    {
      "name": "RegionAttachment::BLX",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 35
        }
      },
      "preview": "const int RegionAttachment::BLX = 0;"
    },
    {
      "name": "RegionAttachment::BLY",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 35
        }
      },
      "preview": "const int RegionAttachment::BLY = 1;"
    },
    {
      "name": "RegionAttachment::ULX",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 35
        }
      },
      "preview": "const int RegionAttachment::ULX = 2;"
    },
    {
      "name": "RegionAttachment::ULY",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 35
        }
      },
      "preview": "const int RegionAttachment::ULY = 3;"
    },
    {
      "name": "RegionAttachment::URX",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 44,
          "character": 35
        }
      },
      "preview": "const int RegionAttachment::URX = 4;"
    },
    {
      "name": "RegionAttachment::URY",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 45,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 35
        }
      },
      "preview": "const int RegionAttachment::URY = 5;"
    },
    {
      "name": "RegionAttachment::BRX",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 46,
          "character": 0
        },
        "end": {
          "line": 46,
          "character": 35
        }
      },
      "preview": "const int RegionAttachment::BRX = 6;"
    },
    {
      "name": "RegionAttachment::BRY",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 47,
          "character": 0
        },
        "end": {
          "line": 47,
          "character": 35
        }
      },
      "preview": "const int RegionAttachment::BRY = 7;"
    },
    {
      "name": "RegionAttachment::RegionAttachment",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 49,
          "character": 0
        },
        "end": {
          "line": 63,
          "character": 1
        }
      },
      "preview": "RegionAttachment::RegionAttachment(const String &name) : Attachment(name),"
    },
    {
      "name": "RegionAttachment::~RegionAttachment",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 65,
          "character": 0
        },
        "end": {
          "line": 67,
          "character": 1
        }
      },
      "preview": "RegionAttachment::~RegionAttachment() {"
    },
    {
      "name": "RegionAttachment::updateRegion",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 69,
          "character": 0
        },
        "end": {
          "line": 127,
          "character": 1
        }
      },
      "preview": "void RegionAttachment::updateRegion() {"
    },
    {
      "name": "RegionAttachment::computeWorldVertices",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 129,
          "character": 0
        },
        "end": {
          "line": 132,
          "character": 1
        }
      },
      "preview": "void RegionAttachment::computeWorldVertices(Slot &slot, Vector<float> &worldVertices, size_t offset, size_t stride) {"
    },
    {
      "name": "RegionAttachment::computeWorldVertices",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 134,
          "character": 0
        },
        "end": {
          "line": 164,
          "character": 1
        }
      },
      "preview": "void RegionAttachment::computeWorldVertices(Slot &slot, float *worldVertices, size_t offset, size_t stride) {"
    },
    {
      "name": "RegionAttachment::getX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 166,
          "character": 0
        },
        "end": {
          "line": 168,
          "character": 1
        }
      },
      "preview": "float RegionAttachment::getX() {"
    },
    {
      "name": "RegionAttachment::setX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 170,
          "character": 0
        },
        "end": {
          "line": 172,
          "character": 1
        }
      },
      "preview": "void RegionAttachment::setX(float inValue) {"
    },
    {
      "name": "RegionAttachment::getY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 174,
          "character": 0
        },
        "end": {
          "line": 176,
          "character": 1
        }
      },
      "preview": "float RegionAttachment::getY() {"
    },
    {
      "name": "RegionAttachment::setY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 178,
          "character": 0
        },
        "end": {
          "line": 180,
          "character": 1
        }
      },
      "preview": "void RegionAttachment::setY(float inValue) {"
    },
    {
      "name": "RegionAttachment::getRotation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 182,
          "character": 0
        },
        "end": {
          "line": 184,
          "character": 1
        }
      },
      "preview": "float RegionAttachment::getRotation() {"
    },
    {
      "name": "RegionAttachment::setRotation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 186,
          "character": 0
        },
        "end": {
          "line": 188,
          "character": 1
        }
      },
      "preview": "void RegionAttachment::setRotation(float inValue) {"
    },
    {
      "name": "RegionAttachment::getScaleX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 190,
          "character": 0
        },
        "end": {
          "line": 192,
          "character": 1
        }
      },
      "preview": "float RegionAttachment::getScaleX() {"
    },
    {
      "name": "RegionAttachment::setScaleX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 194,
          "character": 0
        },
        "end": {
          "line": 196,
          "character": 1
        }
      },
      "preview": "void RegionAttachment::setScaleX(float inValue) {"
    },
    {
      "name": "RegionAttachment::getScaleY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 198,
          "character": 0
        },
        "end": {
          "line": 200,
          "character": 1
        }
      },
      "preview": "float RegionAttachment::getScaleY() {"
    },
    {
      "name": "RegionAttachment::setScaleY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 202,
          "character": 0
        },
        "end": {
          "line": 204,
          "character": 1
        }
      },
      "preview": "void RegionAttachment::setScaleY(float inValue) {"
    },
    {
      "name": "RegionAttachment::getWidth",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 206,
          "character": 0
        },
        "end": {
          "line": 208,
          "character": 1
        }
      },
      "preview": "float RegionAttachment::getWidth() {"
    },
    {
      "name": "RegionAttachment::setWidth",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 210,
          "character": 0
        },
        "end": {
          "line": 212,
          "character": 1
        }
      },
      "preview": "void RegionAttachment::setWidth(float inValue) {"
    },
    {
      "name": "RegionAttachment::getHeight",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 214,
          "character": 0
        },
        "end": {
          "line": 216,
          "character": 1
        }
      },
      "preview": "float RegionAttachment::getHeight() {"
    },
    {
      "name": "RegionAttachment::setHeight",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 218,
          "character": 0
        },
        "end": {
          "line": 220,
          "character": 1
        }
      },
      "preview": "void RegionAttachment::setHeight(float inValue) {"
    },
    {
      "name": "RegionAttachment::getPath",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 222,
          "character": 0
        },
        "end": {
          "line": 224,
          "character": 1
        }
      },
      "preview": "const String &RegionAttachment::getPath() {"
    },
    {
      "name": "RegionAttachment::setPath",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 226,
          "character": 0
        },
        "end": {
          "line": 228,
          "character": 1
        }
      },
      "preview": "void RegionAttachment::setPath(const String &inValue) {"
    },
    {
      "name": "RegionAttachment::getRegion",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 230,
          "character": 0
        },
        "end": {
          "line": 232,
          "character": 1
        }
      },
      "preview": "TextureRegion *RegionAttachment::getRegion() {"
    },
    {
      "name": "RegionAttachment::setRegion",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 234,
          "character": 0
        },
        "end": {
          "line": 236,
          "character": 1
        }
      },
      "preview": "void RegionAttachment::setRegion(TextureRegion *region) {"
    },
    {
      "name": "RegionAttachment::getSequence",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 238,
          "character": 0
        },
        "end": {
          "line": 240,
          "character": 1
        }
      },
      "preview": "Sequence *RegionAttachment::getSequence() {"
    },
    {
      "name": "RegionAttachment::setSequence",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 242,
          "character": 0
        },
        "end": {
          "line": 244,
          "character": 1
        }
      },
      "preview": "void RegionAttachment::setSequence(Sequence *sequence) {"
    },
    {
      "name": "RegionAttachment::getOffset",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 246,
          "character": 0
        },
        "end": {
          "line": 248,
          "character": 1
        }
      },
      "preview": "Vector<float> &RegionAttachment::getOffset() {"
    },
    {
      "name": "RegionAttachment::getUVs",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 250,
          "character": 0
        },
        "end": {
          "line": 252,
          "character": 1
        }
      },
      "preview": "Vector<float> &RegionAttachment::getUVs() {"
    },
    {
      "name": "RegionAttachment::getColor",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 254,
          "character": 0
        },
        "end": {
          "line": 256,
          "character": 1
        }
      },
      "preview": "spine::Color &RegionAttachment::getColor() {"
    },
    {
      "name": "RegionAttachment::copy",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RegionAttachment.cpp",
      "range": {
        "start": {
          "line": 258,
          "character": 0
        },
        "end": {
          "line": 274,
          "character": 1
        }
      },
      "preview": "Attachment *RegionAttachment::copy() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RotateTimeline.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RotateTimeline.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 35,
          "character": 40
        }
      },
      "preview": "RTTI_IMPL(RotateTimeline, BoneTimeline1)",
      "children": [
        {
          "name": "RotateTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RotateTimeline.cpp",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 35,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(RotateTimeline, BoneTimeline1)"
        },
        {
          "name": "RotateTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RotateTimeline.cpp",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 35,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(RotateTimeline, BoneTimeline1)"
        }
      ]
    },
    {
      "name": "RotateTimeline::RotateTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RotateTimeline.cpp",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 38,
          "character": 1
        }
      },
      "preview": "RotateTimeline::RotateTimeline(size_t frameCount, size_t bezierCount, int boneIndex) : BoneTimeline1(frameCount, bezierCount, boneIndex, Property_Rotate) {"
    },
    {
      "name": "RotateTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/RotateTimeline.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 44,
          "character": 1
        }
      },
      "preview": "void RotateTimeline::apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ScaleTimeline.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ScaleTimeline.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 39
        }
      },
      "preview": "RTTI_IMPL(ScaleTimeline, BoneTimeline2)",
      "children": [
        {
          "name": "ScaleTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ScaleTimeline.cpp",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(ScaleTimeline, BoneTimeline2)"
        },
        {
          "name": "ScaleTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ScaleTimeline.cpp",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(ScaleTimeline, BoneTimeline2)"
        }
      ]
    },
    {
      "name": "ScaleTimeline::ScaleTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ScaleTimeline.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 1
        }
      },
      "preview": "ScaleTimeline::ScaleTimeline(size_t frameCount, size_t bezierCount, int boneIndex) : BoneTimeline2(frameCount, bezierCount, boneIndex, Property_ScaleX, Property_ScaleY) {"
    },
    {
      "name": "ScaleTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ScaleTimeline.cpp",
      "range": {
        "start": {
          "line": 47,
          "character": 0
        },
        "end": {
          "line": 141,
          "character": 1
        }
      },
      "preview": "void ScaleTimeline::apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ScaleTimeline.cpp",
      "range": {
        "start": {
          "line": 143,
          "character": 0
        },
        "end": {
          "line": 143,
          "character": 40
        }
      },
      "preview": "RTTI_IMPL(ScaleXTimeline, BoneTimeline1)",
      "children": [
        {
          "name": "ScaleXTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ScaleTimeline.cpp",
          "range": {
            "start": {
              "line": 143,
              "character": 0
            },
            "end": {
              "line": 143,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(ScaleXTimeline, BoneTimeline1)"
        },
        {
          "name": "ScaleXTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ScaleTimeline.cpp",
          "range": {
            "start": {
              "line": 143,
              "character": 0
            },
            "end": {
              "line": 143,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(ScaleXTimeline, BoneTimeline1)"
        }
      ]
    },
    {
      "name": "ScaleXTimeline::ScaleXTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ScaleTimeline.cpp",
      "range": {
        "start": {
          "line": 145,
          "character": 0
        },
        "end": {
          "line": 146,
          "character": 1
        }
      },
      "preview": "ScaleXTimeline::ScaleXTimeline(size_t frameCount, size_t bezierCount, int boneIndex) : BoneTimeline1(frameCount, bezierCount, boneIndex, Property_ScaleX) {"
    },
    {
      "name": "ScaleXTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ScaleTimeline.cpp",
      "range": {
        "start": {
          "line": 148,
          "character": 0
        },
        "end": {
          "line": 151,
          "character": 1
        }
      },
      "preview": "void ScaleXTimeline::apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ScaleTimeline.cpp",
      "range": {
        "start": {
          "line": 153,
          "character": 0
        },
        "end": {
          "line": 153,
          "character": 40
        }
      },
      "preview": "RTTI_IMPL(ScaleYTimeline, BoneTimeline1)",
      "children": [
        {
          "name": "ScaleYTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ScaleTimeline.cpp",
          "range": {
            "start": {
              "line": 153,
              "character": 0
            },
            "end": {
              "line": 153,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(ScaleYTimeline, BoneTimeline1)"
        },
        {
          "name": "ScaleYTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ScaleTimeline.cpp",
          "range": {
            "start": {
              "line": 153,
              "character": 0
            },
            "end": {
              "line": 153,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(ScaleYTimeline, BoneTimeline1)"
        }
      ]
    },
    {
      "name": "ScaleYTimeline::ScaleYTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ScaleTimeline.cpp",
      "range": {
        "start": {
          "line": 155,
          "character": 0
        },
        "end": {
          "line": 156,
          "character": 1
        }
      },
      "preview": "ScaleYTimeline::ScaleYTimeline(size_t frameCount, size_t bezierCount, int boneIndex) : BoneTimeline1(frameCount, bezierCount, boneIndex, Property_ScaleY) {"
    },
    {
      "name": "ScaleYTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ScaleTimeline.cpp",
      "range": {
        "start": {
          "line": 158,
          "character": 0
        },
        "end": {
          "line": 161,
          "character": 1
        }
      },
      "preview": "void ScaleYTimeline::apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Sequence.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 36,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "Sequence::_nextID",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Sequence.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 38,
          "character": 25
        }
      },
      "preview": "int Sequence::_nextID = 0;"
    },
    {
      "name": "Sequence::Sequence",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Sequence.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 46,
          "character": 1
        }
      },
      "preview": "Sequence::Sequence(int count) : _id(nextID()),"
    },
    {
      "name": "Sequence::~Sequence",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Sequence.cpp",
      "range": {
        "start": {
          "line": 48,
          "character": 0
        },
        "end": {
          "line": 49,
          "character": 1
        }
      },
      "preview": "Sequence::~Sequence() {"
    },
    {
      "name": "Sequence::copy",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Sequence.cpp",
      "range": {
        "start": {
          "line": 51,
          "character": 0
        },
        "end": {
          "line": 60,
          "character": 1
        }
      },
      "preview": "Sequence *Sequence::copy() {"
    },
    {
      "name": "Sequence::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Sequence.cpp",
      "range": {
        "start": {
          "line": 62,
          "character": 0
        },
        "end": {
          "line": 83,
          "character": 1
        }
      },
      "preview": "void Sequence::apply(SlotPose *slot, Attachment *attachment) {"
    },
    {
      "name": "Sequence::getPath",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Sequence.cpp",
      "range": {
        "start": {
          "line": 85,
          "character": 0
        },
        "end": {
          "line": 93,
          "character": 1
        }
      },
      "preview": "String Sequence::getPath(const String &basePath, int index) {"
    },
    {
      "name": "Sequence::nextID",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Sequence.cpp",
      "range": {
        "start": {
          "line": 95,
          "character": 0
        },
        "end": {
          "line": 97,
          "character": 1
        }
      },
      "preview": "int Sequence::nextID() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SequenceTimeline.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL_MULTI",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SequenceTimeline.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 57
        }
      },
      "preview": "RTTI_IMPL_MULTI(SequenceTimeline, Timeline, SlotTimeline)",
      "children": [
        {
          "name": "SequenceTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SequenceTimeline.cpp",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(SequenceTimeline, Timeline, SlotTimeline)"
        },
        {
          "name": "SequenceTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SequenceTimeline.cpp",
          "range": {
            "start": {
              "line": 43,
              "character": 0
            },
            "end": {
              "line": 43,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(SequenceTimeline, Timeline, SlotTimeline)"
        }
      ]
    },
    {
      "name": "SequenceTimeline::SequenceTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SequenceTimeline.cpp",
      "range": {
        "start": {
          "line": 45,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "SequenceTimeline::SequenceTimeline(size_t frameCount, int slotIndex, Attachment *attachment) : Timeline(frameCount, ENTRIES), SlotTimeline(slotIndex), _attachment((HasTextureRegion *) attachment) {"
    },
    {
      "name": "SequenceTimeline::~SequenceTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SequenceTimeline.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 54,
          "character": 1
        }
      },
      "preview": "SequenceTimeline::~SequenceTimeline() {"
    },
    {
      "name": "SequenceTimeline::setFrame",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SequenceTimeline.cpp",
      "range": {
        "start": {
          "line": 56,
          "character": 0
        },
        "end": {
          "line": 62,
          "character": 1
        }
      },
      "preview": "void SequenceTimeline::setFrame(int frame, float time, SequenceMode mode, int index, float delay) {"
    },
    {
      "name": "SequenceTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SequenceTimeline.cpp",
      "range": {
        "start": {
          "line": 64,
          "character": 0
        },
        "end": {
          "line": 131,
          "character": 1
        }
      },
      "preview": "void SequenceTimeline::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents,"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ShearTimeline.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ShearTimeline.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 39
        }
      },
      "preview": "RTTI_IMPL(ShearTimeline, BoneTimeline2)",
      "children": [
        {
          "name": "ShearTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ShearTimeline.cpp",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(ShearTimeline, BoneTimeline2)"
        },
        {
          "name": "ShearTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ShearTimeline.cpp",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(ShearTimeline, BoneTimeline2)"
        }
      ]
    },
    {
      "name": "ShearTimeline::ShearTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ShearTimeline.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 1
        }
      },
      "preview": "ShearTimeline::ShearTimeline(size_t frameCount, size_t bezierCount, int boneIndex) : BoneTimeline2(frameCount, bezierCount, boneIndex, Property_ShearX, Property_ShearY) {"
    },
    {
      "name": "ShearTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ShearTimeline.cpp",
      "range": {
        "start": {
          "line": 47,
          "character": 0
        },
        "end": {
          "line": 103,
          "character": 1
        }
      },
      "preview": "void ShearTimeline::apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ShearTimeline.cpp",
      "range": {
        "start": {
          "line": 105,
          "character": 0
        },
        "end": {
          "line": 105,
          "character": 40
        }
      },
      "preview": "RTTI_IMPL(ShearXTimeline, BoneTimeline1)",
      "children": [
        {
          "name": "ShearXTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ShearTimeline.cpp",
          "range": {
            "start": {
              "line": 105,
              "character": 0
            },
            "end": {
              "line": 105,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(ShearXTimeline, BoneTimeline1)"
        },
        {
          "name": "ShearXTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ShearTimeline.cpp",
          "range": {
            "start": {
              "line": 105,
              "character": 0
            },
            "end": {
              "line": 105,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(ShearXTimeline, BoneTimeline1)"
        }
      ]
    },
    {
      "name": "ShearXTimeline::ShearXTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ShearTimeline.cpp",
      "range": {
        "start": {
          "line": 107,
          "character": 0
        },
        "end": {
          "line": 108,
          "character": 1
        }
      },
      "preview": "ShearXTimeline::ShearXTimeline(size_t frameCount, size_t bezierCount, int boneIndex) : BoneTimeline1(frameCount, bezierCount, boneIndex, Property_ShearX) {"
    },
    {
      "name": "ShearXTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ShearTimeline.cpp",
      "range": {
        "start": {
          "line": 110,
          "character": 0
        },
        "end": {
          "line": 113,
          "character": 1
        }
      },
      "preview": "void ShearXTimeline::apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ShearTimeline.cpp",
      "range": {
        "start": {
          "line": 115,
          "character": 0
        },
        "end": {
          "line": 115,
          "character": 40
        }
      },
      "preview": "RTTI_IMPL(ShearYTimeline, BoneTimeline1)",
      "children": [
        {
          "name": "ShearYTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ShearTimeline.cpp",
          "range": {
            "start": {
              "line": 115,
              "character": 0
            },
            "end": {
              "line": 115,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(ShearYTimeline, BoneTimeline1)"
        },
        {
          "name": "ShearYTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ShearTimeline.cpp",
          "range": {
            "start": {
              "line": 115,
              "character": 0
            },
            "end": {
              "line": 115,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(ShearYTimeline, BoneTimeline1)"
        }
      ]
    },
    {
      "name": "ShearYTimeline::ShearYTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ShearTimeline.cpp",
      "range": {
        "start": {
          "line": 117,
          "character": 0
        },
        "end": {
          "line": 118,
          "character": 1
        }
      },
      "preview": "ShearYTimeline::ShearYTimeline(size_t frameCount, size_t bezierCount, int boneIndex) : BoneTimeline1(frameCount, bezierCount, boneIndex, Property_ShearY) {"
    },
    {
      "name": "ShearYTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/ShearTimeline.cpp",
      "range": {
        "start": {
          "line": 120,
          "character": 0
        },
        "end": {
          "line": 123,
          "character": 1
        }
      },
      "preview": "void ShearYTimeline::apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 58,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "Skeleton::Skeleton",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 60,
          "character": 0
        },
        "end": {
          "line": 100,
          "character": 1
        }
      },
      "preview": "Skeleton::Skeleton(SkeletonData &skeletonData) : _data(skeletonData), _skin(NULL), _color(1, 1, 1, 1), _x(0), _y(0),"
    },
    {
      "name": "Skeleton::~Skeleton",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 102,
          "character": 0
        },
        "end": {
          "line": 106,
          "character": 1
        }
      },
      "preview": "Skeleton::~Skeleton() {"
    },
    {
      "name": "Skeleton::updateCache",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 108,
          "character": 0
        },
        "end": {
          "line": 162,
          "character": 1
        }
      },
      "preview": "void Skeleton::updateCache() {"
    },
    {
      "name": "Skeleton::printUpdateCache",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 164,
          "character": 0
        },
        "end": {
          "line": 183,
          "character": 1
        }
      },
      "preview": "void Skeleton::printUpdateCache() {"
    },
    {
      "name": "Skeleton::constrained",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 185,
          "character": 0
        },
        "end": {
          "line": 190,
          "character": 1
        }
      },
      "preview": "void Skeleton::constrained(Posed &object) {"
    },
    {
      "name": "Skeleton::sortBone",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 192,
          "character": 0
        },
        "end": {
          "line": 198,
          "character": 1
        }
      },
      "preview": "void Skeleton::sortBone(Bone *bone) {"
    },
    {
      "name": "Skeleton::sortReset",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 200,
          "character": 0
        },
        "end": {
          "line": 209,
          "character": 1
        }
      },
      "preview": "void Skeleton::sortReset(Vector<Bone *> &bones) {"
    },
    {
      "name": "Skeleton::updateWorldTransform",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 211,
          "character": 0
        },
        "end": {
          "line": 223,
          "character": 1
        }
      },
      "preview": "void Skeleton::updateWorldTransform(Physics physics) {"
    },
    {
      "name": "Skeleton::updateWorldTransform",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 225,
          "character": 0
        },
        "end": {
          "line": 258,
          "character": 1
        }
      },
      "preview": "void Skeleton::updateWorldTransform(Physics physics, BonePose *parent) {"
    },
    {
      "name": "Skeleton::setupPose",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 260,
          "character": 0
        },
        "end": {
          "line": 263,
          "character": 1
        }
      },
      "preview": "void Skeleton::setupPose() {"
    },
    {
      "name": "Skeleton::setupPoseBones",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 265,
          "character": 0
        },
        "end": {
          "line": 275,
          "character": 1
        }
      },
      "preview": "void Skeleton::setupPoseBones() {"
    },
    {
      "name": "Skeleton::setupPoseSlots",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 277,
          "character": 0
        },
        "end": {
          "line": 289,
          "character": 1
        }
      },
      "preview": "void Skeleton::setupPoseSlots() {"
    },
    {
      "name": "Skeleton::getData",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 291,
          "character": 0
        },
        "end": {
          "line": 293,
          "character": 1
        }
      },
      "preview": "SkeletonData *Skeleton::getData() {"
    },
    {
      "name": "Skeleton::getBones",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 295,
          "character": 0
        },
        "end": {
          "line": 297,
          "character": 1
        }
      },
      "preview": "Vector<Bone *> &Skeleton::getBones() {"
    },
    {
      "name": "Skeleton::getUpdateCache",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 299,
          "character": 0
        },
        "end": {
          "line": 301,
          "character": 1
        }
      },
      "preview": "Vector<Update *> &Skeleton::getUpdateCache() {"
    },
    {
      "name": "Skeleton::getRootBone",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 303,
          "character": 0
        },
        "end": {
          "line": 305,
          "character": 1
        }
      },
      "preview": "Bone *Skeleton::getRootBone() {"
    },
    {
      "name": "Skeleton::findBone",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 307,
          "character": 0
        },
        "end": {
          "line": 314,
          "character": 1
        }
      },
      "preview": "Bone *Skeleton::findBone(const String &boneName) {"
    },
    {
      "name": "Skeleton::getSlots",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 316,
          "character": 0
        },
        "end": {
          "line": 318,
          "character": 1
        }
      },
      "preview": "Vector<Slot *> &Skeleton::getSlots() {"
    },
    {
      "name": "Skeleton::findSlot",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 320,
          "character": 0
        },
        "end": {
          "line": 327,
          "character": 1
        }
      },
      "preview": "Slot *Skeleton::findSlot(const String &slotName) {"
    },
    {
      "name": "Skeleton::getDrawOrder",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 329,
          "character": 0
        },
        "end": {
          "line": 331,
          "character": 1
        }
      },
      "preview": "Vector<Slot *> &Skeleton::getDrawOrder() {"
    },
    {
      "name": "Skeleton::getSkin",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 333,
          "character": 0
        },
        "end": {
          "line": 335,
          "character": 1
        }
      },
      "preview": "Skin *Skeleton::getSkin() {"
    },
    {
      "name": "Skeleton::setSkin",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 337,
          "character": 0
        },
        "end": {
          "line": 341,
          "character": 1
        }
      },
      "preview": "void Skeleton::setSkin(const String &skinName) {"
    },
    {
      "name": "Skeleton::setSkin",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 343,
          "character": 0
        },
        "end": {
          "line": 364,
          "character": 1
        }
      },
      "preview": "void Skeleton::setSkin(Skin *newSkin) {"
    },
    {
      "name": "Skeleton::getAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 366,
          "character": 0
        },
        "end": {
          "line": 370,
          "character": 1
        }
      },
      "preview": "Attachment *Skeleton::getAttachment(const String &slotName, const String &attachmentName) {"
    },
    {
      "name": "Skeleton::getAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 372,
          "character": 0
        },
        "end": {
          "line": 380,
          "character": 1
        }
      },
      "preview": "Attachment *Skeleton::getAttachment(int slotIndex, const String &attachmentName) {"
    },
    {
      "name": "Skeleton::setAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 382,
          "character": 0
        },
        "end": {
          "line": 392,
          "character": 1
        }
      },
      "preview": "void Skeleton::setAttachment(const String &slotName, const String &attachmentName) {"
    },
    {
      "name": "Skeleton::getConstraints",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 394,
          "character": 0
        },
        "end": {
          "line": 396,
          "character": 1
        }
      },
      "preview": "Vector<Constraint *> &Skeleton::getConstraints() {"
    },
    {
      "name": "Skeleton::getPhysicsConstraints",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 398,
          "character": 0
        },
        "end": {
          "line": 400,
          "character": 1
        }
      },
      "preview": "Vector<PhysicsConstraint *> &Skeleton::getPhysicsConstraints() {"
    },
    {
      "name": "Skeleton::getBounds",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 402,
          "character": 0
        },
        "end": {
          "line": 404,
          "character": 1
        }
      },
      "preview": "void Skeleton::getBounds(float &outX, float &outY, float &outWidth, float &outHeight, Vector<float> &outVertexBuffer) {"
    },
    {
      "name": "Skeleton::getBounds",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 406,
          "character": 0
        },
        "end": {
          "line": 468,
          "character": 1
        }
      },
      "preview": "void Skeleton::getBounds(float &outX, float &outY, float &outWidth, float &outHeight, Vector<float> &outVertexBuffer, SkeletonClipping *clipper) {"
    },
    {
      "name": "Skeleton::getColor",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 470,
          "character": 0
        },
        "end": {
          "line": 472,
          "character": 1
        }
      },
      "preview": "Color &Skeleton::getColor() {"
    },
    {
      "name": "Skeleton::setColor",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 474,
          "character": 0
        },
        "end": {
          "line": 476,
          "character": 1
        }
      },
      "preview": "void Skeleton::setColor(Color &color) {"
    },
    {
      "name": "Skeleton::setColor",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 478,
          "character": 0
        },
        "end": {
          "line": 480,
          "character": 1
        }
      },
      "preview": "void Skeleton::setColor(float r, float g, float b, float a) {"
    },
    {
      "name": "Skeleton::getScaleX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 482,
          "character": 0
        },
        "end": {
          "line": 484,
          "character": 1
        }
      },
      "preview": "float Skeleton::getScaleX() {"
    },
    {
      "name": "Skeleton::setScaleX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 486,
          "character": 0
        },
        "end": {
          "line": 488,
          "character": 1
        }
      },
      "preview": "void Skeleton::setScaleX(float inValue) {"
    },
    {
      "name": "Skeleton::getScaleY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 490,
          "character": 0
        },
        "end": {
          "line": 492,
          "character": 1
        }
      },
      "preview": "float Skeleton::getScaleY() {"
    },
    {
      "name": "Skeleton::setScaleY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 494,
          "character": 0
        },
        "end": {
          "line": 496,
          "character": 1
        }
      },
      "preview": "void Skeleton::setScaleY(float inValue) {"
    },
    {
      "name": "Skeleton::setScale",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 498,
          "character": 0
        },
        "end": {
          "line": 501,
          "character": 1
        }
      },
      "preview": "void Skeleton::setScale(float scaleX, float scaleY) {"
    },
    {
      "name": "Skeleton::getX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 503,
          "character": 0
        },
        "end": {
          "line": 505,
          "character": 1
        }
      },
      "preview": "float Skeleton::getX() {"
    },
    {
      "name": "Skeleton::setX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 507,
          "character": 0
        },
        "end": {
          "line": 509,
          "character": 1
        }
      },
      "preview": "void Skeleton::setX(float inValue) {"
    },
    {
      "name": "Skeleton::getY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 511,
          "character": 0
        },
        "end": {
          "line": 513,
          "character": 1
        }
      },
      "preview": "float Skeleton::getY() {"
    },
    {
      "name": "Skeleton::setY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 515,
          "character": 0
        },
        "end": {
          "line": 517,
          "character": 1
        }
      },
      "preview": "void Skeleton::setY(float inValue) {"
    },
    {
      "name": "Skeleton::setPosition",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 519,
          "character": 0
        },
        "end": {
          "line": 522,
          "character": 1
        }
      },
      "preview": "void Skeleton::setPosition(float x, float y) {"
    },
    {
      "name": "Skeleton::getWindX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 524,
          "character": 0
        },
        "end": {
          "line": 526,
          "character": 1
        }
      },
      "preview": "float Skeleton::getWindX() {"
    },
    {
      "name": "Skeleton::setWindX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 528,
          "character": 0
        },
        "end": {
          "line": 530,
          "character": 1
        }
      },
      "preview": "void Skeleton::setWindX(float windX) {"
    },
    {
      "name": "Skeleton::getWindY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 532,
          "character": 0
        },
        "end": {
          "line": 534,
          "character": 1
        }
      },
      "preview": "float Skeleton::getWindY() {"
    },
    {
      "name": "Skeleton::setWindY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 536,
          "character": 0
        },
        "end": {
          "line": 538,
          "character": 1
        }
      },
      "preview": "void Skeleton::setWindY(float windY) {"
    },
    {
      "name": "Skeleton::getGravityX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 540,
          "character": 0
        },
        "end": {
          "line": 542,
          "character": 1
        }
      },
      "preview": "float Skeleton::getGravityX() {"
    },
    {
      "name": "Skeleton::setGravityX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 544,
          "character": 0
        },
        "end": {
          "line": 546,
          "character": 1
        }
      },
      "preview": "void Skeleton::setGravityX(float gravityX) {"
    },
    {
      "name": "Skeleton::getGravityY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 548,
          "character": 0
        },
        "end": {
          "line": 550,
          "character": 1
        }
      },
      "preview": "float Skeleton::getGravityY() {"
    },
    {
      "name": "Skeleton::setGravityY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 552,
          "character": 0
        },
        "end": {
          "line": 554,
          "character": 1
        }
      },
      "preview": "void Skeleton::setGravityY(float gravityY) {"
    },
    {
      "name": "Skeleton::physicsTranslate",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 556,
          "character": 0
        },
        "end": {
          "line": 561,
          "character": 1
        }
      },
      "preview": "void Skeleton::physicsTranslate(float x, float y) {"
    },
    {
      "name": "Skeleton::physicsRotate",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 563,
          "character": 0
        },
        "end": {
          "line": 568,
          "character": 1
        }
      },
      "preview": "void Skeleton::physicsRotate(float x, float y, float degrees) {"
    },
    {
      "name": "Skeleton::getTime",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 570,
          "character": 0
        },
        "end": {
          "line": 572,
          "character": 1
        }
      },
      "preview": "float Skeleton::getTime() {"
    },
    {
      "name": "Skeleton::setTime",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 574,
          "character": 0
        },
        "end": {
          "line": 576,
          "character": 1
        }
      },
      "preview": "void Skeleton::setTime(float time) {"
    },
    {
      "name": "Skeleton::update",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skeleton.cpp",
      "range": {
        "start": {
          "line": 578,
          "character": 0
        },
        "end": {
          "line": 580,
          "character": 1
        }
      },
      "preview": "void Skeleton::update(float delta) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 76,
          "character": 0
        },
        "end": {
          "line": 76,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "SkeletonBinary::SkeletonBinary",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 78,
          "character": 0
        },
        "end": {
          "line": 81,
          "character": 1
        }
      },
      "preview": "SkeletonBinary::SkeletonBinary(Atlas *atlasArray) : _attachmentLoader("
    },
    {
      "name": "SkeletonBinary::SkeletonBinary",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 83,
          "character": 0
        },
        "end": {
          "line": 89,
          "character": 1
        }
      },
      "preview": "SkeletonBinary::SkeletonBinary(AttachmentLoader *attachmentLoader, bool ownsLoader) : _attachmentLoader("
    },
    {
      "name": "SkeletonBinary::~SkeletonBinary",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 91,
          "character": 0
        },
        "end": {
          "line": 96,
          "character": 1
        }
      },
      "preview": "SkeletonBinary::~SkeletonBinary() {"
    },
    {
      "name": "SkeletonBinary::readSkeletonData",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 98,
          "character": 0
        },
        "end": {
          "line": 399,
          "character": 1
        }
      },
      "preview": "SkeletonData *SkeletonBinary::readSkeletonData(const unsigned char *binary, const int length) {"
    },
    {
      "name": "SkeletonBinary::readSkeletonDataFile",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 401,
          "character": 0
        },
        "end": {
          "line": 412,
          "character": 1
        }
      },
      "preview": "SkeletonData *SkeletonBinary::readSkeletonDataFile(const String &path) {"
    },
    {
      "name": "SkeletonBinary::setError",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 414,
          "character": 0
        },
        "end": {
          "line": 421,
          "character": 1
        }
      },
      "preview": "void SkeletonBinary::setError(const char *value1, const char *value2) {"
    },
    {
      "name": "SkeletonBinary::readString",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 423,
          "character": 0
        },
        "end": {
          "line": 432,
          "character": 1
        }
      },
      "preview": "char *SkeletonBinary::readString(DataInput *input) {"
    },
    {
      "name": "SkeletonBinary::readStringRef",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 434,
          "character": 0
        },
        "end": {
          "line": 437,
          "character": 1
        }
      },
      "preview": "char *SkeletonBinary::readStringRef(DataInput *input, SkeletonData *skeletonData) {"
    },
    {
      "name": "SkeletonBinary::readFloat",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 439,
          "character": 0
        },
        "end": {
          "line": 446,
          "character": 1
        }
      },
      "preview": "float SkeletonBinary::readFloat(DataInput *input) {"
    },
    {
      "name": "SkeletonBinary::readByte",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 448,
          "character": 0
        },
        "end": {
          "line": 450,
          "character": 1
        }
      },
      "preview": "unsigned char SkeletonBinary::readByte(DataInput *input) {"
    },
    {
      "name": "SkeletonBinary::readSByte",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 452,
          "character": 0
        },
        "end": {
          "line": 454,
          "character": 1
        }
      },
      "preview": "signed char SkeletonBinary::readSByte(DataInput *input) {"
    },
    {
      "name": "SkeletonBinary::readBoolean",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 456,
          "character": 0
        },
        "end": {
          "line": 458,
          "character": 1
        }
      },
      "preview": "bool SkeletonBinary::readBoolean(DataInput *input) {"
    },
    {
      "name": "SkeletonBinary::readInt",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 460,
          "character": 0
        },
        "end": {
          "line": 469,
          "character": 1
        }
      },
      "preview": "int SkeletonBinary::readInt(DataInput *input) {"
    },
    {
      "name": "SkeletonBinary::readColor",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 471,
          "character": 0
        },
        "end": {
          "line": 476,
          "character": 1
        }
      },
      "preview": "void SkeletonBinary::readColor(DataInput *input, Color &color) {"
    },
    {
      "name": "SkeletonBinary::readVarint",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 478,
          "character": 0
        },
        "end": {
          "line": 496,
          "character": 1
        }
      },
      "preview": "int SkeletonBinary::readVarint(DataInput *input, bool optimizePositive) {"
    },
    {
      "name": "SkeletonBinary::readSkin",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 498,
          "character": 0
        },
        "end": {
          "line": 556,
          "character": 1
        }
      },
      "preview": "Skin *SkeletonBinary::readSkin(DataInput *input, bool defaultSkin, SkeletonData *skeletonData, bool nonessential) {"
    },
    {
      "name": "SkeletonBinary::readSequence",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 558,
          "character": 0
        },
        "end": {
          "line": 564,
          "character": 1
        }
      },
      "preview": "Sequence *SkeletonBinary::readSequence(DataInput *input) {"
    },
    {
      "name": "SkeletonBinary::readAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 566,
          "character": 0
        },
        "end": {
          "line": 753,
          "character": 1
        }
      },
      "preview": "Attachment *SkeletonBinary::readAttachment(DataInput *input, Skin *skin, int slotIndex, const String &attachmentName,"
    },
    {
      "name": "SkeletonBinary::readVertices",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 755,
          "character": 0
        },
        "end": {
          "line": 776,
          "character": 1
        }
      },
      "preview": "int SkeletonBinary::readVertices(DataInput *input, Vector<float> &vertices, Vector<int> &bones, bool weighted) {"
    },
    {
      "name": "SkeletonBinary::readFloatArray",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 778,
          "character": 0
        },
        "end": {
          "line": 791,
          "character": 1
        }
      },
      "preview": "void SkeletonBinary::readFloatArray(DataInput *input, int n, float scale, Vector<float> &array) {"
    },
    {
      "name": "SkeletonBinary::readShortArray",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 793,
          "character": 0
        },
        "end": {
          "line": 798,
          "character": 1
        }
      },
      "preview": "void SkeletonBinary::readShortArray(DataInput *input, Vector<unsigned short> &array, int n) {"
    },
    {
      "name": "SkeletonBinary::setBezier",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 800,
          "character": 0
        },
        "end": {
          "line": 808,
          "character": 1
        }
      },
      "preview": "void SkeletonBinary::setBezier(DataInput *input, CurveTimeline *timeline, int bezier, int frame, int value, float time1,"
    },
    {
      "name": "SkeletonBinary::readTimeline",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 810,
          "character": 0
        },
        "end": {
          "line": 829,
          "character": 1
        }
      },
      "preview": "void SkeletonBinary::readTimeline(DataInput *input, Vector<Timeline *> &timelines, CurveTimeline1 *timeline, float scale) {"
    },
    {
      "name": "SkeletonBinary::readTimeline2",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 831,
          "character": 0
        },
        "end": {
          "line": 854,
          "character": 1
        }
      },
      "preview": "void SkeletonBinary::readTimeline2(DataInput *input, Vector<Timeline *> &timelines, CurveTimeline2 *timeline, float scale) {"
    },
    {
      "name": "SkeletonBinary::readAnimation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBinary.cpp",
      "range": {
        "start": {
          "line": 856,
          "character": 0
        },
        "end": {
          "line": 1489,
          "character": 1
        }
      },
      "preview": "Animation *SkeletonBinary::readAnimation(const String &name, DataInput *input, SkeletonData *skeletonData) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 39,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "SkeletonBounds::SkeletonBounds",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 1
        }
      },
      "preview": "SkeletonBounds::SkeletonBounds() : _minX(0), _minY(0), _maxX(0), _maxY(0) {"
    },
    {
      "name": "SkeletonBounds::~SkeletonBounds",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 48,
          "character": 1
        }
      },
      "preview": "SkeletonBounds::~SkeletonBounds() {"
    },
    {
      "name": "SkeletonBounds::update",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 50,
          "character": 0
        },
        "end": {
          "line": 91,
          "character": 1
        }
      },
      "preview": "void SkeletonBounds::update(Skeleton &skeleton, bool updateAabb) {"
    },
    {
      "name": "SkeletonBounds::aabbContainsPoint",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 93,
          "character": 0
        },
        "end": {
          "line": 95,
          "character": 1
        }
      },
      "preview": "bool SkeletonBounds::aabbContainsPoint(float x, float y) {"
    },
    {
      "name": "SkeletonBounds::aabbIntersectsSegment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 97,
          "character": 0
        },
        "end": {
          "line": 118,
          "character": 1
        }
      },
      "preview": "bool SkeletonBounds::aabbIntersectsSegment(float x1, float y1, float x2, float y2) {"
    },
    {
      "name": "SkeletonBounds::aabbIntersectsSkeleton",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 120,
          "character": 0
        },
        "end": {
          "line": 122,
          "character": 1
        }
      },
      "preview": "bool SkeletonBounds::aabbIntersectsSkeleton(SkeletonBounds &bounds) {"
    },
    {
      "name": "SkeletonBounds::containsPoint",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 124,
          "character": 0
        },
        "end": {
          "line": 142,
          "character": 1
        }
      },
      "preview": "bool SkeletonBounds::containsPoint(spine::Polygon *polygon, float x, float y) {"
    },
    {
      "name": "SkeletonBounds::containsPoint",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 144,
          "character": 0
        },
        "end": {
          "line": 148,
          "character": 1
        }
      },
      "preview": "BoundingBoxAttachment *SkeletonBounds::containsPoint(float x, float y) {"
    },
    {
      "name": "SkeletonBounds::intersectsSegment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 150,
          "character": 0
        },
        "end": {
          "line": 154,
          "character": 1
        }
      },
      "preview": "BoundingBoxAttachment *SkeletonBounds::intersectsSegment(float x1, float y1, float x2, float y2) {"
    },
    {
      "name": "SkeletonBounds::intersectsSegment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 156,
          "character": 0
        },
        "end": {
          "line": 180,
          "character": 1
        }
      },
      "preview": "bool SkeletonBounds::intersectsSegment(spine::Polygon *polygon, float x1, float y1, float x2, float y2) {"
    },
    {
      "name": "SkeletonBounds::getPolygon",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 182,
          "character": 0
        },
        "end": {
          "line": 185,
          "character": 1
        }
      },
      "preview": "spine::Polygon *SkeletonBounds::getPolygon(BoundingBoxAttachment *attachment) {"
    },
    {
      "name": "SkeletonBounds::getBoundingBox",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 187,
          "character": 0
        },
        "end": {
          "line": 190,
          "character": 1
        }
      },
      "preview": "BoundingBoxAttachment *SkeletonBounds::getBoundingBox(Polygon *polygon) {"
    },
    {
      "name": "SkeletonBounds::getPolygons",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 192,
          "character": 0
        },
        "end": {
          "line": 194,
          "character": 1
        }
      },
      "preview": "Vector<spine::Polygon *> &SkeletonBounds::getPolygons() {"
    },
    {
      "name": "SkeletonBounds::getBoundingBoxes",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 196,
          "character": 0
        },
        "end": {
          "line": 198,
          "character": 1
        }
      },
      "preview": "Vector<BoundingBoxAttachment *> &SkeletonBounds::getBoundingBoxes() {"
    },
    {
      "name": "SkeletonBounds::getWidth",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 200,
          "character": 0
        },
        "end": {
          "line": 202,
          "character": 1
        }
      },
      "preview": "float SkeletonBounds::getWidth() {"
    },
    {
      "name": "SkeletonBounds::getHeight",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 204,
          "character": 0
        },
        "end": {
          "line": 206,
          "character": 1
        }
      },
      "preview": "float SkeletonBounds::getHeight() {"
    },
    {
      "name": "SkeletonBounds::aabbCompute",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonBounds.cpp",
      "range": {
        "start": {
          "line": 208,
          "character": 0
        },
        "end": {
          "line": 230,
          "character": 1
        }
      },
      "preview": "void SkeletonBounds::aabbCompute() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonClipping.cpp",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 34,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "SkeletonClipping::SkeletonClipping",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonClipping.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 1
        }
      },
      "preview": "SkeletonClipping::SkeletonClipping() : _clipAttachment(NULL) {"
    },
    {
      "name": "SkeletonClipping::clipStart",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonClipping.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 68,
          "character": 1
        }
      },
      "preview": "size_t SkeletonClipping::clipStart(Skeleton &skeleton, Slot &slot, ClippingAttachment *clip) {"
    },
    {
      "name": "SkeletonClipping::clipEnd",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonClipping.cpp",
      "range": {
        "start": {
          "line": 70,
          "character": 0
        },
        "end": {
          "line": 74,
          "character": 1
        }
      },
      "preview": "void SkeletonClipping::clipEnd(Slot &slot) {"
    },
    {
      "name": "SkeletonClipping::clipEnd",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonClipping.cpp",
      "range": {
        "start": {
          "line": 76,
          "character": 0
        },
        "end": {
          "line": 85,
          "character": 1
        }
      },
      "preview": "void SkeletonClipping::clipEnd() {"
    },
    {
      "name": "SkeletonClipping::clipTriangles",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonClipping.cpp",
      "range": {
        "start": {
          "line": 87,
          "character": 0
        },
        "end": {
          "line": 159,
          "character": 1
        }
      },
      "preview": "bool SkeletonClipping::clipTriangles(float *vertices, unsigned short *triangles,"
    },
    {
      "name": "SkeletonClipping::clipTriangles",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonClipping.cpp",
      "range": {
        "start": {
          "line": 161,
          "character": 0
        },
        "end": {
          "line": 164,
          "character": 1
        }
      },
      "preview": "bool SkeletonClipping::clipTriangles(Vector<float> &vertices, Vector<unsigned short> &triangles, Vector<float> &uvs,"
    },
    {
      "name": "SkeletonClipping::clipTriangles",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonClipping.cpp",
      "range": {
        "start": {
          "line": 166,
          "character": 0
        },
        "end": {
          "line": 257,
          "character": 1
        }
      },
      "preview": "bool SkeletonClipping::clipTriangles(float *vertices, unsigned short *triangles,"
    },
    {
      "name": "SkeletonClipping::isClipping",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonClipping.cpp",
      "range": {
        "start": {
          "line": 259,
          "character": 0
        },
        "end": {
          "line": 261,
          "character": 1
        }
      },
      "preview": "bool SkeletonClipping::isClipping() {"
    },
    {
      "name": "SkeletonClipping::getClippedVertices",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonClipping.cpp",
      "range": {
        "start": {
          "line": 263,
          "character": 0
        },
        "end": {
          "line": 265,
          "character": 1
        }
      },
      "preview": "Vector<float> &SkeletonClipping::getClippedVertices() {"
    },
    {
      "name": "SkeletonClipping::getClippedTriangles",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonClipping.cpp",
      "range": {
        "start": {
          "line": 267,
          "character": 0
        },
        "end": {
          "line": 269,
          "character": 1
        }
      },
      "preview": "Vector<unsigned short> &SkeletonClipping::getClippedTriangles() {"
    },
    {
      "name": "SkeletonClipping::getClippedUVs",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonClipping.cpp",
      "range": {
        "start": {
          "line": 271,
          "character": 0
        },
        "end": {
          "line": 273,
          "character": 1
        }
      },
      "preview": "Vector<float> &SkeletonClipping::getClippedUVs() {"
    },
    {
      "name": "SkeletonClipping::clip",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonClipping.cpp",
      "range": {
        "start": {
          "line": 275,
          "character": 0
        },
        "end": {
          "line": 375,
          "character": 1
        }
      },
      "preview": "bool SkeletonClipping::clip(float x1, float y1, float x2, float y2, float x3, float y3, Vector<float> *clippingArea,"
    },
    {
      "name": "SkeletonClipping::makeClockwise",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonClipping.cpp",
      "range": {
        "start": {
          "line": 377,
          "character": 0
        },
        "end": {
          "line": 401,
          "character": 1
        }
      },
      "preview": "void SkeletonClipping::makeClockwise(Vector<float> &polygon) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 44,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "SkeletonData::SkeletonData",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 46,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "SkeletonData::SkeletonData() : _name(),"
    },
    {
      "name": "SkeletonData::~SkeletonData",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 60,
          "character": 0
        },
        "end": {
          "line": 78,
          "character": 1
        }
      },
      "preview": "SkeletonData::~SkeletonData() {"
    },
    {
      "name": "SkeletonData::findBone",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 80,
          "character": 0
        },
        "end": {
          "line": 82,
          "character": 1
        }
      },
      "preview": "BoneData *SkeletonData::findBone(const String &boneName) {"
    },
    {
      "name": "SkeletonData::findSlot",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 84,
          "character": 0
        },
        "end": {
          "line": 86,
          "character": 1
        }
      },
      "preview": "SlotData *SkeletonData::findSlot(const String &slotName) {"
    },
    {
      "name": "SkeletonData::findSkin",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 88,
          "character": 0
        },
        "end": {
          "line": 90,
          "character": 1
        }
      },
      "preview": "Skin *SkeletonData::findSkin(const String &skinName) {"
    },
    {
      "name": "SkeletonData::findEvent",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 92,
          "character": 0
        },
        "end": {
          "line": 94,
          "character": 1
        }
      },
      "preview": "spine::EventData *SkeletonData::findEvent(const String &eventDataName) {"
    },
    {
      "name": "SkeletonData::findAnimation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 96,
          "character": 0
        },
        "end": {
          "line": 98,
          "character": 1
        }
      },
      "preview": "Animation *SkeletonData::findAnimation(const String &animationName) {"
    },
    {
      "name": "SkeletonData::findIkConstraint",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 100,
          "character": 0
        },
        "end": {
          "line": 102,
          "character": 1
        }
      },
      "preview": "IkConstraintData *SkeletonData::findIkConstraint(const String &constraintName) {"
    },
    {
      "name": "SkeletonData::findTransformConstraint",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 104,
          "character": 0
        },
        "end": {
          "line": 106,
          "character": 1
        }
      },
      "preview": "TransformConstraintData *SkeletonData::findTransformConstraint(const String &constraintName) {"
    },
    {
      "name": "SkeletonData::findPathConstraint",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 108,
          "character": 0
        },
        "end": {
          "line": 110,
          "character": 1
        }
      },
      "preview": "PathConstraintData *SkeletonData::findPathConstraint(const String &constraintName) {"
    },
    {
      "name": "SkeletonData::findPhysicsConstraint",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 112,
          "character": 0
        },
        "end": {
          "line": 114,
          "character": 1
        }
      },
      "preview": "PhysicsConstraintData *SkeletonData::findPhysicsConstraint(const String &constraintName) {"
    },
    {
      "name": "SkeletonData::getName",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 116,
          "character": 0
        },
        "end": {
          "line": 118,
          "character": 1
        }
      },
      "preview": "const String &SkeletonData::getName() {"
    },
    {
      "name": "SkeletonData::setName",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 120,
          "character": 0
        },
        "end": {
          "line": 122,
          "character": 1
        }
      },
      "preview": "void SkeletonData::setName(const String &inValue) {"
    },
    {
      "name": "SkeletonData::getBones",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 124,
          "character": 0
        },
        "end": {
          "line": 126,
          "character": 1
        }
      },
      "preview": "Vector<BoneData *> &SkeletonData::getBones() {"
    },
    {
      "name": "SkeletonData::getSlots",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 128,
          "character": 0
        },
        "end": {
          "line": 130,
          "character": 1
        }
      },
      "preview": "Vector<SlotData *> &SkeletonData::getSlots() {"
    },
    {
      "name": "SkeletonData::getSkins",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 132,
          "character": 0
        },
        "end": {
          "line": 134,
          "character": 1
        }
      },
      "preview": "Vector<Skin *> &SkeletonData::getSkins() {"
    },
    {
      "name": "SkeletonData::getDefaultSkin",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 136,
          "character": 0
        },
        "end": {
          "line": 138,
          "character": 1
        }
      },
      "preview": "Skin *SkeletonData::getDefaultSkin() {"
    },
    {
      "name": "SkeletonData::setDefaultSkin",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 140,
          "character": 0
        },
        "end": {
          "line": 142,
          "character": 1
        }
      },
      "preview": "void SkeletonData::setDefaultSkin(Skin *inValue) {"
    },
    {
      "name": "SkeletonData::getEvents",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 144,
          "character": 0
        },
        "end": {
          "line": 146,
          "character": 1
        }
      },
      "preview": "Vector<spine::EventData *> &SkeletonData::getEvents() {"
    },
    {
      "name": "SkeletonData::getAnimations",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 148,
          "character": 0
        },
        "end": {
          "line": 150,
          "character": 1
        }
      },
      "preview": "Vector<Animation *> &SkeletonData::getAnimations() {"
    },
    {
      "name": "SkeletonData::getIkConstraints",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 152,
          "character": 0
        },
        "end": {
          "line": 154,
          "character": 1
        }
      },
      "preview": "Vector<IkConstraintData *> &SkeletonData::getIkConstraints() {"
    },
    {
      "name": "SkeletonData::getTransformConstraints",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 156,
          "character": 0
        },
        "end": {
          "line": 158,
          "character": 1
        }
      },
      "preview": "Vector<TransformConstraintData *> &SkeletonData::getTransformConstraints() {"
    },
    {
      "name": "SkeletonData::getPathConstraints",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 160,
          "character": 0
        },
        "end": {
          "line": 162,
          "character": 1
        }
      },
      "preview": "Vector<PathConstraintData *> &SkeletonData::getPathConstraints() {"
    },
    {
      "name": "SkeletonData::getPhysicsConstraints",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 164,
          "character": 0
        },
        "end": {
          "line": 166,
          "character": 1
        }
      },
      "preview": "Vector<PhysicsConstraintData *> &SkeletonData::getPhysicsConstraints() {"
    },
    {
      "name": "SkeletonData::getX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 168,
          "character": 0
        },
        "end": {
          "line": 170,
          "character": 1
        }
      },
      "preview": "float SkeletonData::getX() {"
    },
    {
      "name": "SkeletonData::setX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 172,
          "character": 0
        },
        "end": {
          "line": 174,
          "character": 1
        }
      },
      "preview": "void SkeletonData::setX(float inValue) {"
    },
    {
      "name": "SkeletonData::getY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 176,
          "character": 0
        },
        "end": {
          "line": 178,
          "character": 1
        }
      },
      "preview": "float SkeletonData::getY() {"
    },
    {
      "name": "SkeletonData::setY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 180,
          "character": 0
        },
        "end": {
          "line": 182,
          "character": 1
        }
      },
      "preview": "void SkeletonData::setY(float inValue) {"
    },
    {
      "name": "SkeletonData::getWidth",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 184,
          "character": 0
        },
        "end": {
          "line": 186,
          "character": 1
        }
      },
      "preview": "float SkeletonData::getWidth() {"
    },
    {
      "name": "SkeletonData::setWidth",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 188,
          "character": 0
        },
        "end": {
          "line": 190,
          "character": 1
        }
      },
      "preview": "void SkeletonData::setWidth(float inValue) {"
    },
    {
      "name": "SkeletonData::getHeight",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 192,
          "character": 0
        },
        "end": {
          "line": 194,
          "character": 1
        }
      },
      "preview": "float SkeletonData::getHeight() {"
    },
    {
      "name": "SkeletonData::setHeight",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 196,
          "character": 0
        },
        "end": {
          "line": 198,
          "character": 1
        }
      },
      "preview": "void SkeletonData::setHeight(float inValue) {"
    },
    {
      "name": "SkeletonData::getReferenceScale",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 200,
          "character": 0
        },
        "end": {
          "line": 202,
          "character": 1
        }
      },
      "preview": "float SkeletonData::getReferenceScale() {"
    },
    {
      "name": "SkeletonData::setReferenceScale",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 204,
          "character": 0
        },
        "end": {
          "line": 206,
          "character": 1
        }
      },
      "preview": "void SkeletonData::setReferenceScale(float inValue) {"
    },
    {
      "name": "SkeletonData::getVersion",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 208,
          "character": 0
        },
        "end": {
          "line": 210,
          "character": 1
        }
      },
      "preview": "const String &SkeletonData::getVersion() {"
    },
    {
      "name": "SkeletonData::setVersion",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 212,
          "character": 0
        },
        "end": {
          "line": 214,
          "character": 1
        }
      },
      "preview": "void SkeletonData::setVersion(const String &inValue) {"
    },
    {
      "name": "SkeletonData::getHash",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 216,
          "character": 0
        },
        "end": {
          "line": 218,
          "character": 1
        }
      },
      "preview": "const String &SkeletonData::getHash() {"
    },
    {
      "name": "SkeletonData::setHash",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 220,
          "character": 0
        },
        "end": {
          "line": 222,
          "character": 1
        }
      },
      "preview": "void SkeletonData::setHash(const String &inValue) {"
    },
    {
      "name": "SkeletonData::getImagesPath",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 224,
          "character": 0
        },
        "end": {
          "line": 226,
          "character": 1
        }
      },
      "preview": "const String &SkeletonData::getImagesPath() {"
    },
    {
      "name": "SkeletonData::setImagesPath",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 228,
          "character": 0
        },
        "end": {
          "line": 230,
          "character": 1
        }
      },
      "preview": "void SkeletonData::setImagesPath(const String &inValue) {"
    },
    {
      "name": "SkeletonData::getAudioPath",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 233,
          "character": 0
        },
        "end": {
          "line": 235,
          "character": 1
        }
      },
      "preview": "const String &SkeletonData::getAudioPath() {"
    },
    {
      "name": "SkeletonData::setAudioPath",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 237,
          "character": 0
        },
        "end": {
          "line": 239,
          "character": 1
        }
      },
      "preview": "void SkeletonData::setAudioPath(const String &inValue) {"
    },
    {
      "name": "SkeletonData::getFps",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 241,
          "character": 0
        },
        "end": {
          "line": 243,
          "character": 1
        }
      },
      "preview": "float SkeletonData::getFps() {"
    },
    {
      "name": "SkeletonData::setFps",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 245,
          "character": 0
        },
        "end": {
          "line": 247,
          "character": 1
        }
      },
      "preview": "void SkeletonData::setFps(float inValue) {"
    },
    {
      "name": "SkeletonData::getConstraints",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonData.cpp",
      "range": {
        "start": {
          "line": 249,
          "character": 0
        },
        "end": {
          "line": 265,
          "character": 1
        }
      },
      "preview": "Vector<ConstraintData *> &SkeletonData::getConstraints() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonJson.cpp",
      "range": {
        "start": {
          "line": 76,
          "character": 0
        },
        "end": {
          "line": 76,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "toColor",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonJson.cpp",
      "range": {
        "start": {
          "line": 78,
          "character": 0
        },
        "end": {
          "line": 94,
          "character": 1
        }
      },
      "preview": "static float toColor(const char *value, size_t index) {"
    },
    {
      "name": "toColor",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonJson.cpp",
      "range": {
        "start": {
          "line": 96,
          "character": 0
        },
        "end": {
          "line": 101,
          "character": 1
        }
      },
      "preview": "static void toColor(Color &color, const char *value, bool hasAlpha) {"
    },
    {
      "name": "SkeletonJson::SkeletonJson",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonJson.cpp",
      "range": {
        "start": {
          "line": 103,
          "character": 0
        },
        "end": {
          "line": 104,
          "character": 44
        }
      },
      "preview": "SkeletonJson::SkeletonJson(Atlas *atlas) : _attachmentLoader(new (__FILE__, __LINE__) AtlasAttachmentLoader(atlas)),"
    },
    {
      "name": "SkeletonJson::SkeletonJson",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonJson.cpp",
      "range": {
        "start": {
          "line": 106,
          "character": 0
        },
        "end": {
          "line": 110,
          "character": 1
        }
      },
      "preview": "SkeletonJson::SkeletonJson(AttachmentLoader *attachmentLoader, bool ownsLoader) : _attachmentLoader(attachmentLoader),"
    },
    {
      "name": "SkeletonJson::~SkeletonJson",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonJson.cpp",
      "range": {
        "start": {
          "line": 112,
          "character": 0
        },
        "end": {
          "line": 116,
          "character": 1
        }
      },
      "preview": "SkeletonJson::~SkeletonJson() {"
    },
    {
      "name": "SkeletonJson::readSkeletonDataFile",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonJson.cpp",
      "range": {
        "start": {
          "line": 118,
          "character": 0
        },
        "end": {
          "line": 132,
          "character": 1
        }
      },
      "preview": "SkeletonData *SkeletonJson::readSkeletonDataFile(const String &path) {"
    },
    {
      "name": "SkeletonJson::readSkeletonData",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonJson.cpp",
      "range": {
        "start": {
          "line": 134,
          "character": 0
        },
        "end": {
          "line": 853,
          "character": 1
        }
      },
      "preview": "SkeletonData *SkeletonJson::readSkeletonData(const char *json) {"
    },
    {
      "name": "SkeletonJson::readSequence",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonJson.cpp",
      "range": {
        "start": {
          "line": 855,
          "character": 0
        },
        "end": {
          "line": 862,
          "character": 1
        }
      },
      "preview": "Sequence *SkeletonJson::readSequence(Json *item) {"
    },
    {
      "name": "SkeletonJson::setBezier",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonJson.cpp",
      "range": {
        "start": {
          "line": 864,
          "character": 0
        },
        "end": {
          "line": 868,
          "character": 1
        }
      },
      "preview": "void SkeletonJson::setBezier(CurveTimeline *timeline, int frame, int value, int bezier, float time1, float value1, float cx1,"
    },
    {
      "name": "SkeletonJson::readCurve",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonJson.cpp",
      "range": {
        "start": {
          "line": 870,
          "character": 0
        },
        "end": {
          "line": 887,
          "character": 1
        }
      },
      "preview": "int SkeletonJson::readCurve(Json *curve, CurveTimeline *timeline, int bezier, int frame, int value, float time1,"
    },
    {
      "name": "SkeletonJson::readTimeline",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonJson.cpp",
      "range": {
        "start": {
          "line": 889,
          "character": 0
        },
        "end": {
          "line": 907,
          "character": 1
        }
      },
      "preview": "Timeline *SkeletonJson::readTimeline(Json *keyMap, CurveTimeline1 *timeline, float defaultValue, float scale) {"
    },
    {
      "name": "SkeletonJson::readTimeline",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonJson.cpp",
      "range": {
        "start": {
          "line": 909,
          "character": 0
        },
        "end": {
          "line": 934,
          "character": 1
        }
      },
      "preview": "Timeline *SkeletonJson::readTimeline(Json *keyMap, CurveTimeline2 *timeline, const char *name1, const char *name2,"
    },
    {
      "name": "SkeletonJson::findSlotIndex",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonJson.cpp",
      "range": {
        "start": {
          "line": 936,
          "character": 0
        },
        "end": {
          "line": 943,
          "character": 1
        }
      },
      "preview": "int SkeletonJson::findSlotIndex(SkeletonData *skeletonData, const String &slotName, Vector<Timeline *> timelines) {"
    },
    {
      "name": "SkeletonJson::readAnimation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonJson.cpp",
      "range": {
        "start": {
          "line": 945,
          "character": 0
        },
        "end": {
          "line": 1568,
          "character": 1
        }
      },
      "preview": "Animation *SkeletonJson::readAnimation(Json *root, SkeletonData *skeletonData) {"
    },
    {
      "name": "SkeletonJson::readVertices",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonJson.cpp",
      "range": {
        "start": {
          "line": 1570,
          "character": 0
        },
        "end": {
          "line": 1611,
          "character": 1
        }
      },
      "preview": "void SkeletonJson::readVertices(Json *attachmentMap, VertexAttachment *attachment, size_t verticesLength) {"
    },
    {
      "name": "SkeletonJson::setError",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonJson.cpp",
      "range": {
        "start": {
          "line": 1613,
          "character": 0
        },
        "end": {
          "line": 1616,
          "character": 1
        }
      },
      "preview": "void SkeletonJson::setError(Json *root, const String &value1, const String &value2) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonRenderer.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 38,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "SkeletonRenderer::SkeletonRenderer",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonRenderer.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 47,
          "character": 1
        }
      },
      "preview": "SkeletonRenderer::SkeletonRenderer() : _allocator(4096), _worldVertices(), _quadIndices(), _clipping(), _renderCommands() {"
    },
    {
      "name": "SkeletonRenderer::~SkeletonRenderer",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonRenderer.cpp",
      "range": {
        "start": {
          "line": 49,
          "character": 0
        },
        "end": {
          "line": 50,
          "character": 1
        }
      },
      "preview": "SkeletonRenderer::~SkeletonRenderer() {"
    },
    {
      "name": "createRenderCommand",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonRenderer.cpp",
      "range": {
        "start": {
          "line": 52,
          "character": 0
        },
        "end": {
          "line": 65,
          "character": 1
        }
      },
      "preview": "static RenderCommand *createRenderCommand(BlockAllocator &allocator, int numVertices, int32_t numIndices, BlendMode blendMode, void *texture) {"
    },
    {
      "name": "batchSubCommands",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonRenderer.cpp",
      "range": {
        "start": {
          "line": 67,
          "character": 0
        },
        "end": {
          "line": 91,
          "character": 1
        }
      },
      "preview": "static RenderCommand *batchSubCommands(BlockAllocator &allocator, Vector<RenderCommand *> &commands, int first, int last, int numVertices, int numIndices) {"
    },
    {
      "name": "batchCommands",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonRenderer.cpp",
      "range": {
        "start": {
          "line": 93,
          "character": 0
        },
        "end": {
          "line": 136,
          "character": 1
        }
      },
      "preview": "static RenderCommand *batchCommands(BlockAllocator &allocator, Vector<RenderCommand *> &commands) {"
    },
    {
      "name": "SkeletonRenderer::render",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SkeletonRenderer.cpp",
      "range": {
        "start": {
          "line": 138,
          "character": 0
        },
        "end": {
          "line": 245,
          "character": 1
        }
      },
      "preview": "RenderCommand *SkeletonRenderer::render(Skeleton &skeleton) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "Skin::AttachmentMap::AttachmentMap",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 1
        }
      },
      "preview": "Skin::AttachmentMap::AttachmentMap() {"
    },
    {
      "name": "disposeAttachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 45,
          "character": 0
        },
        "end": {
          "line": 49,
          "character": 1
        }
      },
      "preview": "static void disposeAttachment(Attachment *attachment) {"
    },
    {
      "name": "Skin::AttachmentMap::put",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 51,
          "character": 0
        },
        "end": {
          "line": 63,
          "character": 1
        }
      },
      "preview": "void Skin::AttachmentMap::put(size_t slotIndex, const String &attachmentName, Attachment *attachment) {"
    },
    {
      "name": "Skin::AttachmentMap::get",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 65,
          "character": 0
        },
        "end": {
          "line": 69,
          "character": 1
        }
      },
      "preview": "Attachment *Skin::AttachmentMap::get(size_t slotIndex, const String &attachmentName) {"
    },
    {
      "name": "Skin::AttachmentMap::remove",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 71,
          "character": 0
        },
        "end": {
          "line": 78,
          "character": 1
        }
      },
      "preview": "void Skin::AttachmentMap::remove(size_t slotIndex, const String &attachmentName) {"
    },
    {
      "name": "Skin::AttachmentMap::findInBucket",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 80,
          "character": 0
        },
        "end": {
          "line": 84,
          "character": 1
        }
      },
      "preview": "int Skin::AttachmentMap::findInBucket(Vector<Entry> &bucket, const String &attachmentName) {"
    },
    {
      "name": "Skin::AttachmentMap::getEntries",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 86,
          "character": 0
        },
        "end": {
          "line": 88,
          "character": 1
        }
      },
      "preview": "Skin::AttachmentMap::Entries Skin::AttachmentMap::getEntries() {"
    },
    {
      "name": "Skin::Skin",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 90,
          "character": 0
        },
        "end": {
          "line": 92,
          "character": 1
        }
      },
      "preview": "Skin::Skin(const String &name) : _name(name), _attachments(), _color(0.99607843f, 0.61960787f, 0.30980393f, 1) {"
    },
    {
      "name": "Skin::~Skin",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 94,
          "character": 0
        },
        "end": {
          "line": 100,
          "character": 1
        }
      },
      "preview": "Skin::~Skin() {"
    },
    {
      "name": "Skin::setAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 102,
          "character": 0
        },
        "end": {
          "line": 105,
          "character": 1
        }
      },
      "preview": "void Skin::setAttachment(size_t slotIndex, const String &name, Attachment *attachment) {"
    },
    {
      "name": "Skin::getAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 107,
          "character": 0
        },
        "end": {
          "line": 109,
          "character": 1
        }
      },
      "preview": "Attachment *Skin::getAttachment(size_t slotIndex, const String &name) {"
    },
    {
      "name": "Skin::removeAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 111,
          "character": 0
        },
        "end": {
          "line": 113,
          "character": 1
        }
      },
      "preview": "void Skin::removeAttachment(size_t slotIndex, const String &name) {"
    },
    {
      "name": "Skin::findNamesForSlot",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 115,
          "character": 0
        },
        "end": {
          "line": 123,
          "character": 1
        }
      },
      "preview": "void Skin::findNamesForSlot(size_t slotIndex, Vector<String> &names) {"
    },
    {
      "name": "Skin::findAttachmentsForSlot",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 125,
          "character": 0
        },
        "end": {
          "line": 131,
          "character": 1
        }
      },
      "preview": "void Skin::findAttachmentsForSlot(size_t slotIndex, Vector<Attachment *> &attachments) {"
    },
    {
      "name": "Skin::getName",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 133,
          "character": 0
        },
        "end": {
          "line": 135,
          "character": 1
        }
      },
      "preview": "const String &Skin::getName() {"
    },
    {
      "name": "Skin::getAttachments",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 137,
          "character": 0
        },
        "end": {
          "line": 139,
          "character": 1
        }
      },
      "preview": "Skin::AttachmentMap::Entries Skin::getAttachments() {"
    },
    {
      "name": "Skin::attachAll",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 141,
          "character": 0
        },
        "end": {
          "line": 154,
          "character": 1
        }
      },
      "preview": "void Skin::attachAll(Skeleton &skeleton, Skin &oldSkin) {"
    },
    {
      "name": "Skin::addSkin",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 156,
          "character": 0
        },
        "end": {
          "line": 168,
          "character": 1
        }
      },
      "preview": "void Skin::addSkin(Skin *other) {"
    },
    {
      "name": "Skin::copySkin",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 170,
          "character": 0
        },
        "end": {
          "line": 186,
          "character": 1
        }
      },
      "preview": "void Skin::copySkin(Skin *other) {"
    },
    {
      "name": "Skin::getConstraints",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 188,
          "character": 0
        },
        "end": {
          "line": 190,
          "character": 1
        }
      },
      "preview": "Vector<ConstraintData *> &Skin::getConstraints() {"
    },
    {
      "name": "Skin::getBones",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Skin.cpp",
      "range": {
        "start": {
          "line": 192,
          "character": 0
        },
        "end": {
          "line": 194,
          "character": 1
        }
      },
      "preview": "Vector<BoneData *> &Skin::getBones() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Slider.cpp",
      "range": {
        "start": {
          "line": 46,
          "character": 0
        },
        "end": {
          "line": 46,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Slider.cpp",
      "range": {
        "start": {
          "line": 48,
          "character": 0
        },
        "end": {
          "line": 48,
          "character": 29
        }
      },
      "preview": "RTTI_IMPL(Slider, Constraint)",
      "children": [
        {
          "name": "Slider::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Slider.cpp",
          "range": {
            "start": {
              "line": 48,
              "character": 0
            },
            "end": {
              "line": 48,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(Slider, Constraint)"
        },
        {
          "name": "Slider::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Slider.cpp",
          "range": {
            "start": {
              "line": 48,
              "character": 0
            },
            "end": {
              "line": 48,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(Slider, Constraint)"
        }
      ]
    },
    {
      "name": "Slider::_offsets",
      "kind": "property",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Slider.cpp",
      "range": {
        "start": {
          "line": 50,
          "character": 0
        },
        "end": {
          "line": 50,
          "character": 25
        }
      },
      "preview": "float Slider::_offsets[6];"
    },
    {
      "name": "Slider::Slider",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Slider.cpp",
      "range": {
        "start": {
          "line": 52,
          "character": 0
        },
        "end": {
          "line": 56,
          "character": 1
        }
      },
      "preview": "Slider::Slider(SliderData &data, Skeleton &skeleton) : ConstraintGeneric<Slider, SliderData, SliderPose>(data), _bone(NULL) {"
    },
    {
      "name": "Slider::copy",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Slider.cpp",
      "range": {
        "start": {
          "line": 58,
          "character": 0
        },
        "end": {
          "line": 62,
          "character": 1
        }
      },
      "preview": "Slider *Slider::copy(Skeleton &skeleton) {"
    },
    {
      "name": "Slider::update",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Slider.cpp",
      "range": {
        "start": {
          "line": 64,
          "character": 0
        },
        "end": {
          "line": 87,
          "character": 1
        }
      },
      "preview": "void Slider::update(Skeleton &skeleton, Physics physics) {"
    },
    {
      "name": "Slider::sort",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Slider.cpp",
      "range": {
        "start": {
          "line": 89,
          "character": 0
        },
        "end": {
          "line": 125,
          "character": 1
        }
      },
      "preview": "void Slider::sort(Skeleton &skeleton) {"
    },
    {
      "name": "Slider::isSourceActive",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Slider.cpp",
      "range": {
        "start": {
          "line": 127,
          "character": 0
        },
        "end": {
          "line": 129,
          "character": 1
        }
      },
      "preview": "bool Slider::isSourceActive() {"
    },
    {
      "name": "Slider::getBone",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Slider.cpp",
      "range": {
        "start": {
          "line": 131,
          "character": 0
        },
        "end": {
          "line": 133,
          "character": 1
        }
      },
      "preview": "Bone *Slider::getBone() {"
    },
    {
      "name": "Slider::setBone",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Slider.cpp",
      "range": {
        "start": {
          "line": 135,
          "character": 0
        },
        "end": {
          "line": 137,
          "character": 1
        }
      },
      "preview": "void Slider::setBone(Bone *bone) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 35,
          "character": 37
        }
      },
      "preview": "RTTI_IMPL(SliderData, ConstraintData)",
      "children": [
        {
          "name": "SliderData::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 35,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(SliderData, ConstraintData)"
        },
        {
          "name": "SliderData::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 35,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(SliderData, ConstraintData)"
        }
      ]
    },
    {
      "name": "SliderData::SliderData",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 46,
          "character": 1
        }
      },
      "preview": "SliderData::SliderData(const String &name) : ConstraintDataGeneric<Slider, SliderPose>(name),"
    },
    {
      "name": "SliderData::create",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 48,
          "character": 0
        },
        "end": {
          "line": 50,
          "character": 1
        }
      },
      "preview": "Constraint *SliderData::create(Skeleton &skeleton) {"
    },
    {
      "name": "SliderData::getAnimation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 52,
          "character": 0
        },
        "end": {
          "line": 54,
          "character": 1
        }
      },
      "preview": "Animation *SliderData::getAnimation() {"
    },
    {
      "name": "SliderData::setAnimation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 56,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "void SliderData::setAnimation(Animation *animation) {"
    },
    {
      "name": "SliderData::getAdditive",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 60,
          "character": 0
        },
        "end": {
          "line": 62,
          "character": 1
        }
      },
      "preview": "bool SliderData::getAdditive() {"
    },
    {
      "name": "SliderData::setAdditive",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 64,
          "character": 0
        },
        "end": {
          "line": 66,
          "character": 1
        }
      },
      "preview": "void SliderData::setAdditive(bool additive) {"
    },
    {
      "name": "SliderData::getLoop",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 68,
          "character": 0
        },
        "end": {
          "line": 70,
          "character": 1
        }
      },
      "preview": "bool SliderData::getLoop() {"
    },
    {
      "name": "SliderData::setLoop",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 72,
          "character": 0
        },
        "end": {
          "line": 74,
          "character": 1
        }
      },
      "preview": "void SliderData::setLoop(bool loop) {"
    },
    {
      "name": "SliderData::getBone",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 76,
          "character": 0
        },
        "end": {
          "line": 78,
          "character": 1
        }
      },
      "preview": "BoneData *SliderData::getBone() {"
    },
    {
      "name": "SliderData::setBone",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 80,
          "character": 0
        },
        "end": {
          "line": 82,
          "character": 1
        }
      },
      "preview": "void SliderData::setBone(BoneData *bone) {"
    },
    {
      "name": "SliderData::getProperty",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 84,
          "character": 0
        },
        "end": {
          "line": 86,
          "character": 1
        }
      },
      "preview": "FromProperty *SliderData::getProperty() {"
    },
    {
      "name": "SliderData::setProperty",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 88,
          "character": 0
        },
        "end": {
          "line": 90,
          "character": 1
        }
      },
      "preview": "void SliderData::setProperty(FromProperty *property) {"
    },
    {
      "name": "SliderData::getScale",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 92,
          "character": 0
        },
        "end": {
          "line": 94,
          "character": 1
        }
      },
      "preview": "float SliderData::getScale() {"
    },
    {
      "name": "SliderData::setScale",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 96,
          "character": 0
        },
        "end": {
          "line": 98,
          "character": 1
        }
      },
      "preview": "void SliderData::setScale(float scale) {"
    },
    {
      "name": "SliderData::getOffset",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 100,
          "character": 0
        },
        "end": {
          "line": 102,
          "character": 1
        }
      },
      "preview": "float SliderData::getOffset() {"
    },
    {
      "name": "SliderData::setOffset",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 104,
          "character": 0
        },
        "end": {
          "line": 106,
          "character": 1
        }
      },
      "preview": "void SliderData::setOffset(float offset) {"
    },
    {
      "name": "SliderData::getLocal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 108,
          "character": 0
        },
        "end": {
          "line": 110,
          "character": 1
        }
      },
      "preview": "bool SliderData::getLocal() {"
    },
    {
      "name": "SliderData::setLocal",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderData.cpp",
      "range": {
        "start": {
          "line": 112,
          "character": 0
        },
        "end": {
          "line": 114,
          "character": 1
        }
      },
      "preview": "void SliderData::setLocal(bool local) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderMixTimeline.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderMixTimeline.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 49
        }
      },
      "preview": "RTTI_IMPL(SliderMixTimeline, ConstraintTimeline1)",
      "children": [
        {
          "name": "SliderMixTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderMixTimeline.cpp",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(SliderMixTimeline, ConstraintTimeline1)"
        },
        {
          "name": "SliderMixTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderMixTimeline.cpp",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(SliderMixTimeline, ConstraintTimeline1)"
        }
      ]
    },
    {
      "name": "SliderMixTimeline::SliderMixTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderMixTimeline.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "SliderMixTimeline::SliderMixTimeline(size_t frameCount, size_t bezierCount,"
    },
    {
      "name": "SliderMixTimeline::~SliderMixTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderMixTimeline.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 54,
          "character": 1
        }
      },
      "preview": "SliderMixTimeline::~SliderMixTimeline() {"
    },
    {
      "name": "SliderMixTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderMixTimeline.cpp",
      "range": {
        "start": {
          "line": 56,
          "character": 0
        },
        "end": {
          "line": 68,
          "character": 1
        }
      },
      "preview": "void SliderMixTimeline::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents,"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderPose.cpp",
      "range": {
        "start": {
          "line": 31,
          "character": 0
        },
        "end": {
          "line": 31,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "SliderPose::SliderPose",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderPose.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 34,
          "character": 1
        }
      },
      "preview": "SliderPose::SliderPose() : _time(0), _mix(0) {"
    },
    {
      "name": "SliderPose::~SliderPose",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderPose.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 37,
          "character": 1
        }
      },
      "preview": "SliderPose::~SliderPose() {"
    },
    {
      "name": "SliderPose::set",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderPose.cpp",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 1
        }
      },
      "preview": "void SliderPose::set(SliderPose &pose) {"
    },
    {
      "name": "SliderPose::getTime",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderPose.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 46,
          "character": 1
        }
      },
      "preview": "float SliderPose::getTime() {"
    },
    {
      "name": "SliderPose::setTime",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderPose.cpp",
      "range": {
        "start": {
          "line": 48,
          "character": 0
        },
        "end": {
          "line": 50,
          "character": 1
        }
      },
      "preview": "void SliderPose::setTime(float time) {"
    },
    {
      "name": "SliderPose::getMix",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderPose.cpp",
      "range": {
        "start": {
          "line": 52,
          "character": 0
        },
        "end": {
          "line": 54,
          "character": 1
        }
      },
      "preview": "float SliderPose::getMix() {"
    },
    {
      "name": "SliderPose::setMix",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderPose.cpp",
      "range": {
        "start": {
          "line": 56,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "void SliderPose::setMix(float mix) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderTimeline.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderTimeline.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 46
        }
      },
      "preview": "RTTI_IMPL(SliderTimeline, ConstraintTimeline1)",
      "children": [
        {
          "name": "SliderTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderTimeline.cpp",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(SliderTimeline, ConstraintTimeline1)"
        },
        {
          "name": "SliderTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderTimeline.cpp",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(SliderTimeline, ConstraintTimeline1)"
        }
      ]
    },
    {
      "name": "SliderTimeline::SliderTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderTimeline.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "SliderTimeline::SliderTimeline(size_t frameCount, size_t bezierCount,"
    },
    {
      "name": "SliderTimeline::~SliderTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderTimeline.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 54,
          "character": 1
        }
      },
      "preview": "SliderTimeline::~SliderTimeline() {"
    },
    {
      "name": "SliderTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SliderTimeline.cpp",
      "range": {
        "start": {
          "line": 56,
          "character": 0
        },
        "end": {
          "line": 68,
          "character": 1
        }
      },
      "preview": "void SliderTimeline::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents,"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Slot.cpp",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 37,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "Slot::Slot",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Slot.cpp",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 49,
          "character": 1
        }
      },
      "preview": "Slot::Slot(SlotData &data, Skeleton &skeleton) : PosedGeneric<SlotData, SlotPose, SlotPose>(data),"
    },
    {
      "name": "Slot::getBone",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Slot.cpp",
      "range": {
        "start": {
          "line": 52,
          "character": 0
        },
        "end": {
          "line": 54,
          "character": 1
        }
      },
      "preview": "Bone &Slot::getBone() {"
    },
    {
      "name": "Slot::setupPose",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Slot.cpp",
      "range": {
        "start": {
          "line": 56,
          "character": 0
        },
        "end": {
          "line": 66,
          "character": 1
        }
      },
      "preview": "void Slot::setupPose() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotCurveTimeline.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 36,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL_MULTI",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotCurveTimeline.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 38,
          "character": 63
        }
      },
      "preview": "RTTI_IMPL_MULTI(SlotCurveTimeline, CurveTimeline, SlotTimeline)",
      "children": [
        {
          "name": "SlotCurveTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotCurveTimeline.cpp",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(SlotCurveTimeline, CurveTimeline, SlotTimeline)"
        },
        {
          "name": "SlotCurveTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotCurveTimeline.cpp",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(SlotCurveTimeline, CurveTimeline, SlotTimeline)"
        }
      ]
    },
    {
      "name": "SlotCurveTimeline::SlotCurveTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotCurveTimeline.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 1
        }
      },
      "preview": "SlotCurveTimeline::SlotCurveTimeline(size_t frameCount, size_t frameEntries, size_t bezierCount, int slotIndex)"
    },
    {
      "name": "SlotCurveTimeline::~SlotCurveTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotCurveTimeline.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 1
        }
      },
      "preview": "SlotCurveTimeline::~SlotCurveTimeline() {"
    },
    {
      "name": "SlotCurveTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotCurveTimeline.cpp",
      "range": {
        "start": {
          "line": 47,
          "character": 0
        },
        "end": {
          "line": 55,
          "character": 1
        }
      },
      "preview": "void SlotCurveTimeline::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents, float alpha,"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotData.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 35,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "SlotData::SlotData",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotData.cpp",
      "range": {
        "start": {
          "line": 37,
          "character": 0
        },
        "end": {
          "line": 44,
          "character": 1
        }
      },
      "preview": "SlotData::SlotData(int index, const String &name, BoneData &boneData) : PosedDataGeneric<SlotPose>(name),"
    },
    {
      "name": "SlotData::getIndex",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotData.cpp",
      "range": {
        "start": {
          "line": 46,
          "character": 0
        },
        "end": {
          "line": 48,
          "character": 1
        }
      },
      "preview": "int SlotData::getIndex() {"
    },
    {
      "name": "SlotData::getBoneData",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotData.cpp",
      "range": {
        "start": {
          "line": 50,
          "character": 0
        },
        "end": {
          "line": 52,
          "character": 1
        }
      },
      "preview": "BoneData &SlotData::getBoneData() {"
    },
    {
      "name": "SlotData::setAttachmentName",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotData.cpp",
      "range": {
        "start": {
          "line": 54,
          "character": 0
        },
        "end": {
          "line": 56,
          "character": 1
        }
      },
      "preview": "void SlotData::setAttachmentName(const String &attachmentName) {"
    },
    {
      "name": "SlotData::getAttachmentName",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotData.cpp",
      "range": {
        "start": {
          "line": 58,
          "character": 0
        },
        "end": {
          "line": 60,
          "character": 1
        }
      },
      "preview": "const String &SlotData::getAttachmentName() {"
    },
    {
      "name": "SlotData::getBlendMode",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotData.cpp",
      "range": {
        "start": {
          "line": 62,
          "character": 0
        },
        "end": {
          "line": 64,
          "character": 1
        }
      },
      "preview": "BlendMode SlotData::getBlendMode() {"
    },
    {
      "name": "SlotData::setBlendMode",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotData.cpp",
      "range": {
        "start": {
          "line": 66,
          "character": 0
        },
        "end": {
          "line": 68,
          "character": 1
        }
      },
      "preview": "void SlotData::setBlendMode(BlendMode blendMode) {"
    },
    {
      "name": "SlotData::getVisible",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotData.cpp",
      "range": {
        "start": {
          "line": 70,
          "character": 0
        },
        "end": {
          "line": 72,
          "character": 1
        }
      },
      "preview": "bool SlotData::getVisible() {"
    },
    {
      "name": "SlotData::setVisible",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotData.cpp",
      "range": {
        "start": {
          "line": 74,
          "character": 0
        },
        "end": {
          "line": 76,
          "character": 1
        }
      },
      "preview": "void SlotData::setVisible(bool visible) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotPose.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "SlotPose::SlotPose",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotPose.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 36,
          "character": 1
        }
      },
      "preview": "SlotPose::SlotPose() : _color(1, 1, 1, 1), _darkColor(0, 0, 0, 0), _hasDarkColor(false), _attachment(nullptr), _sequenceIndex(-1) {"
    },
    {
      "name": "SlotPose::~SlotPose",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotPose.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 39,
          "character": 1
        }
      },
      "preview": "SlotPose::~SlotPose() {"
    },
    {
      "name": "SlotPose::set",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotPose.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 49,
          "character": 1
        }
      },
      "preview": "void SlotPose::set(SlotPose &pose) {"
    },
    {
      "name": "SlotPose::getColor",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotPose.cpp",
      "range": {
        "start": {
          "line": 51,
          "character": 0
        },
        "end": {
          "line": 53,
          "character": 1
        }
      },
      "preview": "Color &SlotPose::getColor() {"
    },
    {
      "name": "SlotPose::getDarkColor",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotPose.cpp",
      "range": {
        "start": {
          "line": 55,
          "character": 0
        },
        "end": {
          "line": 57,
          "character": 1
        }
      },
      "preview": "Color &SlotPose::getDarkColor() {"
    },
    {
      "name": "SlotPose::hasDarkColor",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotPose.cpp",
      "range": {
        "start": {
          "line": 59,
          "character": 0
        },
        "end": {
          "line": 61,
          "character": 1
        }
      },
      "preview": "bool SlotPose::hasDarkColor() {"
    },
    {
      "name": "SlotPose::getAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotPose.cpp",
      "range": {
        "start": {
          "line": 63,
          "character": 0
        },
        "end": {
          "line": 65,
          "character": 1
        }
      },
      "preview": "Attachment *SlotPose::getAttachment() {"
    },
    {
      "name": "SlotPose::setAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotPose.cpp",
      "range": {
        "start": {
          "line": 67,
          "character": 0
        },
        "end": {
          "line": 81,
          "character": 1
        }
      },
      "preview": "void SlotPose::setAttachment(Attachment *attachment) {"
    },
    {
      "name": "SlotPose::getSequenceIndex",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotPose.cpp",
      "range": {
        "start": {
          "line": 83,
          "character": 0
        },
        "end": {
          "line": 85,
          "character": 1
        }
      },
      "preview": "int SlotPose::getSequenceIndex() {"
    },
    {
      "name": "SlotPose::setSequenceIndex",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotPose.cpp",
      "range": {
        "start": {
          "line": 87,
          "character": 0
        },
        "end": {
          "line": 89,
          "character": 1
        }
      },
      "preview": "void SlotPose::setSequenceIndex(int sequenceIndex) {"
    },
    {
      "name": "SlotPose::getDeform",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotPose.cpp",
      "range": {
        "start": {
          "line": 91,
          "character": 0
        },
        "end": {
          "line": 93,
          "character": 1
        }
      },
      "preview": "Vector<float> &SlotPose::getDeform() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotTimeline.cpp",
      "range": {
        "start": {
          "line": 31,
          "character": 0
        },
        "end": {
          "line": 31,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL_NOPARENT",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotTimeline.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 32
        }
      },
      "preview": "RTTI_IMPL_NOPARENT(SlotTimeline)",
      "children": [
        {
          "name": "SlotTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotTimeline.cpp",
          "range": {
            "start": {
              "line": 33,
              "character": 0
            },
            "end": {
              "line": 33,
              "character": 18
            }
          },
          "preview": "RTTI_IMPL_NOPARENT(SlotTimeline)"
        },
        {
          "name": "SlotTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotTimeline.cpp",
          "range": {
            "start": {
              "line": 33,
              "character": 0
            },
            "end": {
              "line": 33,
              "character": 18
            }
          },
          "preview": "RTTI_IMPL_NOPARENT(SlotTimeline)"
        }
      ]
    },
    {
      "name": "SlotTimeline::SlotTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotTimeline.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 36,
          "character": 1
        }
      },
      "preview": "SlotTimeline::SlotTimeline(int slotIndex) : _slotIndex(slotIndex) {"
    },
    {
      "name": "SlotTimeline::~SlotTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotTimeline.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 39,
          "character": 1
        }
      },
      "preview": "SlotTimeline::~SlotTimeline() {"
    },
    {
      "name": "SlotTimeline::getSlotIndex",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotTimeline.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 43,
          "character": 1
        }
      },
      "preview": "int SlotTimeline::getSlotIndex() {"
    },
    {
      "name": "SlotTimeline::setSlotIndex",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SlotTimeline.cpp",
      "range": {
        "start": {
          "line": 45,
          "character": 0
        },
        "end": {
          "line": 47,
          "character": 1
        }
      },
      "preview": "void SlotTimeline::setSlotIndex(int inValue) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SpineObject.cpp",
      "range": {
        "start": {
          "line": 32,
          "character": 0
        },
        "end": {
          "line": 32,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "SpineObject::operator new",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SpineObject.cpp",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 36,
          "character": 1
        }
      },
      "preview": "void *SpineObject::operator new(size_t sz) {"
    },
    {
      "name": "SpineObject::operator new",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SpineObject.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 1
        }
      },
      "preview": "void *SpineObject::operator new(size_t sz, const char *file, int line) {"
    },
    {
      "name": "SpineObject::operator new",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SpineObject.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 1
        }
      },
      "preview": "void *SpineObject::operator new(size_t sz, void *ptr) {"
    },
    {
      "name": "SpineObject::operator delete",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SpineObject.cpp",
      "range": {
        "start": {
          "line": 47,
          "character": 0
        },
        "end": {
          "line": 49,
          "character": 1
        }
      },
      "preview": "void SpineObject::operator delete(void *p, const char *file, int line) {"
    },
    {
      "name": "SpineObject::operator delete",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SpineObject.cpp",
      "range": {
        "start": {
          "line": 51,
          "character": 0
        },
        "end": {
          "line": 54,
          "character": 1
        }
      },
      "preview": "void SpineObject::operator delete(void *p, void *mem) {"
    },
    {
      "name": "SpineObject::operator delete",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SpineObject.cpp",
      "range": {
        "start": {
          "line": 56,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "void SpineObject::operator delete(void *p) {"
    },
    {
      "name": "SpineObject::~SpineObject",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/SpineObject.cpp",
      "range": {
        "start": {
          "line": 60,
          "character": 0
        },
        "end": {
          "line": 62,
          "character": 1
        }
      },
      "preview": "SpineObject::~SpineObject() {"
    },
    {
      "name": "spine",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TextureLoader.cpp",
      "range": {
        "start": {
          "line": 31,
          "character": 0
        },
        "end": {
          "line": 37,
          "character": 1
        }
      },
      "preview": "namespace spine {",
      "children": [
        {
          "name": "TextureLoader::TextureLoader",
          "kind": "constructor",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TextureLoader.cpp",
          "range": {
            "start": {
              "line": 32,
              "character": 0
            },
            "end": {
              "line": 33,
              "character": 2
            }
          },
          "preview": "TextureLoader::TextureLoader() {"
        },
        {
          "name": "TextureLoader::~TextureLoader",
          "kind": "constructor",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TextureLoader.cpp",
          "range": {
            "start": {
              "line": 35,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 2
            }
          },
          "preview": "TextureLoader::~TextureLoader() {"
        }
      ]
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Timeline.cpp",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 34,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL_NOPARENT",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Timeline.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 36,
          "character": 28
        }
      },
      "preview": "RTTI_IMPL_NOPARENT(Timeline)",
      "children": [
        {
          "name": "Timeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Timeline.cpp",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 18
            }
          },
          "preview": "RTTI_IMPL_NOPARENT(Timeline)"
        },
        {
          "name": "Timeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Timeline.cpp",
          "range": {
            "start": {
              "line": 36,
              "character": 0
            },
            "end": {
              "line": 36,
              "character": 18
            }
          },
          "preview": "RTTI_IMPL_NOPARENT(Timeline)"
        }
      ]
    },
    {
      "name": "Timeline::Timeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Timeline.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 1
        }
      },
      "preview": "Timeline::Timeline(size_t frameCount, size_t frameEntries)"
    },
    {
      "name": "Timeline::~Timeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Timeline.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 44,
          "character": 1
        }
      },
      "preview": "Timeline::~Timeline() {"
    },
    {
      "name": "Timeline::getPropertyIds",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Timeline.cpp",
      "range": {
        "start": {
          "line": 46,
          "character": 0
        },
        "end": {
          "line": 48,
          "character": 1
        }
      },
      "preview": "Vector<PropertyId> &Timeline::getPropertyIds() {"
    },
    {
      "name": "Timeline::setPropertyIds",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Timeline.cpp",
      "range": {
        "start": {
          "line": 50,
          "character": 0
        },
        "end": {
          "line": 56,
          "character": 1
        }
      },
      "preview": "void Timeline::setPropertyIds(PropertyId propertyIds[], size_t propertyIdsCount) {"
    },
    {
      "name": "Timeline::getFrameCount",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Timeline.cpp",
      "range": {
        "start": {
          "line": 58,
          "character": 0
        },
        "end": {
          "line": 60,
          "character": 1
        }
      },
      "preview": "size_t Timeline::getFrameCount() {"
    },
    {
      "name": "Timeline::getFrames",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Timeline.cpp",
      "range": {
        "start": {
          "line": 62,
          "character": 0
        },
        "end": {
          "line": 64,
          "character": 1
        }
      },
      "preview": "Vector<float> &Timeline::getFrames() {"
    },
    {
      "name": "Timeline::getFrameEntries",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Timeline.cpp",
      "range": {
        "start": {
          "line": 66,
          "character": 0
        },
        "end": {
          "line": 68,
          "character": 1
        }
      },
      "preview": "size_t Timeline::getFrameEntries() {"
    },
    {
      "name": "Timeline::getDuration",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Timeline.cpp",
      "range": {
        "start": {
          "line": 70,
          "character": 0
        },
        "end": {
          "line": 72,
          "character": 1
        }
      },
      "preview": "float Timeline::getDuration() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraint.cpp",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 39,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraint.cpp",
      "range": {
        "start": {
          "line": 41,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 42
        }
      },
      "preview": "RTTI_IMPL(TransformConstraint, Constraint)",
      "children": [
        {
          "name": "TransformConstraint::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraint.cpp",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(TransformConstraint, Constraint)"
        },
        {
          "name": "TransformConstraint::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraint.cpp",
          "range": {
            "start": {
              "line": 41,
              "character": 0
            },
            "end": {
              "line": 41,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(TransformConstraint, Constraint)"
        }
      ]
    },
    {
      "name": "TransformConstraint::TransformConstraint",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraint.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 52,
          "character": 1
        }
      },
      "preview": "TransformConstraint::TransformConstraint(TransformConstraintData &data, Skeleton &skeleton) : ConstraintGeneric<TransformConstraint, TransformConstraintData, TransformConstraintPose>(data) {"
    },
    {
      "name": "TransformConstraint::copy",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraint.cpp",
      "range": {
        "start": {
          "line": 54,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "TransformConstraint *TransformConstraint::copy(Skeleton &skeleton) {"
    },
    {
      "name": "TransformConstraint::update",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraint.cpp",
      "range": {
        "start": {
          "line": 61,
          "character": 0
        },
        "end": {
          "line": 103,
          "character": 1
        }
      },
      "preview": "void TransformConstraint::update(Skeleton &skeleton, Physics physics) {",
      "documentation": "Applies the constraint to the constrained bones."
    },
    {
      "name": "TransformConstraint::sort",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraint.cpp",
      "range": {
        "start": {
          "line": 105,
          "character": 0
        },
        "end": {
          "line": 122,
          "character": 1
        }
      },
      "preview": "void TransformConstraint::sort(Skeleton &skeleton) {"
    },
    {
      "name": "TransformConstraint::isSourceActive",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraint.cpp",
      "range": {
        "start": {
          "line": 124,
          "character": 0
        },
        "end": {
          "line": 126,
          "character": 1
        }
      },
      "preview": "bool TransformConstraint::isSourceActive() {"
    },
    {
      "name": "TransformConstraint::getBones",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraint.cpp",
      "range": {
        "start": {
          "line": 129,
          "character": 0
        },
        "end": {
          "line": 131,
          "character": 1
        }
      },
      "preview": "Vector<BonePose *> &TransformConstraint::getBones() {",
      "documentation": "The bones that will be modified by this transform constraint."
    },
    {
      "name": "TransformConstraint::getSource",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraint.cpp",
      "range": {
        "start": {
          "line": 134,
          "character": 0
        },
        "end": {
          "line": 136,
          "character": 1
        }
      },
      "preview": "Bone *TransformConstraint::getSource() {",
      "documentation": "The bone whose world transform will be copied to the constrained bones."
    },
    {
      "name": "TransformConstraint::setSource",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraint.cpp",
      "range": {
        "start": {
          "line": 138,
          "character": 0
        },
        "end": {
          "line": 140,
          "character": 1
        }
      },
      "preview": "void TransformConstraint::setSource(Bone *source) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 38,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 50
        }
      },
      "preview": "RTTI_IMPL(TransformConstraintData, ConstraintData)",
      "children": [
        {
          "name": "TransformConstraintData::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 40,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(TransformConstraintData, ConstraintData)"
        },
        {
          "name": "TransformConstraintData::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 40,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(TransformConstraintData, ConstraintData)"
        }
      ]
    },
    {
      "name": "TransformConstraintData::TransformConstraintData",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "TransformConstraintData::TransformConstraintData(const String &name) : ConstraintDataGeneric<TransformConstraint, TransformConstraintPose>(name),"
    },
    {
      "name": "TransformConstraintData::getBones",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 55,
          "character": 1
        }
      },
      "preview": "Vector<BoneData *> &TransformConstraintData::getBones() {"
    },
    {
      "name": "TransformConstraintData::getSource",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 57,
          "character": 0
        },
        "end": {
          "line": 59,
          "character": 1
        }
      },
      "preview": "BoneData *TransformConstraintData::getSource() {"
    },
    {
      "name": "TransformConstraintData::setSource",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 61,
          "character": 0
        },
        "end": {
          "line": 63,
          "character": 1
        }
      },
      "preview": "void TransformConstraintData::setSource(BoneData *source) {"
    },
    {
      "name": "TransformConstraintData::getOffsetRotation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 65,
          "character": 0
        },
        "end": {
          "line": 67,
          "character": 1
        }
      },
      "preview": "float TransformConstraintData::getOffsetRotation() {"
    },
    {
      "name": "TransformConstraintData::setOffsetRotation",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 69,
          "character": 0
        },
        "end": {
          "line": 71,
          "character": 1
        }
      },
      "preview": "void TransformConstraintData::setOffsetRotation(float offsetRotation) {"
    },
    {
      "name": "TransformConstraintData::getOffsetX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 73,
          "character": 0
        },
        "end": {
          "line": 75,
          "character": 1
        }
      },
      "preview": "float TransformConstraintData::getOffsetX() {"
    },
    {
      "name": "TransformConstraintData::setOffsetX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 77,
          "character": 0
        },
        "end": {
          "line": 79,
          "character": 1
        }
      },
      "preview": "void TransformConstraintData::setOffsetX(float offsetX) {"
    },
    {
      "name": "TransformConstraintData::getOffsetY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 81,
          "character": 0
        },
        "end": {
          "line": 83,
          "character": 1
        }
      },
      "preview": "float TransformConstraintData::getOffsetY() {"
    },
    {
      "name": "TransformConstraintData::setOffsetY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 85,
          "character": 0
        },
        "end": {
          "line": 87,
          "character": 1
        }
      },
      "preview": "void TransformConstraintData::setOffsetY(float offsetY) {"
    },
    {
      "name": "TransformConstraintData::getOffsetScaleX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 89,
          "character": 0
        },
        "end": {
          "line": 91,
          "character": 1
        }
      },
      "preview": "float TransformConstraintData::getOffsetScaleX() {"
    },
    {
      "name": "TransformConstraintData::setOffsetScaleX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 93,
          "character": 0
        },
        "end": {
          "line": 95,
          "character": 1
        }
      },
      "preview": "void TransformConstraintData::setOffsetScaleX(float offsetScaleX) {"
    },
    {
      "name": "TransformConstraintData::getOffsetScaleY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 97,
          "character": 0
        },
        "end": {
          "line": 99,
          "character": 1
        }
      },
      "preview": "float TransformConstraintData::getOffsetScaleY() {"
    },
    {
      "name": "TransformConstraintData::setOffsetScaleY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 101,
          "character": 0
        },
        "end": {
          "line": 103,
          "character": 1
        }
      },
      "preview": "void TransformConstraintData::setOffsetScaleY(float offsetScaleY) {"
    },
    {
      "name": "TransformConstraintData::getOffsetShearY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 105,
          "character": 0
        },
        "end": {
          "line": 107,
          "character": 1
        }
      },
      "preview": "float TransformConstraintData::getOffsetShearY() {"
    },
    {
      "name": "TransformConstraintData::setOffsetShearY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 109,
          "character": 0
        },
        "end": {
          "line": 111,
          "character": 1
        }
      },
      "preview": "void TransformConstraintData::setOffsetShearY(float offsetShearY) {"
    },
    {
      "name": "TransformConstraintData::getLocalSource",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 113,
          "character": 0
        },
        "end": {
          "line": 115,
          "character": 1
        }
      },
      "preview": "bool TransformConstraintData::getLocalSource() {"
    },
    {
      "name": "TransformConstraintData::setLocalSource",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 117,
          "character": 0
        },
        "end": {
          "line": 119,
          "character": 1
        }
      },
      "preview": "void TransformConstraintData::setLocalSource(bool localSource) {"
    },
    {
      "name": "TransformConstraintData::getLocalTarget",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 121,
          "character": 0
        },
        "end": {
          "line": 123,
          "character": 1
        }
      },
      "preview": "bool TransformConstraintData::getLocalTarget() {"
    },
    {
      "name": "TransformConstraintData::setLocalTarget",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 125,
          "character": 0
        },
        "end": {
          "line": 127,
          "character": 1
        }
      },
      "preview": "void TransformConstraintData::setLocalTarget(bool localTarget) {"
    },
    {
      "name": "TransformConstraintData::getAdditive",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 129,
          "character": 0
        },
        "end": {
          "line": 131,
          "character": 1
        }
      },
      "preview": "bool TransformConstraintData::getAdditive() {"
    },
    {
      "name": "TransformConstraintData::setAdditive",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 133,
          "character": 0
        },
        "end": {
          "line": 135,
          "character": 1
        }
      },
      "preview": "void TransformConstraintData::setAdditive(bool additive) {"
    },
    {
      "name": "TransformConstraintData::getClamp",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 137,
          "character": 0
        },
        "end": {
          "line": 139,
          "character": 1
        }
      },
      "preview": "bool TransformConstraintData::getClamp() {"
    },
    {
      "name": "TransformConstraintData::setClamp",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 141,
          "character": 0
        },
        "end": {
          "line": 143,
          "character": 1
        }
      },
      "preview": "void TransformConstraintData::setClamp(bool clamp) {"
    },
    {
      "name": "TransformConstraintData::getProperties",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 145,
          "character": 0
        },
        "end": {
          "line": 147,
          "character": 1
        }
      },
      "preview": "Vector<FromProperty *> &TransformConstraintData::getProperties() {"
    },
    {
      "name": "FromProperty::FromProperty",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 149,
          "character": 0
        },
        "end": {
          "line": 150,
          "character": 1
        }
      },
      "preview": "FromProperty::FromProperty() : SpineObject(), offset(0) {"
    },
    {
      "name": "FromProperty::~FromProperty",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 152,
          "character": 0
        },
        "end": {
          "line": 153,
          "character": 1
        }
      },
      "preview": "FromProperty::~FromProperty() {"
    },
    {
      "name": "ToProperty::ToProperty",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 155,
          "character": 0
        },
        "end": {
          "line": 156,
          "character": 1
        }
      },
      "preview": "ToProperty::ToProperty() : offset(0), max(0), scale(1) {"
    },
    {
      "name": "ToProperty::~ToProperty",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 158,
          "character": 0
        },
        "end": {
          "line": 159,
          "character": 1
        }
      },
      "preview": "ToProperty::~ToProperty() {"
    },
    {
      "name": "FromRotate::value",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 161,
          "character": 0
        },
        "end": {
          "line": 167,
          "character": 1
        }
      },
      "preview": "float FromRotate::value(Skeleton &skeleton, BonePose &source, bool local, float *offsets) {"
    },
    {
      "name": "ToRotate::mix",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 169,
          "character": 0
        },
        "end": {
          "line": 171,
          "character": 1
        }
      },
      "preview": "float ToRotate::mix(TransformConstraintPose &pose) {"
    },
    {
      "name": "ToRotate::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 173,
          "character": 0
        },
        "end": {
          "line": 192,
          "character": 1
        }
      },
      "preview": "void ToRotate::apply(Skeleton &skeleton, TransformConstraintPose &pose, BonePose &bone, float value, bool local, bool additive) {"
    },
    {
      "name": "FromX::value",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 194,
          "character": 0
        },
        "end": {
          "line": 196,
          "character": 1
        }
      },
      "preview": "float FromX::value(Skeleton &skeleton, BonePose &source, bool local, float *offsets) {"
    },
    {
      "name": "ToX::mix",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 198,
          "character": 0
        },
        "end": {
          "line": 200,
          "character": 1
        }
      },
      "preview": "float ToX::mix(TransformConstraintPose &pose) {"
    },
    {
      "name": "ToX::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 202,
          "character": 0
        },
        "end": {
          "line": 210,
          "character": 1
        }
      },
      "preview": "void ToX::apply(Skeleton &skeleton, TransformConstraintPose &pose, BonePose &bone, float value, bool local, bool additive) {"
    },
    {
      "name": "FromY::value",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 212,
          "character": 0
        },
        "end": {
          "line": 214,
          "character": 1
        }
      },
      "preview": "float FromY::value(Skeleton &skeleton, BonePose &source, bool local, float *offsets) {"
    },
    {
      "name": "ToY::mix",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 216,
          "character": 0
        },
        "end": {
          "line": 218,
          "character": 1
        }
      },
      "preview": "float ToY::mix(TransformConstraintPose &pose) {"
    },
    {
      "name": "ToY::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 220,
          "character": 0
        },
        "end": {
          "line": 228,
          "character": 1
        }
      },
      "preview": "void ToY::apply(Skeleton &skeleton, TransformConstraintPose &pose, BonePose &bone, float value, bool local, bool additive) {"
    },
    {
      "name": "FromScaleX::value",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 230,
          "character": 0
        },
        "end": {
          "line": 234,
          "character": 1
        }
      },
      "preview": "float FromScaleX::value(Skeleton &skeleton, BonePose &source, bool local, float *offsets) {"
    },
    {
      "name": "ToScaleX::mix",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 236,
          "character": 0
        },
        "end": {
          "line": 238,
          "character": 1
        }
      },
      "preview": "float ToScaleX::mix(TransformConstraintPose &pose) {"
    },
    {
      "name": "ToScaleX::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 240,
          "character": 0
        },
        "end": {
          "line": 257,
          "character": 1
        }
      },
      "preview": "void ToScaleX::apply(Skeleton &skeleton, TransformConstraintPose &pose, BonePose &bone, float value, bool local, bool additive) {"
    },
    {
      "name": "FromScaleY::value",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 259,
          "character": 0
        },
        "end": {
          "line": 263,
          "character": 1
        }
      },
      "preview": "float FromScaleY::value(Skeleton &skeleton, BonePose &source, bool local, float *offsets) {"
    },
    {
      "name": "ToScaleY::mix",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 265,
          "character": 0
        },
        "end": {
          "line": 267,
          "character": 1
        }
      },
      "preview": "float ToScaleY::mix(TransformConstraintPose &pose) {"
    },
    {
      "name": "ToScaleY::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 269,
          "character": 0
        },
        "end": {
          "line": 286,
          "character": 1
        }
      },
      "preview": "void ToScaleY::apply(Skeleton &skeleton, TransformConstraintPose &pose, BonePose &bone, float value, bool local, bool additive) {"
    },
    {
      "name": "FromShearY::value",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 288,
          "character": 0
        },
        "end": {
          "line": 292,
          "character": 1
        }
      },
      "preview": "float FromShearY::value(Skeleton &skeleton, BonePose &source, bool local, float *offsets) {"
    },
    {
      "name": "ToShearY::mix",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 294,
          "character": 0
        },
        "end": {
          "line": 296,
          "character": 1
        }
      },
      "preview": "float ToShearY::mix(TransformConstraintPose &pose) {"
    },
    {
      "name": "ToShearY::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 298,
          "character": 0
        },
        "end": {
          "line": 319,
          "character": 1
        }
      },
      "preview": "void ToShearY::apply(Skeleton &skeleton, TransformConstraintPose &pose, BonePose &bone, float value, bool local, bool additive) {"
    },
    {
      "name": "TransformConstraintData::~TransformConstraintData",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 321,
          "character": 0
        },
        "end": {
          "line": 332,
          "character": 1
        }
      },
      "preview": "TransformConstraintData::~TransformConstraintData() {"
    },
    {
      "name": "TransformConstraintData::create",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintData.cpp",
      "range": {
        "start": {
          "line": 334,
          "character": 0
        },
        "end": {
          "line": 336,
          "character": 1
        }
      },
      "preview": "Constraint* TransformConstraintData::create(Skeleton& skeleton) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintPose.cpp",
      "range": {
        "start": {
          "line": 31,
          "character": 0
        },
        "end": {
          "line": 31,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "TransformConstraintPose::TransformConstraintPose",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintPose.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 34,
          "character": 1
        }
      },
      "preview": "TransformConstraintPose::TransformConstraintPose() : _mixRotate(0), _mixX(0), _mixY(0), _mixScaleX(0), _mixScaleY(0), _mixShearY(0) {"
    },
    {
      "name": "TransformConstraintPose::~TransformConstraintPose",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintPose.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 37,
          "character": 1
        }
      },
      "preview": "TransformConstraintPose::~TransformConstraintPose() {"
    },
    {
      "name": "TransformConstraintPose::set",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintPose.cpp",
      "range": {
        "start": {
          "line": 39,
          "character": 0
        },
        "end": {
          "line": 46,
          "character": 1
        }
      },
      "preview": "void TransformConstraintPose::set(TransformConstraintPose &pose) {"
    },
    {
      "name": "TransformConstraintPose::getMixRotate",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintPose.cpp",
      "range": {
        "start": {
          "line": 48,
          "character": 0
        },
        "end": {
          "line": 50,
          "character": 1
        }
      },
      "preview": "float TransformConstraintPose::getMixRotate() {"
    },
    {
      "name": "TransformConstraintPose::setMixRotate",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintPose.cpp",
      "range": {
        "start": {
          "line": 52,
          "character": 0
        },
        "end": {
          "line": 54,
          "character": 1
        }
      },
      "preview": "void TransformConstraintPose::setMixRotate(float mixRotate) {"
    },
    {
      "name": "TransformConstraintPose::getMixX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintPose.cpp",
      "range": {
        "start": {
          "line": 56,
          "character": 0
        },
        "end": {
          "line": 58,
          "character": 1
        }
      },
      "preview": "float TransformConstraintPose::getMixX() {"
    },
    {
      "name": "TransformConstraintPose::setMixX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintPose.cpp",
      "range": {
        "start": {
          "line": 60,
          "character": 0
        },
        "end": {
          "line": 62,
          "character": 1
        }
      },
      "preview": "void TransformConstraintPose::setMixX(float mixX) {"
    },
    {
      "name": "TransformConstraintPose::getMixY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintPose.cpp",
      "range": {
        "start": {
          "line": 64,
          "character": 0
        },
        "end": {
          "line": 66,
          "character": 1
        }
      },
      "preview": "float TransformConstraintPose::getMixY() {"
    },
    {
      "name": "TransformConstraintPose::setMixY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintPose.cpp",
      "range": {
        "start": {
          "line": 68,
          "character": 0
        },
        "end": {
          "line": 70,
          "character": 1
        }
      },
      "preview": "void TransformConstraintPose::setMixY(float mixY) {"
    },
    {
      "name": "TransformConstraintPose::getMixScaleX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintPose.cpp",
      "range": {
        "start": {
          "line": 72,
          "character": 0
        },
        "end": {
          "line": 74,
          "character": 1
        }
      },
      "preview": "float TransformConstraintPose::getMixScaleX() {"
    },
    {
      "name": "TransformConstraintPose::setMixScaleX",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintPose.cpp",
      "range": {
        "start": {
          "line": 76,
          "character": 0
        },
        "end": {
          "line": 78,
          "character": 1
        }
      },
      "preview": "void TransformConstraintPose::setMixScaleX(float mixScaleX) {"
    },
    {
      "name": "TransformConstraintPose::getMixScaleY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintPose.cpp",
      "range": {
        "start": {
          "line": 80,
          "character": 0
        },
        "end": {
          "line": 82,
          "character": 1
        }
      },
      "preview": "float TransformConstraintPose::getMixScaleY() {"
    },
    {
      "name": "TransformConstraintPose::setMixScaleY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintPose.cpp",
      "range": {
        "start": {
          "line": 84,
          "character": 0
        },
        "end": {
          "line": 86,
          "character": 1
        }
      },
      "preview": "void TransformConstraintPose::setMixScaleY(float mixScaleY) {"
    },
    {
      "name": "TransformConstraintPose::getMixShearY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintPose.cpp",
      "range": {
        "start": {
          "line": 88,
          "character": 0
        },
        "end": {
          "line": 90,
          "character": 1
        }
      },
      "preview": "float TransformConstraintPose::getMixShearY() {"
    },
    {
      "name": "TransformConstraintPose::setMixShearY",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintPose.cpp",
      "range": {
        "start": {
          "line": 92,
          "character": 0
        },
        "end": {
          "line": 94,
          "character": 1
        }
      },
      "preview": "void TransformConstraintPose::setMixShearY(float mixShearY) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL_MULTI",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 44,
          "character": 79
        }
      },
      "preview": "RTTI_IMPL_MULTI(TransformConstraintTimeline, CurveTimeline, ConstraintTimeline)",
      "children": [
        {
          "name": "TransformConstraintTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 44,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(TransformConstraintTimeline, CurveTimeline, ConstraintTimeline)"
        },
        {
          "name": "TransformConstraintTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintTimeline.cpp",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 44,
              "character": 15
            }
          },
          "preview": "RTTI_IMPL_MULTI(TransformConstraintTimeline, CurveTimeline, ConstraintTimeline)"
        }
      ]
    },
    {
      "name": "TransformConstraintTimeline::TransformConstraintTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 46,
          "character": 0
        },
        "end": {
          "line": 53,
          "character": 1
        }
      },
      "preview": "TransformConstraintTimeline::TransformConstraintTimeline(size_t frameCount, size_t bezierCount,"
    },
    {
      "name": "TransformConstraintTimeline::~TransformConstraintTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 55,
          "character": 0
        },
        "end": {
          "line": 56,
          "character": 1
        }
      },
      "preview": "TransformConstraintTimeline::~TransformConstraintTimeline() {"
    },
    {
      "name": "TransformConstraintTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 58,
          "character": 0
        },
        "end": {
          "line": 161,
          "character": 1
        }
      },
      "preview": "void TransformConstraintTimeline::apply(Skeleton &skeleton, float lastTime, float time, Vector<Event *> *pEvents,"
    },
    {
      "name": "TransformConstraintTimeline::setFrame",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TransformConstraintTimeline.cpp",
      "range": {
        "start": {
          "line": 163,
          "character": 0
        },
        "end": {
          "line": 173,
          "character": 1
        }
      },
      "preview": "void TransformConstraintTimeline::setFrame(int frame, float time, float mixRotate, float mixX, float mixY,"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TranslateTimeline.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 40,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TranslateTimeline.cpp",
      "range": {
        "start": {
          "line": 42,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 43
        }
      },
      "preview": "RTTI_IMPL(TranslateTimeline, BoneTimeline2)",
      "children": [
        {
          "name": "TranslateTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TranslateTimeline.cpp",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(TranslateTimeline, BoneTimeline2)"
        },
        {
          "name": "TranslateTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TranslateTimeline.cpp",
          "range": {
            "start": {
              "line": 42,
              "character": 0
            },
            "end": {
              "line": 42,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(TranslateTimeline, BoneTimeline2)"
        }
      ]
    },
    {
      "name": "TranslateTimeline::TranslateTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TranslateTimeline.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 1
        }
      },
      "preview": "TranslateTimeline::TranslateTimeline(size_t frameCount, size_t bezierCount, int boneIndex) : BoneTimeline2(frameCount, bezierCount, boneIndex, Property_X, Property_Y) {"
    },
    {
      "name": "TranslateTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TranslateTimeline.cpp",
      "range": {
        "start": {
          "line": 47,
          "character": 0
        },
        "end": {
          "line": 103,
          "character": 1
        }
      },
      "preview": "void TranslateTimeline::apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TranslateTimeline.cpp",
      "range": {
        "start": {
          "line": 105,
          "character": 0
        },
        "end": {
          "line": 105,
          "character": 44
        }
      },
      "preview": "RTTI_IMPL(TranslateXTimeline, BoneTimeline1)",
      "children": [
        {
          "name": "TranslateXTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TranslateTimeline.cpp",
          "range": {
            "start": {
              "line": 105,
              "character": 0
            },
            "end": {
              "line": 105,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(TranslateXTimeline, BoneTimeline1)"
        },
        {
          "name": "TranslateXTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TranslateTimeline.cpp",
          "range": {
            "start": {
              "line": 105,
              "character": 0
            },
            "end": {
              "line": 105,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(TranslateXTimeline, BoneTimeline1)"
        }
      ]
    },
    {
      "name": "TranslateXTimeline::TranslateXTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TranslateTimeline.cpp",
      "range": {
        "start": {
          "line": 107,
          "character": 0
        },
        "end": {
          "line": 108,
          "character": 1
        }
      },
      "preview": "TranslateXTimeline::TranslateXTimeline(size_t frameCount, size_t bezierCount, int boneIndex) : BoneTimeline1(frameCount, bezierCount, boneIndex, Property_X) {"
    },
    {
      "name": "TranslateXTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TranslateTimeline.cpp",
      "range": {
        "start": {
          "line": 110,
          "character": 0
        },
        "end": {
          "line": 113,
          "character": 1
        }
      },
      "preview": "void TranslateXTimeline::apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TranslateTimeline.cpp",
      "range": {
        "start": {
          "line": 115,
          "character": 0
        },
        "end": {
          "line": 115,
          "character": 44
        }
      },
      "preview": "RTTI_IMPL(TranslateYTimeline, BoneTimeline1)",
      "children": [
        {
          "name": "TranslateYTimeline::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TranslateTimeline.cpp",
          "range": {
            "start": {
              "line": 115,
              "character": 0
            },
            "end": {
              "line": 115,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(TranslateYTimeline, BoneTimeline1)"
        },
        {
          "name": "TranslateYTimeline::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TranslateTimeline.cpp",
          "range": {
            "start": {
              "line": 115,
              "character": 0
            },
            "end": {
              "line": 115,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(TranslateYTimeline, BoneTimeline1)"
        }
      ]
    },
    {
      "name": "TranslateYTimeline::TranslateYTimeline",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TranslateTimeline.cpp",
      "range": {
        "start": {
          "line": 117,
          "character": 0
        },
        "end": {
          "line": 118,
          "character": 1
        }
      },
      "preview": "TranslateYTimeline::TranslateYTimeline(size_t frameCount, size_t bezierCount, int boneIndex) : BoneTimeline1(frameCount, bezierCount, boneIndex, Property_Y) {"
    },
    {
      "name": "TranslateYTimeline::apply",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/TranslateTimeline.cpp",
      "range": {
        "start": {
          "line": 120,
          "character": 0
        },
        "end": {
          "line": 123,
          "character": 1
        }
      },
      "preview": "void TranslateYTimeline::apply(BoneLocal &pose, BoneLocal &setup, float time, float alpha, MixBlend blend,"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Triangulator.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "Triangulator::~Triangulator",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Triangulator.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 38,
          "character": 1
        }
      },
      "preview": "Triangulator::~Triangulator() {"
    },
    {
      "name": "Triangulator::triangulate",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Triangulator.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 124,
          "character": 1
        }
      },
      "preview": "Vector<int> &Triangulator::triangulate(Vector<float> &vertices) {"
    },
    {
      "name": "Triangulator::decompose",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Triangulator.cpp",
      "range": {
        "start": {
          "line": 126,
          "character": 0
        },
        "end": {
          "line": 265,
          "character": 1
        }
      },
      "preview": "Vector<Vector<float> *> &Triangulator::decompose(Vector<float> &vertices, Vector<int> &triangles) {"
    },
    {
      "name": "Triangulator::isConcave",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Triangulator.cpp",
      "range": {
        "start": {
          "line": 267,
          "character": 0
        },
        "end": {
          "line": 275,
          "character": 1
        }
      },
      "preview": "bool Triangulator::isConcave(int index, int vertexCount, Vector<float> &vertices, Vector<int> &indices) {"
    },
    {
      "name": "Triangulator::positiveArea",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Triangulator.cpp",
      "range": {
        "start": {
          "line": 277,
          "character": 0
        },
        "end": {
          "line": 279,
          "character": 1
        }
      },
      "preview": "bool Triangulator::positiveArea(float p1x, float p1y, float p2x, float p2y, float p3x, float p3y) {"
    },
    {
      "name": "Triangulator::winding",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Triangulator.cpp",
      "range": {
        "start": {
          "line": 281,
          "character": 0
        },
        "end": {
          "line": 284,
          "character": 1
        }
      },
      "preview": "int Triangulator::winding(float p1x, float p1y, float p2x, float p2y, float p3x, float p3y) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Update.cpp",
      "range": {
        "start": {
          "line": 31,
          "character": 0
        },
        "end": {
          "line": 31,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL_NOPARENT",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Update.cpp",
      "range": {
        "start": {
          "line": 33,
          "character": 0
        },
        "end": {
          "line": 33,
          "character": 26
        }
      },
      "preview": "RTTI_IMPL_NOPARENT(Update)",
      "children": [
        {
          "name": "Update::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Update.cpp",
          "range": {
            "start": {
              "line": 33,
              "character": 0
            },
            "end": {
              "line": 33,
              "character": 18
            }
          },
          "preview": "RTTI_IMPL_NOPARENT(Update)"
        },
        {
          "name": "Update::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Update.cpp",
          "range": {
            "start": {
              "line": 33,
              "character": 0
            },
            "end": {
              "line": 33,
              "character": 18
            }
          },
          "preview": "RTTI_IMPL_NOPARENT(Update)"
        }
      ]
    },
    {
      "name": "Update::Update",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Update.cpp",
      "range": {
        "start": {
          "line": 35,
          "character": 0
        },
        "end": {
          "line": 36,
          "character": 1
        }
      },
      "preview": "Update::Update() {"
    },
    {
      "name": "Update::~Update",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/Update.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 39,
          "character": 1
        }
      },
      "preview": "Update::~Update() {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/VertexAttachment.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 36,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "RTTI_IMPL",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/VertexAttachment.cpp",
      "range": {
        "start": {
          "line": 38,
          "character": 0
        },
        "end": {
          "line": 38,
          "character": 39
        }
      },
      "preview": "RTTI_IMPL(VertexAttachment, Attachment)",
      "children": [
        {
          "name": "VertexAttachment::rtti",
          "kind": "property",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/VertexAttachment.cpp",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(VertexAttachment, Attachment)"
        },
        {
          "name": "VertexAttachment::getRTTI",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/VertexAttachment.cpp",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 9
            }
          },
          "preview": "RTTI_IMPL(VertexAttachment, Attachment)"
        }
      ]
    },
    {
      "name": "VertexAttachment::VertexAttachment",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/VertexAttachment.cpp",
      "range": {
        "start": {
          "line": 40,
          "character": 0
        },
        "end": {
          "line": 42,
          "character": 1
        }
      },
      "preview": "VertexAttachment::VertexAttachment(const String &name) : Attachment(name), _worldVerticesLength(0),"
    },
    {
      "name": "VertexAttachment::~VertexAttachment",
      "kind": "constructor",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/VertexAttachment.cpp",
      "range": {
        "start": {
          "line": 44,
          "character": 0
        },
        "end": {
          "line": 45,
          "character": 1
        }
      },
      "preview": "VertexAttachment::~VertexAttachment() {"
    },
    {
      "name": "VertexAttachment::computeWorldVertices",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/VertexAttachment.cpp",
      "range": {
        "start": {
          "line": 48,
          "character": 0
        },
        "end": {
          "line": 51,
          "character": 1
        }
      },
      "preview": "void VertexAttachment::computeWorldVertices(Skeleton &skeleton, Slot &slot, size_t start, size_t count, Vector<float> &worldVertices,"
    },
    {
      "name": "VertexAttachment::computeWorldVertices",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/VertexAttachment.cpp",
      "range": {
        "start": {
          "line": 53,
          "character": 0
        },
        "end": {
          "line": 118,
          "character": 1
        }
      },
      "preview": "void VertexAttachment::computeWorldVertices(Skeleton &skeleton, Slot &slot, size_t start, size_t count, float *worldVertices, size_t offset,"
    },
    {
      "name": "VertexAttachment::getId",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/VertexAttachment.cpp",
      "range": {
        "start": {
          "line": 120,
          "character": 0
        },
        "end": {
          "line": 122,
          "character": 1
        }
      },
      "preview": "int VertexAttachment::getId() {"
    },
    {
      "name": "VertexAttachment::getBones",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/VertexAttachment.cpp",
      "range": {
        "start": {
          "line": 124,
          "character": 0
        },
        "end": {
          "line": 126,
          "character": 1
        }
      },
      "preview": "Vector<int> &VertexAttachment::getBones() {"
    },
    {
      "name": "VertexAttachment::getVertices",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/VertexAttachment.cpp",
      "range": {
        "start": {
          "line": 128,
          "character": 0
        },
        "end": {
          "line": 130,
          "character": 1
        }
      },
      "preview": "Vector<float> &VertexAttachment::getVertices() {"
    },
    {
      "name": "VertexAttachment::getWorldVerticesLength",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/VertexAttachment.cpp",
      "range": {
        "start": {
          "line": 132,
          "character": 0
        },
        "end": {
          "line": 134,
          "character": 1
        }
      },
      "preview": "size_t VertexAttachment::getWorldVerticesLength() {"
    },
    {
      "name": "VertexAttachment::setWorldVerticesLength",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/VertexAttachment.cpp",
      "range": {
        "start": {
          "line": 136,
          "character": 0
        },
        "end": {
          "line": 138,
          "character": 1
        }
      },
      "preview": "void VertexAttachment::setWorldVerticesLength(size_t inValue) {"
    },
    {
      "name": "VertexAttachment::getTimelineAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/VertexAttachment.cpp",
      "range": {
        "start": {
          "line": 140,
          "character": 0
        },
        "end": {
          "line": 142,
          "character": 1
        }
      },
      "preview": "Attachment *VertexAttachment::getTimelineAttachment() {"
    },
    {
      "name": "VertexAttachment::setTimelineAttachment",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/VertexAttachment.cpp",
      "range": {
        "start": {
          "line": 144,
          "character": 0
        },
        "end": {
          "line": 146,
          "character": 1
        }
      },
      "preview": "void VertexAttachment::setTimelineAttachment(Attachment *attachment) {"
    },
    {
      "name": "VertexAttachment::getNextID",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/VertexAttachment.cpp",
      "range": {
        "start": {
          "line": 148,
          "character": 0
        },
        "end": {
          "line": 151,
          "character": 1
        }
      },
      "preview": "int VertexAttachment::getNextID() {"
    },
    {
      "name": "VertexAttachment::copyTo",
      "kind": "method",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp/src/spine/VertexAttachment.cpp",
      "range": {
        "start": {
          "line": 153,
          "character": 0
        },
        "end": {
          "line": 158,
          "character": 1
        }
      },
      "preview": "void VertexAttachment::copyTo(VertexAttachment *other) {"
    },
    {
      "name": "using namespace spine",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 34,
          "character": 0
        },
        "end": {
          "line": 34,
          "character": 21
        }
      },
      "preview": "using namespace spine;"
    },
    {
      "name": "AnimationStateEvent",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 36,
          "character": 0
        },
        "end": {
          "line": 41,
          "character": 1
        }
      },
      "preview": "struct AnimationStateEvent {",
      "children": [
        {
          "name": "type",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 37,
              "character": 0
            },
            "end": {
              "line": 37,
              "character": 15
            }
          },
          "preview": "EventType type;"
        },
        {
          "name": "entry",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 38,
              "character": 0
            },
            "end": {
              "line": 38,
              "character": 18
            }
          },
          "preview": "TrackEntry *entry;"
        },
        {
          "name": "event",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 39,
              "character": 0
            },
            "end": {
              "line": 39,
              "character": 13
            }
          },
          "preview": "Event *event;"
        },
        {
          "name": "AnimationStateEvent",
          "kind": "constructor",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 40,
              "character": 0
            },
            "end": {
              "line": 40,
              "character": 112
            }
          },
          "preview": "AnimationStateEvent(EventType type, TrackEntry *entry, Event *event) : type(type), entry(entry), event(event){};"
        }
      ]
    },
    {
      "name": "EventListener",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 43,
          "character": 0
        },
        "end": {
          "line": 50,
          "character": 1
        }
      },
      "preview": "struct EventListener : public AnimationStateListenerObject {",
      "supertypes": [
        "AnimationStateListenerObject"
      ],
      "children": [
        {
          "name": "events",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 44,
              "character": 0
            },
            "end": {
              "line": 44,
              "character": 35
            }
          },
          "preview": "Vector<AnimationStateEvent> events;"
        },
        {
          "name": "callback",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 46,
              "character": 0
            },
            "end": {
              "line": 49,
              "character": 2
            }
          },
          "preview": "void callback(AnimationState *state, EventType type, TrackEntry *entry, Event *event) {"
        }
      ]
    },
    {
      "name": "_spine_atlas",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 52,
          "character": 0
        },
        "end": {
          "line": 57,
          "character": 1
        }
      },
      "preview": "typedef struct _spine_atlas {",
      "children": [
        {
          "name": "atlas",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 53,
              "character": 0
            },
            "end": {
              "line": 53,
              "character": 12
            }
          },
          "preview": "void *atlas;"
        },
        {
          "name": "imagePaths",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 54,
              "character": 0
            },
            "end": {
              "line": 54,
              "character": 18
            }
          },
          "preview": "utf8 **imagePaths;"
        },
        {
          "name": "numImagePaths",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 55,
              "character": 0
            },
            "end": {
              "line": 55,
              "character": 22
            }
          },
          "preview": "int32_t numImagePaths;"
        },
        {
          "name": "error",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 56,
              "character": 0
            },
            "end": {
              "line": 56,
              "character": 12
            }
          },
          "preview": "utf8 *error;"
        }
      ]
    },
    {
      "name": "_spine_atlas",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 57,
          "character": 0
        },
        "end": {
          "line": 57,
          "character": 14
        }
      },
      "preview": "} _spine_atlas;"
    },
    {
      "name": "_spine_skeleton_data_result",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 59,
          "character": 0
        },
        "end": {
          "line": 62,
          "character": 1
        }
      },
      "preview": "typedef struct _spine_skeleton_data_result {",
      "children": [
        {
          "name": "skeletonData",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 60,
              "character": 0
            },
            "end": {
              "line": 60,
              "character": 33
            }
          },
          "preview": "spine_skeleton_data skeletonData;"
        },
        {
          "name": "error",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 61,
              "character": 0
            },
            "end": {
              "line": 61,
              "character": 12
            }
          },
          "preview": "utf8 *error;"
        }
      ]
    },
    {
      "name": "_spine_skeleton_data_result",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 62,
          "character": 0
        },
        "end": {
          "line": 62,
          "character": 29
        }
      },
      "preview": "} _spine_skeleton_data_result;"
    },
    {
      "name": "_spine_bounds",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 64,
          "character": 0
        },
        "end": {
          "line": 66,
          "character": 1
        }
      },
      "preview": "typedef struct _spine_bounds {",
      "children": [
        {
          "name": "x",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 65,
              "character": 0
            },
            "end": {
              "line": 65,
              "character": 8
            }
          },
          "preview": "float x, y, width, height;"
        },
        {
          "name": "y",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 65,
              "character": 0
            },
            "end": {
              "line": 65,
              "character": 11
            }
          },
          "preview": "float x, y, width, height;"
        },
        {
          "name": "width",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 65,
              "character": 0
            },
            "end": {
              "line": 65,
              "character": 18
            }
          },
          "preview": "float x, y, width, height;"
        },
        {
          "name": "height",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 65,
              "character": 0
            },
            "end": {
              "line": 65,
              "character": 26
            }
          },
          "preview": "float x, y, width, height;"
        }
      ]
    },
    {
      "name": "_spine_bounds",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 66,
          "character": 0
        },
        "end": {
          "line": 66,
          "character": 15
        }
      },
      "preview": "} _spine_bounds;"
    },
    {
      "name": "_spine_vector",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 68,
          "character": 0
        },
        "end": {
          "line": 70,
          "character": 1
        }
      },
      "preview": "typedef struct _spine_vector {",
      "children": [
        {
          "name": "x",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 69,
              "character": 0
            },
            "end": {
              "line": 69,
              "character": 8
            }
          },
          "preview": "float x, y;"
        },
        {
          "name": "y",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 69,
              "character": 0
            },
            "end": {
              "line": 69,
              "character": 11
            }
          },
          "preview": "float x, y;"
        }
      ]
    },
    {
      "name": "_spine_vector",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 70,
          "character": 0
        },
        "end": {
          "line": 70,
          "character": 15
        }
      },
      "preview": "} _spine_vector;"
    },
    {
      "name": "_spine_skeleton_drawable",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 72,
          "character": 0
        },
        "end": {
          "line": 78,
          "character": 1
        }
      },
      "preview": "typedef struct _spine_skeleton_drawable : public SpineObject {",
      "supertypes": [
        "SpineObject"
      ],
      "children": [
        {
          "name": "skeleton",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 73,
              "character": 0
            },
            "end": {
              "line": 73,
              "character": 24
            }
          },
          "preview": "spine_skeleton skeleton;"
        },
        {
          "name": "animationState",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 74,
              "character": 0
            },
            "end": {
              "line": 74,
              "character": 37
            }
          },
          "preview": "spine_animation_state animationState;"
        },
        {
          "name": "animationStateData",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 75,
              "character": 0
            },
            "end": {
              "line": 75,
              "character": 46
            }
          },
          "preview": "spine_animation_state_data animationStateData;"
        },
        {
          "name": "animationStateEvents",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 76,
              "character": 0
            },
            "end": {
              "line": 76,
              "character": 50
            }
          },
          "preview": "spine_animation_state_events animationStateEvents;"
        },
        {
          "name": "renderer",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 77,
              "character": 0
            },
            "end": {
              "line": 77,
              "character": 27
            }
          },
          "preview": "SkeletonRenderer *renderer;"
        }
      ]
    },
    {
      "name": "_spine_skeleton_drawable",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 78,
          "character": 0
        },
        "end": {
          "line": 78,
          "character": 26
        }
      },
      "preview": "} _spine_skeleton_drawable;",
      "supertypes": [
        "SpineObject"
      ]
    },
    {
      "name": "_spine_skin_entry",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 80,
          "character": 0
        },
        "end": {
          "line": 84,
          "character": 1
        }
      },
      "preview": "typedef struct _spine_skin_entry {",
      "children": [
        {
          "name": "slotIndex",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 81,
              "character": 0
            },
            "end": {
              "line": 81,
              "character": 18
            }
          },
          "preview": "int32_t slotIndex;"
        },
        {
          "name": "name",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 82,
              "character": 0
            },
            "end": {
              "line": 82,
              "character": 11
            }
          },
          "preview": "utf8 *name;"
        },
        {
          "name": "attachment",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 83,
              "character": 0
            },
            "end": {
              "line": 83,
              "character": 28
            }
          },
          "preview": "spine_attachment attachment;"
        }
      ]
    },
    {
      "name": "_spine_skin_entry",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 84,
          "character": 0
        },
        "end": {
          "line": 84,
          "character": 19
        }
      },
      "preview": "} _spine_skin_entry;"
    },
    {
      "name": "_spine_skin_entries",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 86,
          "character": 0
        },
        "end": {
          "line": 89,
          "character": 1
        }
      },
      "preview": "typedef struct _spine_skin_entries {",
      "children": [
        {
          "name": "numEntries",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 87,
              "character": 0
            },
            "end": {
              "line": 87,
              "character": 19
            }
          },
          "preview": "int32_t numEntries;"
        },
        {
          "name": "entries",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 88,
              "character": 0
            },
            "end": {
              "line": 88,
              "character": 27
            }
          },
          "preview": "_spine_skin_entry *entries;"
        }
      ]
    },
    {
      "name": "_spine_skin_entries",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 89,
          "character": 0
        },
        "end": {
          "line": 89,
          "character": 21
        }
      },
      "preview": "} _spine_skin_entries;"
    },
    {
      "name": "NULL_COLOR",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 91,
          "character": 0
        },
        "end": {
          "line": 91,
          "character": 35
        }
      },
      "preview": "static Color NULL_COLOR(0, 0, 0, 0);"
    },
    {
      "name": "defaultExtension",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 93,
          "character": 0
        },
        "end": {
          "line": 93,
          "character": 49
        }
      },
      "preview": "static SpineExtension *defaultExtension = nullptr;"
    },
    {
      "name": "debugExtension",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 94,
          "character": 0
        },
        "end": {
          "line": 94,
          "character": 47
        }
      },
      "preview": "static DebugExtension *debugExtension = nullptr;"
    },
    {
      "name": "initExtensions",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 96,
          "character": 0
        },
        "end": {
          "line": 101,
          "character": 1
        }
      },
      "preview": "static void initExtensions() {"
    },
    {
      "name": "spine::getDefaultExtension",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 103,
          "character": 0
        },
        "end": {
          "line": 106,
          "character": 1
        }
      },
      "preview": "spine::SpineExtension *spine::getDefaultExtension() {"
    },
    {
      "name": "spine_enable_debug_extension",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 108,
          "character": 0
        },
        "end": {
          "line": 111,
          "character": 1
        }
      },
      "preview": "void spine_enable_debug_extension(spine_bool enable) {"
    },
    {
      "name": "spine_major_version",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 113,
          "character": 0
        },
        "end": {
          "line": 115,
          "character": 1
        }
      },
      "preview": "int32_t spine_major_version() {"
    },
    {
      "name": "spine_minor_version",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 117,
          "character": 0
        },
        "end": {
          "line": 119,
          "character": 1
        }
      },
      "preview": "int32_t spine_minor_version() {"
    },
    {
      "name": "spine_report_leaks",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 121,
          "character": 0
        },
        "end": {
          "line": 125,
          "character": 1
        }
      },
      "preview": "void spine_report_leaks() {"
    },
    {
      "name": "spine_color_get_r",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 129,
          "character": 0
        },
        "end": {
          "line": 132,
          "character": 1
        }
      },
      "preview": "float spine_color_get_r(spine_color color) {"
    },
    {
      "name": "spine_color_get_g",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 134,
          "character": 0
        },
        "end": {
          "line": 137,
          "character": 1
        }
      },
      "preview": "float spine_color_get_g(spine_color color) {"
    },
    {
      "name": "spine_color_get_b",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 139,
          "character": 0
        },
        "end": {
          "line": 142,
          "character": 1
        }
      },
      "preview": "float spine_color_get_b(spine_color color) {"
    },
    {
      "name": "spine_color_get_a",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 144,
          "character": 0
        },
        "end": {
          "line": 147,
          "character": 1
        }
      },
      "preview": "float spine_color_get_a(spine_color color) {"
    },
    {
      "name": "spine_bounds_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 151,
          "character": 0
        },
        "end": {
          "line": 154,
          "character": 1
        }
      },
      "preview": "float spine_bounds_get_x(spine_bounds bounds) {"
    },
    {
      "name": "spine_bounds_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 156,
          "character": 0
        },
        "end": {
          "line": 159,
          "character": 1
        }
      },
      "preview": "float spine_bounds_get_y(spine_bounds bounds) {"
    },
    {
      "name": "spine_bounds_get_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 161,
          "character": 0
        },
        "end": {
          "line": 164,
          "character": 1
        }
      },
      "preview": "float spine_bounds_get_width(spine_bounds bounds) {"
    },
    {
      "name": "spine_bounds_get_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 166,
          "character": 0
        },
        "end": {
          "line": 169,
          "character": 1
        }
      },
      "preview": "float spine_bounds_get_height(spine_bounds bounds) {"
    },
    {
      "name": "spine_vector_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 172,
          "character": 0
        },
        "end": {
          "line": 175,
          "character": 1
        }
      },
      "preview": "float spine_vector_get_x(spine_vector vector) {"
    },
    {
      "name": "spine_vector_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 177,
          "character": 0
        },
        "end": {
          "line": 180,
          "character": 1
        }
      },
      "preview": "float spine_vector_get_y(spine_vector vector) {"
    },
    {
      "name": "LiteTextureLoad",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 184,
          "character": 0
        },
        "end": {
          "line": 191,
          "character": 1
        }
      },
      "preview": "class LiteTextureLoad : public TextureLoader {",
      "supertypes": [
        "TextureLoader"
      ],
      "children": [
        {
          "name": "load",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 185,
              "character": 0
            },
            "end": {
              "line": 187,
              "character": 2
            }
          },
          "preview": "void load(AtlasPage &page, const String &path) {"
        },
        {
          "name": "unload",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 189,
              "character": 0
            },
            "end": {
              "line": 190,
              "character": 2
            }
          },
          "preview": "void unload(void *texture) {"
        }
      ]
    },
    {
      "name": "liteLoader",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 192,
          "character": 0
        },
        "end": {
          "line": 192,
          "character": 26
        }
      },
      "preview": "LiteTextureLoad liteLoader;"
    },
    {
      "name": "spine_atlas_load",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 194,
          "character": 0
        },
        "end": {
          "line": 206,
          "character": 1
        }
      },
      "preview": "spine_atlas spine_atlas_load(const utf8 *atlasData) {"
    },
    {
      "name": "CallbackTextureLoad",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 208,
          "character": 0
        },
        "end": {
          "line": 227,
          "character": 1
        }
      },
      "preview": "class CallbackTextureLoad : public TextureLoader {",
      "supertypes": [
        "TextureLoader"
      ],
      "children": [
        {
          "name": "loadCb",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 209,
              "character": 0
            },
            "end": {
              "line": 209,
              "character": 38
            }
          },
          "preview": "spine_texture_loader_load_func loadCb;"
        },
        {
          "name": "unloadCb",
          "kind": "field",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 210,
              "character": 0
            },
            "end": {
              "line": 210,
              "character": 42
            }
          },
          "preview": "spine_texture_loader_unload_func unloadCb;"
        },
        {
          "name": "CallbackTextureLoad",
          "kind": "constructor",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 213,
              "character": 0
            },
            "end": {
              "line": 213,
              "character": 62
            }
          },
          "preview": "CallbackTextureLoad() : loadCb(nullptr), unloadCb(nullptr) {}"
        },
        {
          "name": "setCallbacks",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 215,
              "character": 0
            },
            "end": {
              "line": 218,
              "character": 2
            }
          },
          "preview": "void setCallbacks(spine_texture_loader_load_func load, spine_texture_loader_unload_func unload) {"
        },
        {
          "name": "load",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 220,
              "character": 0
            },
            "end": {
              "line": 222,
              "character": 2
            }
          },
          "preview": "void load(AtlasPage &page, const String &path) {"
        },
        {
          "name": "unload",
          "kind": "method",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
          "range": {
            "start": {
              "line": 224,
              "character": 0
            },
            "end": {
              "line": 226,
              "character": 2
            }
          },
          "preview": "void unload(void *texture) {"
        }
      ]
    },
    {
      "name": "callbackLoader",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 229,
          "character": 0
        },
        "end": {
          "line": 229,
          "character": 34
        }
      },
      "preview": "CallbackTextureLoad callbackLoader;"
    },
    {
      "name": "spine_atlas_load_callback",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 231,
          "character": 0
        },
        "end": {
          "line": 244,
          "character": 1
        }
      },
      "preview": "spine_atlas spine_atlas_load_callback(const utf8 *atlasData, const utf8 *atlasDir, spine_texture_loader_load_func load, spine_texture_loader_unload_func unload) {"
    },
    {
      "name": "spine_atlas_get_num_image_paths",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 246,
          "character": 0
        },
        "end": {
          "line": 249,
          "character": 1
        }
      },
      "preview": "int32_t spine_atlas_get_num_image_paths(spine_atlas atlas) {"
    },
    {
      "name": "spine_atlas_is_pma",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 251,
          "character": 0
        },
        "end": {
          "line": 259,
          "character": 1
        }
      },
      "preview": "spine_bool spine_atlas_is_pma(spine_atlas atlas) {"
    },
    {
      "name": "spine_atlas_get_image_path",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 261,
          "character": 0
        },
        "end": {
          "line": 264,
          "character": 1
        }
      },
      "preview": "utf8 *spine_atlas_get_image_path(spine_atlas atlas, int32_t index) {"
    },
    {
      "name": "spine_atlas_get_error",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 266,
          "character": 0
        },
        "end": {
          "line": 269,
          "character": 1
        }
      },
      "preview": "utf8 *spine_atlas_get_error(spine_atlas atlas) {"
    },
    {
      "name": "spine_atlas_dispose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 271,
          "character": 0
        },
        "end": {
          "line": 281,
          "character": 1
        }
      },
      "preview": "void spine_atlas_dispose(spine_atlas atlas) {"
    },
    {
      "name": "spine_skeleton_data_load_json",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 285,
          "character": 0
        },
        "end": {
          "line": 299,
          "character": 1
        }
      },
      "preview": "spine_skeleton_data_result spine_skeleton_data_load_json(spine_atlas atlas, const utf8 *skeletonData) {"
    },
    {
      "name": "spine_skeleton_data_load_binary",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 301,
          "character": 0
        },
        "end": {
          "line": 316,
          "character": 1
        }
      },
      "preview": "spine_skeleton_data_result spine_skeleton_data_load_binary(spine_atlas atlas, const uint8_t *skeletonData, int32_t length) {"
    },
    {
      "name": "spine_skeleton_data_result_get_error",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 318,
          "character": 0
        },
        "end": {
          "line": 321,
          "character": 1
        }
      },
      "preview": "utf8 *spine_skeleton_data_result_get_error(spine_skeleton_data_result result) {"
    },
    {
      "name": "spine_skeleton_data_result_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 322,
          "character": 0
        },
        "end": {
          "line": 325,
          "character": 1
        }
      },
      "preview": "spine_skeleton_data spine_skeleton_data_result_get_data(spine_skeleton_data_result result) {"
    },
    {
      "name": "spine_skeleton_data_result_dispose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 327,
          "character": 0
        },
        "end": {
          "line": 332,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_data_result_dispose(spine_skeleton_data_result result) {"
    },
    {
      "name": "spine_skeleton_data_find_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 334,
          "character": 0
        },
        "end": {
          "line": 338,
          "character": 1
        }
      },
      "preview": "spine_bone_data spine_skeleton_data_find_bone(spine_skeleton_data data, const utf8 *name) {"
    },
    {
      "name": "spine_skeleton_data_find_slot",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 340,
          "character": 0
        },
        "end": {
          "line": 344,
          "character": 1
        }
      },
      "preview": "spine_slot_data spine_skeleton_data_find_slot(spine_skeleton_data data, const utf8 *name) {"
    },
    {
      "name": "spine_skeleton_data_find_skin",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 346,
          "character": 0
        },
        "end": {
          "line": 350,
          "character": 1
        }
      },
      "preview": "spine_skin spine_skeleton_data_find_skin(spine_skeleton_data data, const utf8 *name) {"
    },
    {
      "name": "spine_skeleton_data_find_event",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 352,
          "character": 0
        },
        "end": {
          "line": 356,
          "character": 1
        }
      },
      "preview": "spine_event_data spine_skeleton_data_find_event(spine_skeleton_data data, const utf8 *name) {"
    },
    {
      "name": "spine_skeleton_data_find_animation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 358,
          "character": 0
        },
        "end": {
          "line": 362,
          "character": 1
        }
      },
      "preview": "spine_animation spine_skeleton_data_find_animation(spine_skeleton_data data, const utf8 *name) {"
    },
    {
      "name": "spine_skeleton_data_find_ik_constraint",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 364,
          "character": 0
        },
        "end": {
          "line": 368,
          "character": 1
        }
      },
      "preview": "spine_ik_constraint_data spine_skeleton_data_find_ik_constraint(spine_skeleton_data data, const utf8 *name) {"
    },
    {
      "name": "spine_skeleton_data_find_transform_constraint",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 370,
          "character": 0
        },
        "end": {
          "line": 374,
          "character": 1
        }
      },
      "preview": "spine_transform_constraint_data spine_skeleton_data_find_transform_constraint(spine_skeleton_data data, const utf8 *name) {"
    },
    {
      "name": "spine_skeleton_data_find_path_constraint",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 376,
          "character": 0
        },
        "end": {
          "line": 380,
          "character": 1
        }
      },
      "preview": "spine_path_constraint_data spine_skeleton_data_find_path_constraint(spine_skeleton_data data, const utf8 *name) {"
    },
    {
      "name": "spine_skeleton_data_find_physics_constraint",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 382,
          "character": 0
        },
        "end": {
          "line": 386,
          "character": 1
        }
      },
      "preview": "spine_physics_constraint_data spine_skeleton_data_find_physics_constraint(spine_skeleton_data data, const utf8 *name) {"
    },
    {
      "name": "spine_skeleton_data_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 388,
          "character": 0
        },
        "end": {
          "line": 392,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_skeleton_data_get_name(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 394,
          "character": 0
        },
        "end": {
          "line": 398,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_data_get_num_bones(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 400,
          "character": 0
        },
        "end": {
          "line": 404,
          "character": 1
        }
      },
      "preview": "spine_bone_data *spine_skeleton_data_get_bones(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_num_slots",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 406,
          "character": 0
        },
        "end": {
          "line": 410,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_data_get_num_slots(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_slots",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 412,
          "character": 0
        },
        "end": {
          "line": 416,
          "character": 1
        }
      },
      "preview": "spine_slot_data *spine_skeleton_data_get_slots(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_num_skins",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 418,
          "character": 0
        },
        "end": {
          "line": 422,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_data_get_num_skins(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_skins",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 424,
          "character": 0
        },
        "end": {
          "line": 428,
          "character": 1
        }
      },
      "preview": "spine_skin *spine_skeleton_data_get_skins(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_default_skin",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 430,
          "character": 0
        },
        "end": {
          "line": 434,
          "character": 1
        }
      },
      "preview": "spine_skin spine_skeleton_data_get_default_skin(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_set_default_skin",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 436,
          "character": 0
        },
        "end": {
          "line": 440,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_data_set_default_skin(spine_skeleton_data data, spine_skin skin) {"
    },
    {
      "name": "spine_skeleton_data_get_num_events",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 442,
          "character": 0
        },
        "end": {
          "line": 446,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_data_get_num_events(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_events",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 448,
          "character": 0
        },
        "end": {
          "line": 452,
          "character": 1
        }
      },
      "preview": "spine_event_data *spine_skeleton_data_get_events(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_num_animations",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 454,
          "character": 0
        },
        "end": {
          "line": 458,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_data_get_num_animations(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_animations",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 460,
          "character": 0
        },
        "end": {
          "line": 464,
          "character": 1
        }
      },
      "preview": "spine_animation *spine_skeleton_data_get_animations(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_num_ik_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 466,
          "character": 0
        },
        "end": {
          "line": 470,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_data_get_num_ik_constraints(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_ik_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 472,
          "character": 0
        },
        "end": {
          "line": 476,
          "character": 1
        }
      },
      "preview": "spine_ik_constraint_data *spine_skeleton_data_get_ik_constraints(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_num_transform_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 478,
          "character": 0
        },
        "end": {
          "line": 482,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_data_get_num_transform_constraints(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_transform_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 484,
          "character": 0
        },
        "end": {
          "line": 488,
          "character": 1
        }
      },
      "preview": "spine_transform_constraint_data *spine_skeleton_data_get_transform_constraints(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_num_path_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 490,
          "character": 0
        },
        "end": {
          "line": 494,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_data_get_num_path_constraints(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_path_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 496,
          "character": 0
        },
        "end": {
          "line": 500,
          "character": 1
        }
      },
      "preview": "spine_path_constraint_data *spine_skeleton_data_get_path_constraints(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_num_physics_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 502,
          "character": 0
        },
        "end": {
          "line": 506,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_data_get_num_physics_constraints(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_physics_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 508,
          "character": 0
        },
        "end": {
          "line": 512,
          "character": 1
        }
      },
      "preview": "spine_physics_constraint_data *spine_skeleton_data_get_physics_constraints(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 514,
          "character": 0
        },
        "end": {
          "line": 518,
          "character": 1
        }
      },
      "preview": "float spine_skeleton_data_get_x(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_set_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 520,
          "character": 0
        },
        "end": {
          "line": 524,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_data_set_x(spine_skeleton_data data, float x) {"
    },
    {
      "name": "spine_skeleton_data_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 526,
          "character": 0
        },
        "end": {
          "line": 530,
          "character": 1
        }
      },
      "preview": "float spine_skeleton_data_get_y(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_set_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 532,
          "character": 0
        },
        "end": {
          "line": 536,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_data_set_y(spine_skeleton_data data, float y) {"
    },
    {
      "name": "spine_skeleton_data_get_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 538,
          "character": 0
        },
        "end": {
          "line": 542,
          "character": 1
        }
      },
      "preview": "float spine_skeleton_data_get_width(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_set_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 544,
          "character": 0
        },
        "end": {
          "line": 548,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_data_set_width(spine_skeleton_data data, float width) {"
    },
    {
      "name": "spine_skeleton_data_get_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 550,
          "character": 0
        },
        "end": {
          "line": 554,
          "character": 1
        }
      },
      "preview": "float spine_skeleton_data_get_height(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_set_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 556,
          "character": 0
        },
        "end": {
          "line": 560,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_data_set_height(spine_skeleton_data data, float height) {"
    },
    {
      "name": "spine_skeleton_data_get_version",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 562,
          "character": 0
        },
        "end": {
          "line": 566,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_skeleton_data_get_version(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_hash",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 568,
          "character": 0
        },
        "end": {
          "line": 572,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_skeleton_data_get_hash(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_images_path",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 574,
          "character": 0
        },
        "end": {
          "line": 578,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_skeleton_data_get_images_path(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_audio_path",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 580,
          "character": 0
        },
        "end": {
          "line": 584,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_skeleton_data_get_audio_path(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_fps",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 586,
          "character": 0
        },
        "end": {
          "line": 590,
          "character": 1
        }
      },
      "preview": "float spine_skeleton_data_get_fps(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_get_reference_scale",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 592,
          "character": 0
        },
        "end": {
          "line": 596,
          "character": 1
        }
      },
      "preview": "float spine_skeleton_data_get_reference_scale(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_data_dispose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 598,
          "character": 0
        },
        "end": {
          "line": 601,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_data_dispose(spine_skeleton_data data) {"
    },
    {
      "name": "spine_skeleton_drawable_create",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 605,
          "character": 0
        },
        "end": {
          "line": 618,
          "character": 1
        }
      },
      "preview": "spine_skeleton_drawable spine_skeleton_drawable_create(spine_skeleton_data skeletonData) {"
    },
    {
      "name": "spine_skeleton_drawable_dispose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 620,
          "character": 0
        },
        "end": {
          "line": 629,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_drawable_dispose(spine_skeleton_drawable drawable) {"
    },
    {
      "name": "spine_skeleton_drawable_render",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 631,
          "character": 0
        },
        "end": {
          "line": 637,
          "character": 1
        }
      },
      "preview": "spine_render_command spine_skeleton_drawable_render(spine_skeleton_drawable drawable) {"
    },
    {
      "name": "spine_skeleton_drawable_get_skeleton",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 639,
          "character": 0
        },
        "end": {
          "line": 642,
          "character": 1
        }
      },
      "preview": "spine_skeleton spine_skeleton_drawable_get_skeleton(spine_skeleton_drawable drawable) {"
    },
    {
      "name": "spine_skeleton_drawable_get_animation_state",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 644,
          "character": 0
        },
        "end": {
          "line": 647,
          "character": 1
        }
      },
      "preview": "spine_animation_state spine_skeleton_drawable_get_animation_state(spine_skeleton_drawable drawable) {"
    },
    {
      "name": "spine_skeleton_drawable_get_animation_state_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 649,
          "character": 0
        },
        "end": {
          "line": 652,
          "character": 1
        }
      },
      "preview": "spine_animation_state_data spine_skeleton_drawable_get_animation_state_data(spine_skeleton_drawable drawable) {"
    },
    {
      "name": "spine_skeleton_drawable_get_animation_state_events",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 654,
          "character": 0
        },
        "end": {
          "line": 657,
          "character": 1
        }
      },
      "preview": "spine_animation_state_events spine_skeleton_drawable_get_animation_state_events(spine_skeleton_drawable drawable) {"
    },
    {
      "name": "spine_render_command_get_positions",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 660,
          "character": 0
        },
        "end": {
          "line": 663,
          "character": 1
        }
      },
      "preview": "float *spine_render_command_get_positions(spine_render_command command) {"
    },
    {
      "name": "spine_render_command_get_uvs",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 665,
          "character": 0
        },
        "end": {
          "line": 668,
          "character": 1
        }
      },
      "preview": "float *spine_render_command_get_uvs(spine_render_command command) {"
    },
    {
      "name": "spine_render_command_get_colors",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 670,
          "character": 0
        },
        "end": {
          "line": 673,
          "character": 1
        }
      },
      "preview": "int32_t *spine_render_command_get_colors(spine_render_command command) {"
    },
    {
      "name": "spine_render_command_get_dark_colors",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 675,
          "character": 0
        },
        "end": {
          "line": 678,
          "character": 1
        }
      },
      "preview": "int32_t *spine_render_command_get_dark_colors(spine_render_command command) {"
    },
    {
      "name": "spine_render_command_get_num_vertices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 680,
          "character": 0
        },
        "end": {
          "line": 683,
          "character": 1
        }
      },
      "preview": "int32_t spine_render_command_get_num_vertices(spine_render_command command) {"
    },
    {
      "name": "spine_render_command_get_indices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 685,
          "character": 0
        },
        "end": {
          "line": 688,
          "character": 1
        }
      },
      "preview": "uint16_t *spine_render_command_get_indices(spine_render_command command) {"
    },
    {
      "name": "spine_render_command_get_num_indices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 690,
          "character": 0
        },
        "end": {
          "line": 693,
          "character": 1
        }
      },
      "preview": "int32_t spine_render_command_get_num_indices(spine_render_command command) {"
    },
    {
      "name": "spine_render_command_get_atlas_page",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 695,
          "character": 0
        },
        "end": {
          "line": 698,
          "character": 1
        }
      },
      "preview": "int32_t spine_render_command_get_atlas_page(spine_render_command command) {"
    },
    {
      "name": "spine_render_command_get_blend_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 700,
          "character": 0
        },
        "end": {
          "line": 703,
          "character": 1
        }
      },
      "preview": "spine_blend_mode spine_render_command_get_blend_mode(spine_render_command command) {"
    },
    {
      "name": "spine_render_command_get_next",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 705,
          "character": 0
        },
        "end": {
          "line": 708,
          "character": 1
        }
      },
      "preview": "spine_render_command spine_render_command_get_next(spine_render_command command) {"
    },
    {
      "name": "spine_animation_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 712,
          "character": 0
        },
        "end": {
          "line": 716,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_animation_get_name(spine_animation animation) {"
    },
    {
      "name": "spine_animation_get_duration",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 718,
          "character": 0
        },
        "end": {
          "line": 722,
          "character": 1
        }
      },
      "preview": "float spine_animation_get_duration(spine_animation animation) {"
    },
    {
      "name": "spine_animation_state_data_get_skeleton_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 725,
          "character": 0
        },
        "end": {
          "line": 729,
          "character": 1
        }
      },
      "preview": "spine_skeleton_data spine_animation_state_data_get_skeleton_data(spine_animation_state_data stateData) {"
    },
    {
      "name": "spine_animation_state_data_get_default_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 731,
          "character": 0
        },
        "end": {
          "line": 735,
          "character": 1
        }
      },
      "preview": "float spine_animation_state_data_get_default_mix(spine_animation_state_data stateData) {"
    },
    {
      "name": "spine_animation_state_data_set_default_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 737,
          "character": 0
        },
        "end": {
          "line": 741,
          "character": 1
        }
      },
      "preview": "void spine_animation_state_data_set_default_mix(spine_animation_state_data stateData, float defaultMix) {"
    },
    {
      "name": "spine_animation_state_data_set_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 743,
          "character": 0
        },
        "end": {
          "line": 748,
          "character": 1
        }
      },
      "preview": "void spine_animation_state_data_set_mix(spine_animation_state_data stateData, spine_animation from, spine_animation to, float duration) {"
    },
    {
      "name": "spine_animation_state_data_get_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 750,
          "character": 0
        },
        "end": {
          "line": 755,
          "character": 1
        }
      },
      "preview": "float spine_animation_state_data_get_mix(spine_animation_state_data stateData, spine_animation from, spine_animation to) {"
    },
    {
      "name": "spine_animation_state_data_set_mix_by_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 757,
          "character": 0
        },
        "end": {
          "line": 762,
          "character": 1
        }
      },
      "preview": "void spine_animation_state_data_set_mix_by_name(spine_animation_state_data stateData, const utf8 *fromName, const utf8 *toName, float duration) {"
    },
    {
      "name": "spine_animation_state_data_get_mix_by_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 764,
          "character": 0
        },
        "end": {
          "line": 771,
          "character": 1
        }
      },
      "preview": "float spine_animation_state_data_get_mix_by_name(spine_animation_state_data stateData, const utf8 *fromName, const utf8 *toName) {"
    },
    {
      "name": "spine_animation_state_data_clear",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 773,
          "character": 0
        },
        "end": {
          "line": 777,
          "character": 1
        }
      },
      "preview": "void spine_animation_state_data_clear(spine_animation_state_data stateData) {"
    },
    {
      "name": "spine_animation_state_update",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 780,
          "character": 0
        },
        "end": {
          "line": 784,
          "character": 1
        }
      },
      "preview": "void spine_animation_state_update(spine_animation_state state, float delta) {"
    },
    {
      "name": "spine_animation_state_dispose_track_entry",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 786,
          "character": 0
        },
        "end": {
          "line": 791,
          "character": 1
        }
      },
      "preview": "void spine_animation_state_dispose_track_entry(spine_animation_state state, spine_track_entry entry) {"
    },
    {
      "name": "spine_animation_state_apply",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 793,
          "character": 0
        },
        "end": {
          "line": 797,
          "character": 1
        }
      },
      "preview": "void spine_animation_state_apply(spine_animation_state state, spine_skeleton skeleton) {"
    },
    {
      "name": "spine_animation_state_clear_tracks",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 799,
          "character": 0
        },
        "end": {
          "line": 803,
          "character": 1
        }
      },
      "preview": "void spine_animation_state_clear_tracks(spine_animation_state state) {"
    },
    {
      "name": "spine_animation_state_get_num_tracks",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 805,
          "character": 0
        },
        "end": {
          "line": 809,
          "character": 1
        }
      },
      "preview": "int32_t spine_animation_state_get_num_tracks(spine_animation_state state) {"
    },
    {
      "name": "spine_animation_state_clear_track",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 811,
          "character": 0
        },
        "end": {
          "line": 815,
          "character": 1
        }
      },
      "preview": "void spine_animation_state_clear_track(spine_animation_state state, int32_t trackIndex) {"
    },
    {
      "name": "spine_animation_state_set_animation_by_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 817,
          "character": 0
        },
        "end": {
          "line": 821,
          "character": 1
        }
      },
      "preview": "spine_track_entry spine_animation_state_set_animation_by_name(spine_animation_state state, int32_t trackIndex, const utf8 *animationName, spine_bool loop) {"
    },
    {
      "name": "spine_animation_state_set_animation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 823,
          "character": 0
        },
        "end": {
          "line": 827,
          "character": 1
        }
      },
      "preview": "spine_track_entry spine_animation_state_set_animation(spine_animation_state state, int32_t trackIndex, spine_animation animation, spine_bool loop) {"
    },
    {
      "name": "spine_animation_state_add_animation_by_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 829,
          "character": 0
        },
        "end": {
          "line": 833,
          "character": 1
        }
      },
      "preview": "spine_track_entry spine_animation_state_add_animation_by_name(spine_animation_state state, int32_t trackIndex, const utf8 *animationName, spine_bool loop, float delay) {"
    },
    {
      "name": "spine_animation_state_add_animation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 835,
          "character": 0
        },
        "end": {
          "line": 839,
          "character": 1
        }
      },
      "preview": "spine_track_entry spine_animation_state_add_animation(spine_animation_state state, int32_t trackIndex, spine_animation animation, spine_bool loop, float delay) {"
    },
    {
      "name": "spine_animation_state_set_empty_animation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 841,
          "character": 0
        },
        "end": {
          "line": 845,
          "character": 1
        }
      },
      "preview": "spine_track_entry spine_animation_state_set_empty_animation(spine_animation_state state, int32_t trackIndex, float mixDuration) {"
    },
    {
      "name": "spine_animation_state_add_empty_animation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 847,
          "character": 0
        },
        "end": {
          "line": 851,
          "character": 1
        }
      },
      "preview": "spine_track_entry spine_animation_state_add_empty_animation(spine_animation_state state, int32_t trackIndex, float mixDuration, float delay) {"
    },
    {
      "name": "spine_animation_state_set_empty_animations",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 853,
          "character": 0
        },
        "end": {
          "line": 857,
          "character": 1
        }
      },
      "preview": "void spine_animation_state_set_empty_animations(spine_animation_state state, float mixDuration) {"
    },
    {
      "name": "spine_animation_state_get_current",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 859,
          "character": 0
        },
        "end": {
          "line": 863,
          "character": 1
        }
      },
      "preview": "spine_track_entry spine_animation_state_get_current(spine_animation_state state, int32_t trackIndex) {"
    },
    {
      "name": "spine_animation_state_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 865,
          "character": 0
        },
        "end": {
          "line": 869,
          "character": 1
        }
      },
      "preview": "spine_animation_state_data spine_animation_state_get_data(spine_animation_state state) {"
    },
    {
      "name": "spine_animation_state_get_time_scale",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 871,
          "character": 0
        },
        "end": {
          "line": 875,
          "character": 1
        }
      },
      "preview": "float spine_animation_state_get_time_scale(spine_animation_state state) {"
    },
    {
      "name": "spine_animation_state_set_time_scale",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 877,
          "character": 0
        },
        "end": {
          "line": 881,
          "character": 1
        }
      },
      "preview": "void spine_animation_state_set_time_scale(spine_animation_state state, float timeScale) {"
    },
    {
      "name": "spine_animation_state_events_get_num_events",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 883,
          "character": 0
        },
        "end": {
          "line": 887,
          "character": 1
        }
      },
      "preview": "int32_t spine_animation_state_events_get_num_events(spine_animation_state_events events) {"
    },
    {
      "name": "spine_animation_state_events_get_event_type",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 889,
          "character": 0
        },
        "end": {
          "line": 895,
          "character": 1
        }
      },
      "preview": "spine_event_type spine_animation_state_events_get_event_type(spine_animation_state_events events, int32_t index) {"
    },
    {
      "name": "spine_animation_state_events_get_track_entry",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 897,
          "character": 0
        },
        "end": {
          "line": 902,
          "character": 1
        }
      },
      "preview": "spine_track_entry spine_animation_state_events_get_track_entry(spine_animation_state_events events, int32_t index) {"
    },
    {
      "name": "spine_animation_state_events_get_event",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 904,
          "character": 0
        },
        "end": {
          "line": 909,
          "character": 1
        }
      },
      "preview": "spine_event spine_animation_state_events_get_event(spine_animation_state_events events, int32_t index) {"
    },
    {
      "name": "spine_animation_state_events_reset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 911,
          "character": 0
        },
        "end": {
          "line": 915,
          "character": 1
        }
      },
      "preview": "void spine_animation_state_events_reset(spine_animation_state_events events) {"
    },
    {
      "name": "spine_track_entry_get_track_index",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 919,
          "character": 0
        },
        "end": {
          "line": 923,
          "character": 1
        }
      },
      "preview": "int32_t spine_track_entry_get_track_index(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_get_animation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 925,
          "character": 0
        },
        "end": {
          "line": 929,
          "character": 1
        }
      },
      "preview": "spine_animation spine_track_entry_get_animation(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_get_previous",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 931,
          "character": 0
        },
        "end": {
          "line": 935,
          "character": 1
        }
      },
      "preview": "spine_track_entry spine_track_entry_get_previous(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_get_loop",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 937,
          "character": 0
        },
        "end": {
          "line": 941,
          "character": 1
        }
      },
      "preview": "spine_bool spine_track_entry_get_loop(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_loop",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 943,
          "character": 0
        },
        "end": {
          "line": 947,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_loop(spine_track_entry entry, spine_bool loop) {"
    },
    {
      "name": "spine_track_entry_get_hold_previous",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 949,
          "character": 0
        },
        "end": {
          "line": 953,
          "character": 1
        }
      },
      "preview": "spine_bool spine_track_entry_get_hold_previous(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_hold_previous",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 955,
          "character": 0
        },
        "end": {
          "line": 959,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_hold_previous(spine_track_entry entry, spine_bool holdPrevious) {"
    },
    {
      "name": "spine_track_entry_get_reverse",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 961,
          "character": 0
        },
        "end": {
          "line": 965,
          "character": 1
        }
      },
      "preview": "spine_bool spine_track_entry_get_reverse(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_reverse",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 967,
          "character": 0
        },
        "end": {
          "line": 971,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_reverse(spine_track_entry entry, spine_bool reverse) {"
    },
    {
      "name": "spine_track_entry_get_shortest_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 973,
          "character": 0
        },
        "end": {
          "line": 977,
          "character": 1
        }
      },
      "preview": "spine_bool spine_track_entry_get_shortest_rotation(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_shortest_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 979,
          "character": 0
        },
        "end": {
          "line": 983,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_shortest_rotation(spine_track_entry entry, spine_bool shortestRotation) {"
    },
    {
      "name": "spine_track_entry_get_delay",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 985,
          "character": 0
        },
        "end": {
          "line": 989,
          "character": 1
        }
      },
      "preview": "float spine_track_entry_get_delay(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_delay",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 991,
          "character": 0
        },
        "end": {
          "line": 995,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_delay(spine_track_entry entry, float delay) {"
    },
    {
      "name": "spine_track_entry_get_track_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 997,
          "character": 0
        },
        "end": {
          "line": 1001,
          "character": 1
        }
      },
      "preview": "float spine_track_entry_get_track_time(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_track_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1003,
          "character": 0
        },
        "end": {
          "line": 1007,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_track_time(spine_track_entry entry, float trackTime) {"
    },
    {
      "name": "spine_track_entry_get_track_end",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1009,
          "character": 0
        },
        "end": {
          "line": 1013,
          "character": 1
        }
      },
      "preview": "float spine_track_entry_get_track_end(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_track_end",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1015,
          "character": 0
        },
        "end": {
          "line": 1019,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_track_end(spine_track_entry entry, float trackEnd) {"
    },
    {
      "name": "spine_track_entry_get_animation_start",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1021,
          "character": 0
        },
        "end": {
          "line": 1025,
          "character": 1
        }
      },
      "preview": "float spine_track_entry_get_animation_start(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_animation_start",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1027,
          "character": 0
        },
        "end": {
          "line": 1031,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_animation_start(spine_track_entry entry, float animationStart) {"
    },
    {
      "name": "spine_track_entry_get_animation_end",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1033,
          "character": 0
        },
        "end": {
          "line": 1037,
          "character": 1
        }
      },
      "preview": "float spine_track_entry_get_animation_end(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_animation_end",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1039,
          "character": 0
        },
        "end": {
          "line": 1043,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_animation_end(spine_track_entry entry, float animationEnd) {"
    },
    {
      "name": "spine_track_entry_get_animation_last",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1045,
          "character": 0
        },
        "end": {
          "line": 1049,
          "character": 1
        }
      },
      "preview": "float spine_track_entry_get_animation_last(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_animation_last",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1051,
          "character": 0
        },
        "end": {
          "line": 1055,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_animation_last(spine_track_entry entry, float animationLast) {"
    },
    {
      "name": "spine_track_entry_get_animation_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1057,
          "character": 0
        },
        "end": {
          "line": 1061,
          "character": 1
        }
      },
      "preview": "float spine_track_entry_get_animation_time(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_get_time_scale",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1063,
          "character": 0
        },
        "end": {
          "line": 1067,
          "character": 1
        }
      },
      "preview": "float spine_track_entry_get_time_scale(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_time_scale",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1069,
          "character": 0
        },
        "end": {
          "line": 1073,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_time_scale(spine_track_entry entry, float timeScale) {"
    },
    {
      "name": "spine_track_entry_get_alpha",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1075,
          "character": 0
        },
        "end": {
          "line": 1079,
          "character": 1
        }
      },
      "preview": "float spine_track_entry_get_alpha(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_alpha",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1081,
          "character": 0
        },
        "end": {
          "line": 1085,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_alpha(spine_track_entry entry, float alpha) {"
    },
    {
      "name": "spine_track_entry_get_event_threshold",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1087,
          "character": 0
        },
        "end": {
          "line": 1091,
          "character": 1
        }
      },
      "preview": "float spine_track_entry_get_event_threshold(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_event_threshold",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1093,
          "character": 0
        },
        "end": {
          "line": 1097,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_event_threshold(spine_track_entry entry, float eventThreshold) {"
    },
    {
      "name": "spine_track_entry_get_alpha_attachment_threshold",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1099,
          "character": 0
        },
        "end": {
          "line": 1103,
          "character": 1
        }
      },
      "preview": "float spine_track_entry_get_alpha_attachment_threshold(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_alpha_attachment_threshold",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1105,
          "character": 0
        },
        "end": {
          "line": 1109,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_alpha_attachment_threshold(spine_track_entry entry, float attachmentThreshold) {"
    },
    {
      "name": "spine_track_entry_get_mix_attachment_threshold",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1111,
          "character": 0
        },
        "end": {
          "line": 1115,
          "character": 1
        }
      },
      "preview": "float spine_track_entry_get_mix_attachment_threshold(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_mix_attachment_threshold",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1117,
          "character": 0
        },
        "end": {
          "line": 1121,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_mix_attachment_threshold(spine_track_entry entry, float attachmentThreshold) {"
    },
    {
      "name": "spine_track_entry_get_mix_draw_order_threshold",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1123,
          "character": 0
        },
        "end": {
          "line": 1127,
          "character": 1
        }
      },
      "preview": "float spine_track_entry_get_mix_draw_order_threshold(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_mix_draw_order_threshold",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1129,
          "character": 0
        },
        "end": {
          "line": 1133,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_mix_draw_order_threshold(spine_track_entry entry, float drawOrderThreshold) {"
    },
    {
      "name": "spine_track_entry_get_next",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1135,
          "character": 0
        },
        "end": {
          "line": 1139,
          "character": 1
        }
      },
      "preview": "spine_track_entry spine_track_entry_get_next(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_is_complete",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1141,
          "character": 0
        },
        "end": {
          "line": 1145,
          "character": 1
        }
      },
      "preview": "spine_bool spine_track_entry_is_complete(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_get_mix_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1147,
          "character": 0
        },
        "end": {
          "line": 1151,
          "character": 1
        }
      },
      "preview": "float spine_track_entry_get_mix_time(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_mix_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1153,
          "character": 0
        },
        "end": {
          "line": 1157,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_mix_time(spine_track_entry entry, float mixTime) {"
    },
    {
      "name": "spine_track_entry_get_mix_duration",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1159,
          "character": 0
        },
        "end": {
          "line": 1163,
          "character": 1
        }
      },
      "preview": "float spine_track_entry_get_mix_duration(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_mix_duration",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1165,
          "character": 0
        },
        "end": {
          "line": 1169,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_mix_duration(spine_track_entry entry, float mixDuration) {"
    },
    {
      "name": "spine_track_entry_get_mix_blend",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1171,
          "character": 0
        },
        "end": {
          "line": 1175,
          "character": 1
        }
      },
      "preview": "spine_mix_blend spine_track_entry_get_mix_blend(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_set_mix_blend",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1177,
          "character": 0
        },
        "end": {
          "line": 1181,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_set_mix_blend(spine_track_entry entry, spine_mix_blend mixBlend) {"
    },
    {
      "name": "spine_track_entry_get_mixing_from",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1183,
          "character": 0
        },
        "end": {
          "line": 1187,
          "character": 1
        }
      },
      "preview": "spine_track_entry spine_track_entry_get_mixing_from(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_get_mixing_to",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1189,
          "character": 0
        },
        "end": {
          "line": 1193,
          "character": 1
        }
      },
      "preview": "spine_track_entry spine_track_entry_get_mixing_to(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_reset_rotation_directions",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1195,
          "character": 0
        },
        "end": {
          "line": 1199,
          "character": 1
        }
      },
      "preview": "void spine_track_entry_reset_rotation_directions(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_get_track_complete",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1201,
          "character": 0
        },
        "end": {
          "line": 1205,
          "character": 1
        }
      },
      "preview": "float spine_track_entry_get_track_complete(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_was_applied",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1207,
          "character": 0
        },
        "end": {
          "line": 1211,
          "character": 1
        }
      },
      "preview": "spine_bool spine_track_entry_was_applied(spine_track_entry entry) {"
    },
    {
      "name": "spine_track_entry_is_next_ready",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1213,
          "character": 0
        },
        "end": {
          "line": 1217,
          "character": 1
        }
      },
      "preview": "spine_bool spine_track_entry_is_next_ready(spine_track_entry entry) {"
    },
    {
      "name": "spine_skeleton_update_cache",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1221,
          "character": 0
        },
        "end": {
          "line": 1225,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_update_cache(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_update_world_transform",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1227,
          "character": 0
        },
        "end": {
          "line": 1231,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_update_world_transform(spine_skeleton skeleton, spine_physics physics) {"
    },
    {
      "name": "spine_skeleton_update_world_transform_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1233,
          "character": 0
        },
        "end": {
          "line": 1239,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_update_world_transform_bone(spine_skeleton skeleton, spine_physics physics, spine_bone parent) {"
    },
    {
      "name": "spine_skeleton_set_to_setup_pose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1241,
          "character": 0
        },
        "end": {
          "line": 1245,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_set_to_setup_pose(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_set_bones_to_setup_pose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1247,
          "character": 0
        },
        "end": {
          "line": 1251,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_set_bones_to_setup_pose(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_set_slots_to_setup_pose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1253,
          "character": 0
        },
        "end": {
          "line": 1257,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_set_slots_to_setup_pose(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_find_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1259,
          "character": 0
        },
        "end": {
          "line": 1263,
          "character": 1
        }
      },
      "preview": "spine_bone spine_skeleton_find_bone(spine_skeleton skeleton, const utf8 *boneName) {"
    },
    {
      "name": "spine_skeleton_find_slot",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1265,
          "character": 0
        },
        "end": {
          "line": 1269,
          "character": 1
        }
      },
      "preview": "spine_slot spine_skeleton_find_slot(spine_skeleton skeleton, const utf8 *slotName) {"
    },
    {
      "name": "spine_skeleton_set_skin_by_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1271,
          "character": 0
        },
        "end": {
          "line": 1275,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_set_skin_by_name(spine_skeleton skeleton, const utf8 *skinName) {"
    },
    {
      "name": "spine_skeleton_set_skin",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1277,
          "character": 0
        },
        "end": {
          "line": 1282,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_set_skin(spine_skeleton skeleton, spine_skin skin) {"
    },
    {
      "name": "spine_skeleton_get_attachment_by_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1284,
          "character": 0
        },
        "end": {
          "line": 1288,
          "character": 1
        }
      },
      "preview": "spine_attachment spine_skeleton_get_attachment_by_name(spine_skeleton skeleton, const utf8 *slotName, const utf8 *attachmentName) {"
    },
    {
      "name": "spine_skeleton_get_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1290,
          "character": 0
        },
        "end": {
          "line": 1294,
          "character": 1
        }
      },
      "preview": "spine_attachment spine_skeleton_get_attachment(spine_skeleton skeleton, int32_t slotIndex, const utf8 *attachmentName) {"
    },
    {
      "name": "spine_skeleton_set_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1296,
          "character": 0
        },
        "end": {
          "line": 1300,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_set_attachment(spine_skeleton skeleton, const utf8 *slotName, const utf8 *attachmentName) {"
    },
    {
      "name": "spine_skeleton_find_ik_constraint",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1302,
          "character": 0
        },
        "end": {
          "line": 1306,
          "character": 1
        }
      },
      "preview": "spine_ik_constraint spine_skeleton_find_ik_constraint(spine_skeleton skeleton, const utf8 *constraintName) {"
    },
    {
      "name": "spine_skeleton_find_transform_constraint",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1308,
          "character": 0
        },
        "end": {
          "line": 1312,
          "character": 1
        }
      },
      "preview": "spine_transform_constraint spine_skeleton_find_transform_constraint(spine_skeleton skeleton, const utf8 *constraintName) {"
    },
    {
      "name": "spine_skeleton_find_path_constraint",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1314,
          "character": 0
        },
        "end": {
          "line": 1318,
          "character": 1
        }
      },
      "preview": "spine_path_constraint spine_skeleton_find_path_constraint(spine_skeleton skeleton, const utf8 *constraintName) {"
    },
    {
      "name": "spine_skeleton_find_physics_constraint",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1320,
          "character": 0
        },
        "end": {
          "line": 1324,
          "character": 1
        }
      },
      "preview": "spine_physics_constraint spine_skeleton_find_physics_constraint(spine_skeleton skeleton, const utf8 *constraintName) {"
    },
    {
      "name": "tmp_bounds",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1326,
          "character": 0
        },
        "end": {
          "line": 1326,
          "character": 24
        }
      },
      "preview": "_spine_bounds tmp_bounds;"
    },
    {
      "name": "spine_skeleton_get_bounds",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1327,
          "character": 0
        },
        "end": {
          "line": 1336,
          "character": 1
        }
      },
      "preview": "spine_bounds spine_skeleton_get_bounds(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_root_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1338,
          "character": 0
        },
        "end": {
          "line": 1342,
          "character": 1
        }
      },
      "preview": "spine_bone spine_skeleton_get_root_bone(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1344,
          "character": 0
        },
        "end": {
          "line": 1348,
          "character": 1
        }
      },
      "preview": "spine_skeleton_data spine_skeleton_get_data(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1350,
          "character": 0
        },
        "end": {
          "line": 1354,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_get_num_bones(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1356,
          "character": 0
        },
        "end": {
          "line": 1360,
          "character": 1
        }
      },
      "preview": "spine_bone *spine_skeleton_get_bones(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_num_slots",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1362,
          "character": 0
        },
        "end": {
          "line": 1366,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_get_num_slots(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_slots",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1368,
          "character": 0
        },
        "end": {
          "line": 1372,
          "character": 1
        }
      },
      "preview": "spine_slot *spine_skeleton_get_slots(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_num_draw_order",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1374,
          "character": 0
        },
        "end": {
          "line": 1378,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_get_num_draw_order(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_draw_order",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1380,
          "character": 0
        },
        "end": {
          "line": 1384,
          "character": 1
        }
      },
      "preview": "spine_slot *spine_skeleton_get_draw_order(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_num_ik_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1386,
          "character": 0
        },
        "end": {
          "line": 1390,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_get_num_ik_constraints(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_ik_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1392,
          "character": 0
        },
        "end": {
          "line": 1396,
          "character": 1
        }
      },
      "preview": "spine_ik_constraint *spine_skeleton_get_ik_constraints(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_num_transform_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1398,
          "character": 0
        },
        "end": {
          "line": 1402,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_get_num_transform_constraints(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_transform_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1404,
          "character": 0
        },
        "end": {
          "line": 1408,
          "character": 1
        }
      },
      "preview": "spine_transform_constraint *spine_skeleton_get_transform_constraints(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_num_path_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1410,
          "character": 0
        },
        "end": {
          "line": 1414,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_get_num_path_constraints(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_path_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1416,
          "character": 0
        },
        "end": {
          "line": 1420,
          "character": 1
        }
      },
      "preview": "spine_path_constraint *spine_skeleton_get_path_constraints(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_num_physics_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1422,
          "character": 0
        },
        "end": {
          "line": 1426,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_get_num_physics_constraints(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_physics_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1428,
          "character": 0
        },
        "end": {
          "line": 1432,
          "character": 1
        }
      },
      "preview": "spine_physics_constraint *spine_skeleton_get_physics_constraints(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_skin",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1434,
          "character": 0
        },
        "end": {
          "line": 1438,
          "character": 1
        }
      },
      "preview": "spine_skin spine_skeleton_get_skin(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1440,
          "character": 0
        },
        "end": {
          "line": 1444,
          "character": 1
        }
      },
      "preview": "spine_color spine_skeleton_get_color(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1446,
          "character": 0
        },
        "end": {
          "line": 1450,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_set_color(spine_skeleton skeleton, float r, float g, float b, float a) {"
    },
    {
      "name": "spine_skeleton_set_position",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1452,
          "character": 0
        },
        "end": {
          "line": 1456,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_set_position(spine_skeleton skeleton, float x, float y) {"
    },
    {
      "name": "spine_skeleton_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1458,
          "character": 0
        },
        "end": {
          "line": 1462,
          "character": 1
        }
      },
      "preview": "float spine_skeleton_get_x(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_set_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1464,
          "character": 0
        },
        "end": {
          "line": 1468,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_set_x(spine_skeleton skeleton, float x) {"
    },
    {
      "name": "spine_skeleton_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1470,
          "character": 0
        },
        "end": {
          "line": 1474,
          "character": 1
        }
      },
      "preview": "float spine_skeleton_get_y(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_set_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1476,
          "character": 0
        },
        "end": {
          "line": 1480,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_set_y(spine_skeleton skeleton, float y) {"
    },
    {
      "name": "spine_skeleton_set_scale",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1482,
          "character": 0
        },
        "end": {
          "line": 1487,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_set_scale(spine_skeleton skeleton, float scaleX, float scaleY) {"
    },
    {
      "name": "spine_skeleton_get_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1489,
          "character": 0
        },
        "end": {
          "line": 1493,
          "character": 1
        }
      },
      "preview": "float spine_skeleton_get_scale_x(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_set_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1495,
          "character": 0
        },
        "end": {
          "line": 1499,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_set_scale_x(spine_skeleton skeleton, float scaleX) {"
    },
    {
      "name": "spine_skeleton_get_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1501,
          "character": 0
        },
        "end": {
          "line": 1505,
          "character": 1
        }
      },
      "preview": "float spine_skeleton_get_scale_y(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_set_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1507,
          "character": 0
        },
        "end": {
          "line": 1511,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_set_scale_y(spine_skeleton skeleton, float scaleY) {"
    },
    {
      "name": "spine_skeleton_get_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1513,
          "character": 0
        },
        "end": {
          "line": 1517,
          "character": 1
        }
      },
      "preview": "float spine_skeleton_get_time(spine_skeleton skeleton) {"
    },
    {
      "name": "spine_skeleton_set_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1519,
          "character": 0
        },
        "end": {
          "line": 1523,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_set_time(spine_skeleton skeleton, float time) {"
    },
    {
      "name": "spine_skeleton_update",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1525,
          "character": 0
        },
        "end": {
          "line": 1529,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_update(spine_skeleton skeleton, float delta) {"
    },
    {
      "name": "spine_event_data_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1532,
          "character": 0
        },
        "end": {
          "line": 1536,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_event_data_get_name(spine_event_data event) {"
    },
    {
      "name": "spine_event_data_get_int_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1538,
          "character": 0
        },
        "end": {
          "line": 1542,
          "character": 1
        }
      },
      "preview": "int32_t spine_event_data_get_int_value(spine_event_data event) {"
    },
    {
      "name": "spine_event_data_set_int_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1544,
          "character": 0
        },
        "end": {
          "line": 1548,
          "character": 1
        }
      },
      "preview": "void spine_event_data_set_int_value(spine_event_data event, int32_t value) {"
    },
    {
      "name": "spine_event_data_get_float_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1550,
          "character": 0
        },
        "end": {
          "line": 1554,
          "character": 1
        }
      },
      "preview": "float spine_event_data_get_float_value(spine_event_data event) {"
    },
    {
      "name": "spine_event_data_set_float_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1556,
          "character": 0
        },
        "end": {
          "line": 1560,
          "character": 1
        }
      },
      "preview": "void spine_event_data_set_float_value(spine_event_data event, float value) {"
    },
    {
      "name": "spine_event_data_get_string_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1562,
          "character": 0
        },
        "end": {
          "line": 1566,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_event_data_get_string_value(spine_event_data event) {"
    },
    {
      "name": "spine_event_data_set_string_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1568,
          "character": 0
        },
        "end": {
          "line": 1572,
          "character": 1
        }
      },
      "preview": "void spine_event_data_set_string_value(spine_event_data event, const utf8 *value) {"
    },
    {
      "name": "spine_event_data_get_audio_path",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1574,
          "character": 0
        },
        "end": {
          "line": 1578,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_event_data_get_audio_path(spine_event_data event) {"
    },
    {
      "name": "spine_event_data_get_volume",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1580,
          "character": 0
        },
        "end": {
          "line": 1584,
          "character": 1
        }
      },
      "preview": "float spine_event_data_get_volume(spine_event_data event) {"
    },
    {
      "name": "spine_event_data_set_volume",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1586,
          "character": 0
        },
        "end": {
          "line": 1590,
          "character": 1
        }
      },
      "preview": "void spine_event_data_set_volume(spine_event_data event, float volume) {"
    },
    {
      "name": "spine_event_data_get_balance",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1592,
          "character": 0
        },
        "end": {
          "line": 1596,
          "character": 1
        }
      },
      "preview": "float spine_event_data_get_balance(spine_event_data event) {"
    },
    {
      "name": "spine_event_data_set_balance",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1598,
          "character": 0
        },
        "end": {
          "line": 1602,
          "character": 1
        }
      },
      "preview": "void spine_event_data_set_balance(spine_event_data event, float balance) {"
    },
    {
      "name": "spine_event_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1606,
          "character": 0
        },
        "end": {
          "line": 1610,
          "character": 1
        }
      },
      "preview": "spine_event_data spine_event_get_data(spine_event event) {"
    },
    {
      "name": "spine_event_get_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1612,
          "character": 0
        },
        "end": {
          "line": 1616,
          "character": 1
        }
      },
      "preview": "float spine_event_get_time(spine_event event) {"
    },
    {
      "name": "spine_event_get_int_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1618,
          "character": 0
        },
        "end": {
          "line": 1622,
          "character": 1
        }
      },
      "preview": "int32_t spine_event_get_int_value(spine_event event) {"
    },
    {
      "name": "spine_event_set_int_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1624,
          "character": 0
        },
        "end": {
          "line": 1628,
          "character": 1
        }
      },
      "preview": "void spine_event_set_int_value(spine_event event, int32_t value) {"
    },
    {
      "name": "spine_event_get_float_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1630,
          "character": 0
        },
        "end": {
          "line": 1634,
          "character": 1
        }
      },
      "preview": "float spine_event_get_float_value(spine_event event) {"
    },
    {
      "name": "spine_event_set_float_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1636,
          "character": 0
        },
        "end": {
          "line": 1640,
          "character": 1
        }
      },
      "preview": "void spine_event_set_float_value(spine_event event, float value) {"
    },
    {
      "name": "spine_event_get_string_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1642,
          "character": 0
        },
        "end": {
          "line": 1646,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_event_get_string_value(spine_event event) {"
    },
    {
      "name": "spine_event_set_string_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1648,
          "character": 0
        },
        "end": {
          "line": 1652,
          "character": 1
        }
      },
      "preview": "void spine_event_set_string_value(spine_event event, const utf8 *value) {"
    },
    {
      "name": "spine_event_get_volume",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1654,
          "character": 0
        },
        "end": {
          "line": 1658,
          "character": 1
        }
      },
      "preview": "float spine_event_get_volume(spine_event event) {"
    },
    {
      "name": "spine_event_set_volume",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1660,
          "character": 0
        },
        "end": {
          "line": 1664,
          "character": 1
        }
      },
      "preview": "void spine_event_set_volume(spine_event event, float volume) {"
    },
    {
      "name": "spine_event_get_balance",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1666,
          "character": 0
        },
        "end": {
          "line": 1670,
          "character": 1
        }
      },
      "preview": "float spine_event_get_balance(spine_event event) {"
    },
    {
      "name": "spine_event_set_balance",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1672,
          "character": 0
        },
        "end": {
          "line": 1676,
          "character": 1
        }
      },
      "preview": "void spine_event_set_balance(spine_event event, float balance) {"
    },
    {
      "name": "spine_slot_data_get_index",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1679,
          "character": 0
        },
        "end": {
          "line": 1683,
          "character": 1
        }
      },
      "preview": "int32_t spine_slot_data_get_index(spine_slot_data slot) {"
    },
    {
      "name": "spine_slot_data_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1685,
          "character": 0
        },
        "end": {
          "line": 1689,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_slot_data_get_name(spine_slot_data slot) {"
    },
    {
      "name": "spine_slot_data_get_bone_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1691,
          "character": 0
        },
        "end": {
          "line": 1695,
          "character": 1
        }
      },
      "preview": "spine_bone_data spine_slot_data_get_bone_data(spine_slot_data slot) {"
    },
    {
      "name": "spine_slot_data_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1697,
          "character": 0
        },
        "end": {
          "line": 1701,
          "character": 1
        }
      },
      "preview": "spine_color spine_slot_data_get_color(spine_slot_data slot) {"
    },
    {
      "name": "spine_slot_data_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1703,
          "character": 0
        },
        "end": {
          "line": 1707,
          "character": 1
        }
      },
      "preview": "void spine_slot_data_set_color(spine_slot_data slot, float r, float g, float b, float a) {"
    },
    {
      "name": "spine_slot_data_get_dark_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1709,
          "character": 0
        },
        "end": {
          "line": 1713,
          "character": 1
        }
      },
      "preview": "spine_color spine_slot_data_get_dark_color(spine_slot_data slot) {"
    },
    {
      "name": "spine_slot_data_set_dark_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1715,
          "character": 0
        },
        "end": {
          "line": 1719,
          "character": 1
        }
      },
      "preview": "void spine_slot_data_set_dark_color(spine_slot_data slot, float r, float g, float b, float a) {"
    },
    {
      "name": "spine_slot_data_get_has_dark_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1721,
          "character": 0
        },
        "end": {
          "line": 1725,
          "character": 1
        }
      },
      "preview": "spine_bool spine_slot_data_get_has_dark_color(spine_slot_data slot) {"
    },
    {
      "name": "spine_slot_data_set_has_dark_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1727,
          "character": 0
        },
        "end": {
          "line": 1731,
          "character": 1
        }
      },
      "preview": "void spine_slot_data_set_has_dark_color(spine_slot_data slot, spine_bool hasDarkColor) {"
    },
    {
      "name": "spine_slot_data_get_attachment_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1733,
          "character": 0
        },
        "end": {
          "line": 1737,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_slot_data_get_attachment_name(spine_slot_data slot) {"
    },
    {
      "name": "spine_slot_data_set_attachment_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1739,
          "character": 0
        },
        "end": {
          "line": 1743,
          "character": 1
        }
      },
      "preview": "void spine_slot_data_set_attachment_name(spine_slot_data slot, const utf8 *attachmentName) {"
    },
    {
      "name": "spine_slot_data_get_blend_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1745,
          "character": 0
        },
        "end": {
          "line": 1749,
          "character": 1
        }
      },
      "preview": "spine_blend_mode spine_slot_data_get_blend_mode(spine_slot_data slot) {"
    },
    {
      "name": "spine_slot_data_set_blend_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1751,
          "character": 0
        },
        "end": {
          "line": 1755,
          "character": 1
        }
      },
      "preview": "void spine_slot_data_set_blend_mode(spine_slot_data slot, spine_blend_mode blendMode) {"
    },
    {
      "name": "spine_slot_data_is_visible",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1757,
          "character": 0
        },
        "end": {
          "line": 1761,
          "character": 1
        }
      },
      "preview": "spine_bool spine_slot_data_is_visible(spine_slot_data slot) {"
    },
    {
      "name": "spine_slot_data_set_visible",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1763,
          "character": 0
        },
        "end": {
          "line": 1767,
          "character": 1
        }
      },
      "preview": "void spine_slot_data_set_visible(spine_slot_data slot, spine_bool visible) {"
    },
    {
      "name": "spine_slot_set_to_setup_pose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1770,
          "character": 0
        },
        "end": {
          "line": 1774,
          "character": 1
        }
      },
      "preview": "void spine_slot_set_to_setup_pose(spine_slot slot) {"
    },
    {
      "name": "spine_slot_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1776,
          "character": 0
        },
        "end": {
          "line": 1780,
          "character": 1
        }
      },
      "preview": "spine_slot_data spine_slot_get_data(spine_slot slot) {"
    },
    {
      "name": "spine_slot_get_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1782,
          "character": 0
        },
        "end": {
          "line": 1786,
          "character": 1
        }
      },
      "preview": "spine_bone spine_slot_get_bone(spine_slot slot) {"
    },
    {
      "name": "spine_slot_get_skeleton",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1788,
          "character": 0
        },
        "end": {
          "line": 1792,
          "character": 1
        }
      },
      "preview": "spine_skeleton spine_slot_get_skeleton(spine_slot slot) {"
    },
    {
      "name": "spine_slot_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1794,
          "character": 0
        },
        "end": {
          "line": 1798,
          "character": 1
        }
      },
      "preview": "spine_color spine_slot_get_color(spine_slot slot) {"
    },
    {
      "name": "spine_slot_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1800,
          "character": 0
        },
        "end": {
          "line": 1804,
          "character": 1
        }
      },
      "preview": "void spine_slot_set_color(spine_slot slot, float r, float g, float b, float a) {"
    },
    {
      "name": "spine_slot_get_dark_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1806,
          "character": 0
        },
        "end": {
          "line": 1810,
          "character": 1
        }
      },
      "preview": "spine_color spine_slot_get_dark_color(spine_slot slot) {"
    },
    {
      "name": "spine_slot_set_dark_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1812,
          "character": 0
        },
        "end": {
          "line": 1816,
          "character": 1
        }
      },
      "preview": "void spine_slot_set_dark_color(spine_slot slot, float r, float g, float b, float a) {"
    },
    {
      "name": "spine_slot_has_dark_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1818,
          "character": 0
        },
        "end": {
          "line": 1822,
          "character": 1
        }
      },
      "preview": "spine_bool spine_slot_has_dark_color(spine_slot slot) {"
    },
    {
      "name": "spine_slot_get_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1824,
          "character": 0
        },
        "end": {
          "line": 1828,
          "character": 1
        }
      },
      "preview": "spine_attachment spine_slot_get_attachment(spine_slot slot) {"
    },
    {
      "name": "spine_slot_set_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1830,
          "character": 0
        },
        "end": {
          "line": 1834,
          "character": 1
        }
      },
      "preview": "void spine_slot_set_attachment(spine_slot slot, spine_attachment attachment) {"
    },
    {
      "name": "spine_slot_get_sequence_index",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1836,
          "character": 0
        },
        "end": {
          "line": 1840,
          "character": 1
        }
      },
      "preview": "int32_t spine_slot_get_sequence_index(spine_slot slot) {"
    },
    {
      "name": "spine_slot_set_sequence_index",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1842,
          "character": 0
        },
        "end": {
          "line": 1846,
          "character": 1
        }
      },
      "preview": "void spine_slot_set_sequence_index(spine_slot slot, int32_t sequenceIndex) {"
    },
    {
      "name": "spine_bone_data_get_index",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1849,
          "character": 0
        },
        "end": {
          "line": 1853,
          "character": 1
        }
      },
      "preview": "int32_t spine_bone_data_get_index(spine_bone_data data) {"
    },
    {
      "name": "spine_bone_data_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1855,
          "character": 0
        },
        "end": {
          "line": 1859,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_bone_data_get_name(spine_bone_data data) {"
    },
    {
      "name": "spine_bone_data_get_parent",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1861,
          "character": 0
        },
        "end": {
          "line": 1865,
          "character": 1
        }
      },
      "preview": "spine_bone_data spine_bone_data_get_parent(spine_bone_data data) {"
    },
    {
      "name": "spine_bone_data_get_length",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1867,
          "character": 0
        },
        "end": {
          "line": 1871,
          "character": 1
        }
      },
      "preview": "float spine_bone_data_get_length(spine_bone_data data) {"
    },
    {
      "name": "spine_bone_data_set_length",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1873,
          "character": 0
        },
        "end": {
          "line": 1877,
          "character": 1
        }
      },
      "preview": "void spine_bone_data_set_length(spine_bone_data data, float length) {"
    },
    {
      "name": "spine_bone_data_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1879,
          "character": 0
        },
        "end": {
          "line": 1883,
          "character": 1
        }
      },
      "preview": "float spine_bone_data_get_x(spine_bone_data data) {"
    },
    {
      "name": "spine_bone_data_set_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1885,
          "character": 0
        },
        "end": {
          "line": 1889,
          "character": 1
        }
      },
      "preview": "void spine_bone_data_set_x(spine_bone_data data, float x) {"
    },
    {
      "name": "spine_bone_data_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1891,
          "character": 0
        },
        "end": {
          "line": 1895,
          "character": 1
        }
      },
      "preview": "float spine_bone_data_get_y(spine_bone_data data) {"
    },
    {
      "name": "spine_bone_data_set_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1897,
          "character": 0
        },
        "end": {
          "line": 1901,
          "character": 1
        }
      },
      "preview": "void spine_bone_data_set_y(spine_bone_data data, float y) {"
    },
    {
      "name": "spine_bone_data_get_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1903,
          "character": 0
        },
        "end": {
          "line": 1907,
          "character": 1
        }
      },
      "preview": "float spine_bone_data_get_rotation(spine_bone_data data) {"
    },
    {
      "name": "spine_bone_data_set_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1909,
          "character": 0
        },
        "end": {
          "line": 1913,
          "character": 1
        }
      },
      "preview": "void spine_bone_data_set_rotation(spine_bone_data data, float rotation) {"
    },
    {
      "name": "spine_bone_data_get_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1915,
          "character": 0
        },
        "end": {
          "line": 1919,
          "character": 1
        }
      },
      "preview": "float spine_bone_data_get_scale_x(spine_bone_data data) {"
    },
    {
      "name": "spine_bone_data_set_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1921,
          "character": 0
        },
        "end": {
          "line": 1925,
          "character": 1
        }
      },
      "preview": "void spine_bone_data_set_scale_x(spine_bone_data data, float scaleX) {"
    },
    {
      "name": "spine_bone_data_get_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1927,
          "character": 0
        },
        "end": {
          "line": 1931,
          "character": 1
        }
      },
      "preview": "float spine_bone_data_get_scale_y(spine_bone_data data) {"
    },
    {
      "name": "spine_bone_data_set_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1933,
          "character": 0
        },
        "end": {
          "line": 1937,
          "character": 1
        }
      },
      "preview": "void spine_bone_data_set_scale_y(spine_bone_data data, float scaleY) {"
    },
    {
      "name": "spine_bone_data_get_shear_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1939,
          "character": 0
        },
        "end": {
          "line": 1943,
          "character": 1
        }
      },
      "preview": "float spine_bone_data_get_shear_x(spine_bone_data data) {"
    },
    {
      "name": "spine_bone_data_set_shear_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1945,
          "character": 0
        },
        "end": {
          "line": 1949,
          "character": 1
        }
      },
      "preview": "void spine_bone_data_set_shear_x(spine_bone_data data, float shearX) {"
    },
    {
      "name": "spine_bone_data_get_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1951,
          "character": 0
        },
        "end": {
          "line": 1955,
          "character": 1
        }
      },
      "preview": "float spine_bone_data_get_shear_y(spine_bone_data data) {"
    },
    {
      "name": "spine_bone_data_set_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1957,
          "character": 0
        },
        "end": {
          "line": 1961,
          "character": 1
        }
      },
      "preview": "void spine_bone_data_set_shear_y(spine_bone_data data, float y) {"
    },
    {
      "name": "spine_bone_data_get_inherit",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1963,
          "character": 0
        },
        "end": {
          "line": 1967,
          "character": 1
        }
      },
      "preview": "spine_inherit spine_bone_data_get_inherit(spine_bone_data data) {"
    },
    {
      "name": "spine_bone_data_set_inherit",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1969,
          "character": 0
        },
        "end": {
          "line": 1973,
          "character": 1
        }
      },
      "preview": "void spine_bone_data_set_inherit(spine_bone_data data, spine_inherit inherit) {"
    },
    {
      "name": "spine_bone_data_get_is_skin_required",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1975,
          "character": 0
        },
        "end": {
          "line": 1979,
          "character": 1
        }
      },
      "preview": "spine_bool spine_bone_data_get_is_skin_required(spine_bone_data data) {"
    },
    {
      "name": "spine_bone_data_set_is_skin_required",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1981,
          "character": 0
        },
        "end": {
          "line": 1985,
          "character": 1
        }
      },
      "preview": "void spine_bone_data_set_is_skin_required(spine_bone_data data, spine_bool isSkinRequired) {"
    },
    {
      "name": "spine_bone_data_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1987,
          "character": 0
        },
        "end": {
          "line": 1991,
          "character": 1
        }
      },
      "preview": "spine_color spine_bone_data_get_color(spine_bone_data data) {"
    },
    {
      "name": "spine_bone_data_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1993,
          "character": 0
        },
        "end": {
          "line": 1997,
          "character": 1
        }
      },
      "preview": "void spine_bone_data_set_color(spine_bone_data data, float r, float g, float b, float a) {"
    },
    {
      "name": "spine_bone_data_is_visible",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 1999,
          "character": 0
        },
        "end": {
          "line": 2003,
          "character": 1
        }
      },
      "preview": "spine_bool spine_bone_data_is_visible(spine_bone_data data) {"
    },
    {
      "name": "spine_bone_data_set_visible",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2005,
          "character": 0
        },
        "end": {
          "line": 2009,
          "character": 1
        }
      },
      "preview": "void spine_bone_data_set_visible(spine_bone_data data, spine_bool isVisible) {"
    },
    {
      "name": "spine_bone_set_is_y_down",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2012,
          "character": 0
        },
        "end": {
          "line": 2014,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_is_y_down(spine_bool yDown) {"
    },
    {
      "name": "spine_bone_get_is_y_down",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2016,
          "character": 0
        },
        "end": {
          "line": 2018,
          "character": 1
        }
      },
      "preview": "spine_bool spine_bone_get_is_y_down() {"
    },
    {
      "name": "spine_bone_update",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2020,
          "character": 0
        },
        "end": {
          "line": 2024,
          "character": 1
        }
      },
      "preview": "void spine_bone_update(spine_bone bone) {"
    },
    {
      "name": "spine_bone_update_world_transform",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2026,
          "character": 0
        },
        "end": {
          "line": 2030,
          "character": 1
        }
      },
      "preview": "void spine_bone_update_world_transform(spine_bone bone) {"
    },
    {
      "name": "spine_bone_update_world_transform_with",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2032,
          "character": 0
        },
        "end": {
          "line": 2036,
          "character": 1
        }
      },
      "preview": "void spine_bone_update_world_transform_with(spine_bone bone, float x, float y, float rotation, float scaleX, float scaleY, float shearX, float shearY) {"
    },
    {
      "name": "spine_bone_update_applied_transform",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2038,
          "character": 0
        },
        "end": {
          "line": 2042,
          "character": 1
        }
      },
      "preview": "void spine_bone_update_applied_transform(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_to_setup_pose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2044,
          "character": 0
        },
        "end": {
          "line": 2048,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_to_setup_pose(spine_bone bone) {"
    },
    {
      "name": "tmp_vector",
      "kind": "variable",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2050,
          "character": 0
        },
        "end": {
          "line": 2050,
          "character": 24
        }
      },
      "preview": "_spine_vector tmp_vector;"
    },
    {
      "name": "spine_bone_world_to_local",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2051,
          "character": 0
        },
        "end": {
          "line": 2057,
          "character": 1
        }
      },
      "preview": "spine_vector spine_bone_world_to_local(spine_bone bone, float worldX, float worldY) {"
    },
    {
      "name": "spine_bone_world_to_parent",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2059,
          "character": 0
        },
        "end": {
          "line": 2065,
          "character": 1
        }
      },
      "preview": "spine_vector spine_bone_world_to_parent(spine_bone bone, float worldX, float worldY) {"
    },
    {
      "name": "spine_bone_local_to_world",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2067,
          "character": 0
        },
        "end": {
          "line": 2073,
          "character": 1
        }
      },
      "preview": "spine_vector spine_bone_local_to_world(spine_bone bone, float localX, float localY) {"
    },
    {
      "name": "spine_bone_parent_to_world",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2075,
          "character": 0
        },
        "end": {
          "line": 2081,
          "character": 1
        }
      },
      "preview": "spine_vector spine_bone_parent_to_world(spine_bone bone, float localX, float localY) {"
    },
    {
      "name": "spine_bone_world_to_local_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2083,
          "character": 0
        },
        "end": {
          "line": 2087,
          "character": 1
        }
      },
      "preview": "float spine_bone_world_to_local_rotation(spine_bone bone, float worldRotation) {"
    },
    {
      "name": "spine_bone_local_to_world_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2089,
          "character": 0
        },
        "end": {
          "line": 2093,
          "character": 1
        }
      },
      "preview": "float spine_bone_local_to_world_rotation(spine_bone bone, float localRotation) {"
    },
    {
      "name": "spine_bone_rotate_world",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2095,
          "character": 0
        },
        "end": {
          "line": 2099,
          "character": 1
        }
      },
      "preview": "void spine_bone_rotate_world(spine_bone bone, float degrees) {"
    },
    {
      "name": "spine_bone_get_world_to_local_rotation_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2101,
          "character": 0
        },
        "end": {
          "line": 2105,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_world_to_local_rotation_x(spine_bone bone) {"
    },
    {
      "name": "spine_bone_get_world_to_local_rotation_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2107,
          "character": 0
        },
        "end": {
          "line": 2111,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_world_to_local_rotation_y(spine_bone bone) {"
    },
    {
      "name": "spine_bone_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2113,
          "character": 0
        },
        "end": {
          "line": 2117,
          "character": 1
        }
      },
      "preview": "spine_bone_data spine_bone_get_data(spine_bone bone) {"
    },
    {
      "name": "spine_bone_get_skeleton",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2119,
          "character": 0
        },
        "end": {
          "line": 2123,
          "character": 1
        }
      },
      "preview": "spine_skeleton spine_bone_get_skeleton(spine_bone bone) {"
    },
    {
      "name": "spine_bone_get_parent",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2125,
          "character": 0
        },
        "end": {
          "line": 2129,
          "character": 1
        }
      },
      "preview": "spine_bone spine_bone_get_parent(spine_bone bone) {"
    },
    {
      "name": "spine_bone_get_num_children",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2131,
          "character": 0
        },
        "end": {
          "line": 2135,
          "character": 1
        }
      },
      "preview": "int32_t spine_bone_get_num_children(spine_bone bone) {"
    },
    {
      "name": "spine_bone_get_children",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2137,
          "character": 0
        },
        "end": {
          "line": 2141,
          "character": 1
        }
      },
      "preview": "spine_bone *spine_bone_get_children(spine_bone bone) {"
    },
    {
      "name": "spine_bone_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2143,
          "character": 0
        },
        "end": {
          "line": 2147,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_x(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2149,
          "character": 0
        },
        "end": {
          "line": 2153,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_x(spine_bone bone, float x) {"
    },
    {
      "name": "spine_bone_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2155,
          "character": 0
        },
        "end": {
          "line": 2159,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_y(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2161,
          "character": 0
        },
        "end": {
          "line": 2165,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_y(spine_bone bone, float y) {"
    },
    {
      "name": "spine_bone_get_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2167,
          "character": 0
        },
        "end": {
          "line": 2171,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_rotation(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2173,
          "character": 0
        },
        "end": {
          "line": 2177,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_rotation(spine_bone bone, float rotation) {"
    },
    {
      "name": "spine_bone_get_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2179,
          "character": 0
        },
        "end": {
          "line": 2183,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_scale_x(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2185,
          "character": 0
        },
        "end": {
          "line": 2189,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_scale_x(spine_bone bone, float scaleX) {"
    },
    {
      "name": "spine_bone_get_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2191,
          "character": 0
        },
        "end": {
          "line": 2195,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_scale_y(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2197,
          "character": 0
        },
        "end": {
          "line": 2201,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_scale_y(spine_bone bone, float scaleY) {"
    },
    {
      "name": "spine_bone_get_shear_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2203,
          "character": 0
        },
        "end": {
          "line": 2207,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_shear_x(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_shear_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2209,
          "character": 0
        },
        "end": {
          "line": 2213,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_shear_x(spine_bone bone, float shearX) {"
    },
    {
      "name": "spine_bone_get_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2215,
          "character": 0
        },
        "end": {
          "line": 2219,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_shear_y(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2221,
          "character": 0
        },
        "end": {
          "line": 2225,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_shear_y(spine_bone bone, float shearY) {"
    },
    {
      "name": "spine_bone_get_applied_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2227,
          "character": 0
        },
        "end": {
          "line": 2231,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_applied_rotation(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_applied_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2233,
          "character": 0
        },
        "end": {
          "line": 2237,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_applied_rotation(spine_bone bone, float rotation) {"
    },
    {
      "name": "spine_bone_get_a_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2239,
          "character": 0
        },
        "end": {
          "line": 2243,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_a_x(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_a_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2245,
          "character": 0
        },
        "end": {
          "line": 2249,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_a_x(spine_bone bone, float x) {"
    },
    {
      "name": "spine_bone_get_a_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2251,
          "character": 0
        },
        "end": {
          "line": 2255,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_a_y(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_a_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2257,
          "character": 0
        },
        "end": {
          "line": 2261,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_a_y(spine_bone bone, float y) {"
    },
    {
      "name": "spine_bone_get_a_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2263,
          "character": 0
        },
        "end": {
          "line": 2267,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_a_scale_x(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_a_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2269,
          "character": 0
        },
        "end": {
          "line": 2273,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_a_scale_x(spine_bone bone, float scaleX) {"
    },
    {
      "name": "spine_bone_get_a_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2275,
          "character": 0
        },
        "end": {
          "line": 2279,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_a_scale_y(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_a_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2281,
          "character": 0
        },
        "end": {
          "line": 2285,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_a_scale_y(spine_bone bone, float scaleY) {"
    },
    {
      "name": "spine_bone_get_a_shear_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2287,
          "character": 0
        },
        "end": {
          "line": 2291,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_a_shear_x(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_a_shear_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2293,
          "character": 0
        },
        "end": {
          "line": 2297,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_a_shear_x(spine_bone bone, float shearX) {"
    },
    {
      "name": "spine_bone_get_a_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2299,
          "character": 0
        },
        "end": {
          "line": 2303,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_a_shear_y(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_a_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2305,
          "character": 0
        },
        "end": {
          "line": 2309,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_a_shear_y(spine_bone bone, float shearY) {"
    },
    {
      "name": "spine_bone_get_a",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2311,
          "character": 0
        },
        "end": {
          "line": 2315,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_a(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_a",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2317,
          "character": 0
        },
        "end": {
          "line": 2321,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_a(spine_bone bone, float a) {"
    },
    {
      "name": "spine_bone_get_b",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2323,
          "character": 0
        },
        "end": {
          "line": 2327,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_b(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_b",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2329,
          "character": 0
        },
        "end": {
          "line": 2333,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_b(spine_bone bone, float b) {"
    },
    {
      "name": "spine_bone_get_c",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2335,
          "character": 0
        },
        "end": {
          "line": 2339,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_c(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_c",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2341,
          "character": 0
        },
        "end": {
          "line": 2345,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_c(spine_bone bone, float c) {"
    },
    {
      "name": "spine_bone_get_d",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2347,
          "character": 0
        },
        "end": {
          "line": 2351,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_d(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_d",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2353,
          "character": 0
        },
        "end": {
          "line": 2357,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_d(spine_bone bone, float d) {"
    },
    {
      "name": "spine_bone_get_world_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2359,
          "character": 0
        },
        "end": {
          "line": 2363,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_world_x(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_world_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2365,
          "character": 0
        },
        "end": {
          "line": 2369,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_world_x(spine_bone bone, float worldX) {"
    },
    {
      "name": "spine_bone_get_world_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2371,
          "character": 0
        },
        "end": {
          "line": 2375,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_world_y(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_world_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2377,
          "character": 0
        },
        "end": {
          "line": 2381,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_world_y(spine_bone bone, float worldY) {"
    },
    {
      "name": "spine_bone_get_world_rotation_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2383,
          "character": 0
        },
        "end": {
          "line": 2387,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_world_rotation_x(spine_bone bone) {"
    },
    {
      "name": "spine_bone_get_world_rotation_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2389,
          "character": 0
        },
        "end": {
          "line": 2393,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_world_rotation_y(spine_bone bone) {"
    },
    {
      "name": "spine_bone_get_world_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2395,
          "character": 0
        },
        "end": {
          "line": 2399,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_world_scale_x(spine_bone bone) {"
    },
    {
      "name": "spine_bone_get_world_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2401,
          "character": 0
        },
        "end": {
          "line": 2405,
          "character": 1
        }
      },
      "preview": "float spine_bone_get_world_scale_y(spine_bone bone) {"
    },
    {
      "name": "spine_bone_get_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2407,
          "character": 0
        },
        "end": {
          "line": 2411,
          "character": 1
        }
      },
      "preview": "spine_bool spine_bone_get_is_active(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2413,
          "character": 0
        },
        "end": {
          "line": 2417,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_is_active(spine_bone bone, spine_bool isActive) {"
    },
    {
      "name": "spine_bone_get_inherit",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2419,
          "character": 0
        },
        "end": {
          "line": 2423,
          "character": 1
        }
      },
      "preview": "spine_inherit spine_bone_get_inherit(spine_bone bone) {"
    },
    {
      "name": "spine_bone_set_inherit",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2425,
          "character": 0
        },
        "end": {
          "line": 2429,
          "character": 1
        }
      },
      "preview": "void spine_bone_set_inherit(spine_bone bone, spine_inherit inherit) {"
    },
    {
      "name": "spine_attachment_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2432,
          "character": 0
        },
        "end": {
          "line": 2436,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_attachment_get_name(spine_attachment attachment) {"
    },
    {
      "name": "spine_attachment_get_type",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2438,
          "character": 0
        },
        "end": {
          "line": 2456,
          "character": 1
        }
      },
      "preview": "spine_attachment_type spine_attachment_get_type(spine_attachment attachment) {"
    },
    {
      "name": "spine_attachment_copy",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2458,
          "character": 0
        },
        "end": {
          "line": 2462,
          "character": 1
        }
      },
      "preview": "spine_attachment spine_attachment_copy(spine_attachment attachment) {"
    },
    {
      "name": "spine_attachment_cast_to_bounding_box_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2464,
          "character": 0
        },
        "end": {
          "line": 2472,
          "character": 1
        }
      },
      "preview": "spine_bounding_box_attachment spine_attachment_cast_to_bounding_box_attachment(spine_attachment attachment) {"
    },
    {
      "name": "spine_attachment_dispose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2474,
          "character": 0
        },
        "end": {
          "line": 2478,
          "character": 1
        }
      },
      "preview": "void spine_attachment_dispose(spine_attachment attachment) {"
    },
    {
      "name": "spine_point_attachment_compute_world_position",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2481,
          "character": 0
        },
        "end": {
          "line": 2487,
          "character": 1
        }
      },
      "preview": "spine_vector spine_point_attachment_compute_world_position(spine_point_attachment attachment, spine_bone bone) {"
    },
    {
      "name": "spine_point_attachment_compute_world_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2489,
          "character": 0
        },
        "end": {
          "line": 2493,
          "character": 1
        }
      },
      "preview": "float spine_point_attachment_compute_world_rotation(spine_point_attachment attachment, spine_bone bone) {"
    },
    {
      "name": "spine_point_attachment_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2495,
          "character": 0
        },
        "end": {
          "line": 2499,
          "character": 1
        }
      },
      "preview": "float spine_point_attachment_get_x(spine_point_attachment attachment) {"
    },
    {
      "name": "spine_point_attachment_set_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2501,
          "character": 0
        },
        "end": {
          "line": 2505,
          "character": 1
        }
      },
      "preview": "void spine_point_attachment_set_x(spine_point_attachment attachment, float x) {"
    },
    {
      "name": "spine_point_attachment_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2507,
          "character": 0
        },
        "end": {
          "line": 2511,
          "character": 1
        }
      },
      "preview": "float spine_point_attachment_get_y(spine_point_attachment attachment) {"
    },
    {
      "name": "spine_point_attachment_set_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2513,
          "character": 0
        },
        "end": {
          "line": 2517,
          "character": 1
        }
      },
      "preview": "void spine_point_attachment_set_y(spine_point_attachment attachment, float y) {"
    },
    {
      "name": "spine_point_attachment_get_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2519,
          "character": 0
        },
        "end": {
          "line": 2523,
          "character": 1
        }
      },
      "preview": "float spine_point_attachment_get_rotation(spine_point_attachment attachment) {"
    },
    {
      "name": "spine_point_attachment_set_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2525,
          "character": 0
        },
        "end": {
          "line": 2529,
          "character": 1
        }
      },
      "preview": "void spine_point_attachment_set_rotation(spine_point_attachment attachment, float rotation) {"
    },
    {
      "name": "spine_point_attachment_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2531,
          "character": 0
        },
        "end": {
          "line": 2535,
          "character": 1
        }
      },
      "preview": "spine_color spine_point_attachment_get_color(spine_point_attachment attachment) {"
    },
    {
      "name": "spine_point_attachment_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2537,
          "character": 0
        },
        "end": {
          "line": 2541,
          "character": 1
        }
      },
      "preview": "void spine_point_attachment_set_color(spine_point_attachment attachment, float r, float g, float b, float a) {"
    },
    {
      "name": "spine_region_attachment_update_region",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2544,
          "character": 0
        },
        "end": {
          "line": 2548,
          "character": 1
        }
      },
      "preview": "void spine_region_attachment_update_region(spine_region_attachment attachment) {"
    },
    {
      "name": "spine_region_attachment_compute_world_vertices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2550,
          "character": 0
        },
        "end": {
          "line": 2554,
          "character": 1
        }
      },
      "preview": "void spine_region_attachment_compute_world_vertices(spine_region_attachment attachment, spine_slot slot, float *worldVertices) {"
    },
    {
      "name": "spine_region_attachment_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2556,
          "character": 0
        },
        "end": {
          "line": 2560,
          "character": 1
        }
      },
      "preview": "float spine_region_attachment_get_x(spine_region_attachment attachment) {"
    },
    {
      "name": "spine_region_attachment_set_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2562,
          "character": 0
        },
        "end": {
          "line": 2566,
          "character": 1
        }
      },
      "preview": "void spine_region_attachment_set_x(spine_region_attachment attachment, float x) {"
    },
    {
      "name": "spine_region_attachment_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2568,
          "character": 0
        },
        "end": {
          "line": 2572,
          "character": 1
        }
      },
      "preview": "float spine_region_attachment_get_y(spine_region_attachment attachment) {"
    },
    {
      "name": "spine_region_attachment_set_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2574,
          "character": 0
        },
        "end": {
          "line": 2578,
          "character": 1
        }
      },
      "preview": "void spine_region_attachment_set_y(spine_region_attachment attachment, float y) {"
    },
    {
      "name": "spine_region_attachment_get_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2580,
          "character": 0
        },
        "end": {
          "line": 2584,
          "character": 1
        }
      },
      "preview": "float spine_region_attachment_get_rotation(spine_region_attachment attachment) {"
    },
    {
      "name": "spine_region_attachment_set_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2586,
          "character": 0
        },
        "end": {
          "line": 2590,
          "character": 1
        }
      },
      "preview": "void spine_region_attachment_set_rotation(spine_region_attachment attachment, float rotation) {"
    },
    {
      "name": "spine_region_attachment_get_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2592,
          "character": 0
        },
        "end": {
          "line": 2596,
          "character": 1
        }
      },
      "preview": "float spine_region_attachment_get_scale_x(spine_region_attachment attachment) {"
    },
    {
      "name": "spine_region_attachment_set_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2598,
          "character": 0
        },
        "end": {
          "line": 2602,
          "character": 1
        }
      },
      "preview": "void spine_region_attachment_set_scale_x(spine_region_attachment attachment, float scaleX) {"
    },
    {
      "name": "spine_region_attachment_get_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2604,
          "character": 0
        },
        "end": {
          "line": 2608,
          "character": 1
        }
      },
      "preview": "float spine_region_attachment_get_scale_y(spine_region_attachment attachment) {"
    },
    {
      "name": "spine_region_attachment_set_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2610,
          "character": 0
        },
        "end": {
          "line": 2614,
          "character": 1
        }
      },
      "preview": "void spine_region_attachment_set_scale_y(spine_region_attachment attachment, float scaleY) {"
    },
    {
      "name": "spine_region_attachment_get_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2616,
          "character": 0
        },
        "end": {
          "line": 2620,
          "character": 1
        }
      },
      "preview": "float spine_region_attachment_get_width(spine_region_attachment attachment) {"
    },
    {
      "name": "spine_region_attachment_set_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2622,
          "character": 0
        },
        "end": {
          "line": 2626,
          "character": 1
        }
      },
      "preview": "void spine_region_attachment_set_width(spine_region_attachment attachment, float width) {"
    },
    {
      "name": "spine_region_attachment_get_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2628,
          "character": 0
        },
        "end": {
          "line": 2632,
          "character": 1
        }
      },
      "preview": "float spine_region_attachment_get_height(spine_region_attachment attachment) {"
    },
    {
      "name": "spine_region_attachment_set_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2634,
          "character": 0
        },
        "end": {
          "line": 2638,
          "character": 1
        }
      },
      "preview": "void spine_region_attachment_set_height(spine_region_attachment attachment, float height) {"
    },
    {
      "name": "spine_region_attachment_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2640,
          "character": 0
        },
        "end": {
          "line": 2644,
          "character": 1
        }
      },
      "preview": "spine_color spine_region_attachment_get_color(spine_region_attachment attachment) {"
    },
    {
      "name": "spine_region_attachment_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2646,
          "character": 0
        },
        "end": {
          "line": 2650,
          "character": 1
        }
      },
      "preview": "void spine_region_attachment_set_color(spine_region_attachment attachment, float r, float g, float b, float a) {"
    },
    {
      "name": "spine_region_attachment_get_path",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2652,
          "character": 0
        },
        "end": {
          "line": 2656,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_region_attachment_get_path(spine_region_attachment attachment) {"
    },
    {
      "name": "spine_region_attachment_get_region",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2658,
          "character": 0
        },
        "end": {
          "line": 2662,
          "character": 1
        }
      },
      "preview": "spine_texture_region spine_region_attachment_get_region(spine_region_attachment attachment) {"
    },
    {
      "name": "spine_region_attachment_get_sequence",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2664,
          "character": 0
        },
        "end": {
          "line": 2668,
          "character": 1
        }
      },
      "preview": "spine_sequence spine_region_attachment_get_sequence(spine_region_attachment attachment) {"
    },
    {
      "name": "spine_region_attachment_get_num_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2670,
          "character": 0
        },
        "end": {
          "line": 2674,
          "character": 1
        }
      },
      "preview": "int32_t spine_region_attachment_get_num_offset(spine_region_attachment attachment) {"
    },
    {
      "name": "spine_region_attachment_get_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2676,
          "character": 0
        },
        "end": {
          "line": 2680,
          "character": 1
        }
      },
      "preview": "float *spine_region_attachment_get_offset(spine_region_attachment attachment) {"
    },
    {
      "name": "spine_region_attachment_get_num_uvs",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2682,
          "character": 0
        },
        "end": {
          "line": 2686,
          "character": 1
        }
      },
      "preview": "int32_t spine_region_attachment_get_num_uvs(spine_region_attachment attachment) {"
    },
    {
      "name": "spine_region_attachment_get_uvs",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2688,
          "character": 0
        },
        "end": {
          "line": 2692,
          "character": 1
        }
      },
      "preview": "float *spine_region_attachment_get_uvs(spine_region_attachment attachment) {"
    },
    {
      "name": "spine_vertex_attachment_get_world_vertices_length",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2695,
          "character": 0
        },
        "end": {
          "line": 2699,
          "character": 1
        }
      },
      "preview": "int32_t spine_vertex_attachment_get_world_vertices_length(spine_vertex_attachment attachment) {"
    },
    {
      "name": "spine_vertex_attachment_compute_world_vertices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2701,
          "character": 0
        },
        "end": {
          "line": 2705,
          "character": 1
        }
      },
      "preview": "void spine_vertex_attachment_compute_world_vertices(spine_vertex_attachment attachment, spine_slot slot, float *worldVertices) {"
    },
    {
      "name": "spine_vertex_attachment_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2707,
          "character": 0
        },
        "end": {
          "line": 2711,
          "character": 1
        }
      },
      "preview": "int32_t spine_vertex_attachment_get_num_bones(spine_vertex_attachment attachment) {"
    },
    {
      "name": "spine_vertex_attachment_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2713,
          "character": 0
        },
        "end": {
          "line": 2717,
          "character": 1
        }
      },
      "preview": "int32_t *spine_vertex_attachment_get_bones(spine_vertex_attachment attachment) {"
    },
    {
      "name": "spine_vertex_attachment_get_num_vertices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2720,
          "character": 0
        },
        "end": {
          "line": 2724,
          "character": 1
        }
      },
      "preview": "int32_t spine_vertex_attachment_get_num_vertices(spine_vertex_attachment attachment) {"
    },
    {
      "name": "spine_vertex_attachment_get_vertices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2726,
          "character": 0
        },
        "end": {
          "line": 2730,
          "character": 1
        }
      },
      "preview": "float *spine_vertex_attachment_get_vertices(spine_vertex_attachment attachment) {"
    },
    {
      "name": "spine_vertex_attachment_get_timeline_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2732,
          "character": 0
        },
        "end": {
          "line": 2736,
          "character": 1
        }
      },
      "preview": "spine_attachment spine_vertex_attachment_get_timeline_attachment(spine_vertex_attachment attachment) {"
    },
    {
      "name": "spine_vertex_attachment_set_timeline_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2738,
          "character": 0
        },
        "end": {
          "line": 2742,
          "character": 1
        }
      },
      "preview": "void spine_vertex_attachment_set_timeline_attachment(spine_vertex_attachment attachment, spine_attachment timelineAttachment) {"
    },
    {
      "name": "spine_mesh_attachment_update_region",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2745,
          "character": 0
        },
        "end": {
          "line": 2749,
          "character": 1
        }
      },
      "preview": "void spine_mesh_attachment_update_region(spine_mesh_attachment attachment) {"
    },
    {
      "name": "spine_mesh_attachment_get_hull_length",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2751,
          "character": 0
        },
        "end": {
          "line": 2755,
          "character": 1
        }
      },
      "preview": "int32_t spine_mesh_attachment_get_hull_length(spine_mesh_attachment attachment) {"
    },
    {
      "name": "spine_mesh_attachment_set_hull_length",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2757,
          "character": 0
        },
        "end": {
          "line": 2761,
          "character": 1
        }
      },
      "preview": "void spine_mesh_attachment_set_hull_length(spine_mesh_attachment attachment, int32_t hullLength) {"
    },
    {
      "name": "spine_mesh_attachment_get_num_region_uvs",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2763,
          "character": 0
        },
        "end": {
          "line": 2767,
          "character": 1
        }
      },
      "preview": "int32_t spine_mesh_attachment_get_num_region_uvs(spine_mesh_attachment attachment) {"
    },
    {
      "name": "spine_mesh_attachment_get_region_uvs",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2769,
          "character": 0
        },
        "end": {
          "line": 2773,
          "character": 1
        }
      },
      "preview": "float *spine_mesh_attachment_get_region_uvs(spine_mesh_attachment attachment) {"
    },
    {
      "name": "spine_mesh_attachment_get_num_uvs",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2775,
          "character": 0
        },
        "end": {
          "line": 2779,
          "character": 1
        }
      },
      "preview": "int32_t spine_mesh_attachment_get_num_uvs(spine_mesh_attachment attachment) {"
    },
    {
      "name": "spine_mesh_attachment_get_uvs",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2781,
          "character": 0
        },
        "end": {
          "line": 2785,
          "character": 1
        }
      },
      "preview": "float *spine_mesh_attachment_get_uvs(spine_mesh_attachment attachment) {"
    },
    {
      "name": "spine_mesh_attachment_get_num_triangles",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2787,
          "character": 0
        },
        "end": {
          "line": 2791,
          "character": 1
        }
      },
      "preview": "int32_t spine_mesh_attachment_get_num_triangles(spine_mesh_attachment attachment) {"
    },
    {
      "name": "spine_mesh_attachment_get_triangles",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2793,
          "character": 0
        },
        "end": {
          "line": 2797,
          "character": 1
        }
      },
      "preview": "uint16_t *spine_mesh_attachment_get_triangles(spine_mesh_attachment attachment) {"
    },
    {
      "name": "spine_mesh_attachment_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2799,
          "character": 0
        },
        "end": {
          "line": 2803,
          "character": 1
        }
      },
      "preview": "spine_color spine_mesh_attachment_get_color(spine_mesh_attachment attachment) {"
    },
    {
      "name": "spine_mesh_attachment_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2805,
          "character": 0
        },
        "end": {
          "line": 2809,
          "character": 1
        }
      },
      "preview": "void spine_mesh_attachment_set_color(spine_mesh_attachment attachment, float r, float g, float b, float a) {"
    },
    {
      "name": "spine_mesh_attachment_get_path",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2811,
          "character": 0
        },
        "end": {
          "line": 2815,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_mesh_attachment_get_path(spine_mesh_attachment attachment) {"
    },
    {
      "name": "spine_mesh_attachment_get_region",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2817,
          "character": 0
        },
        "end": {
          "line": 2821,
          "character": 1
        }
      },
      "preview": "spine_texture_region spine_mesh_attachment_get_region(spine_mesh_attachment attachment) {"
    },
    {
      "name": "spine_mesh_attachment_get_sequence",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2823,
          "character": 0
        },
        "end": {
          "line": 2827,
          "character": 1
        }
      },
      "preview": "spine_sequence spine_mesh_attachment_get_sequence(spine_mesh_attachment attachment) {"
    },
    {
      "name": "spine_mesh_attachment_get_parent_mesh",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2829,
          "character": 0
        },
        "end": {
          "line": 2833,
          "character": 1
        }
      },
      "preview": "spine_mesh_attachment spine_mesh_attachment_get_parent_mesh(spine_mesh_attachment attachment) {"
    },
    {
      "name": "spine_mesh_attachment_set_parent_mesh",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2835,
          "character": 0
        },
        "end": {
          "line": 2839,
          "character": 1
        }
      },
      "preview": "void spine_mesh_attachment_set_parent_mesh(spine_mesh_attachment attachment, spine_mesh_attachment parentMesh) {"
    },
    {
      "name": "spine_mesh_attachment_get_num_edges",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2841,
          "character": 0
        },
        "end": {
          "line": 2845,
          "character": 1
        }
      },
      "preview": "int32_t spine_mesh_attachment_get_num_edges(spine_mesh_attachment attachment) {"
    },
    {
      "name": "spine_mesh_attachment_get_edges",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2847,
          "character": 0
        },
        "end": {
          "line": 2851,
          "character": 1
        }
      },
      "preview": "unsigned short *spine_mesh_attachment_get_edges(spine_mesh_attachment attachment) {"
    },
    {
      "name": "spine_mesh_attachment_get_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2853,
          "character": 0
        },
        "end": {
          "line": 2857,
          "character": 1
        }
      },
      "preview": "float spine_mesh_attachment_get_width(spine_mesh_attachment attachment) {"
    },
    {
      "name": "spine_mesh_attachment_set_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2859,
          "character": 0
        },
        "end": {
          "line": 2863,
          "character": 1
        }
      },
      "preview": "void spine_mesh_attachment_set_width(spine_mesh_attachment attachment, float width) {"
    },
    {
      "name": "spine_mesh_attachment_get_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2865,
          "character": 0
        },
        "end": {
          "line": 2869,
          "character": 1
        }
      },
      "preview": "float spine_mesh_attachment_get_height(spine_mesh_attachment attachment) {"
    },
    {
      "name": "spine_mesh_attachment_set_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2871,
          "character": 0
        },
        "end": {
          "line": 2875,
          "character": 1
        }
      },
      "preview": "void spine_mesh_attachment_set_height(spine_mesh_attachment attachment, float height) {"
    },
    {
      "name": "spine_clipping_attachment_get_end_slot",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2878,
          "character": 0
        },
        "end": {
          "line": 2882,
          "character": 1
        }
      },
      "preview": "spine_slot_data spine_clipping_attachment_get_end_slot(spine_clipping_attachment attachment) {"
    },
    {
      "name": "spine_clipping_attachment_set_end_slot",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2884,
          "character": 0
        },
        "end": {
          "line": 2888,
          "character": 1
        }
      },
      "preview": "void spine_clipping_attachment_set_end_slot(spine_clipping_attachment attachment, spine_slot_data endSlot) {"
    },
    {
      "name": "spine_clipping_attachment_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2890,
          "character": 0
        },
        "end": {
          "line": 2894,
          "character": 1
        }
      },
      "preview": "spine_color spine_clipping_attachment_get_color(spine_clipping_attachment attachment) {"
    },
    {
      "name": "spine_clipping_attachment_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2896,
          "character": 0
        },
        "end": {
          "line": 2900,
          "character": 1
        }
      },
      "preview": "void spine_clipping_attachment_set_color(spine_clipping_attachment attachment, float r, float g, float b, float a) {"
    },
    {
      "name": "spine_bounding_box_attachment_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2903,
          "character": 0
        },
        "end": {
          "line": 2907,
          "character": 1
        }
      },
      "preview": "spine_color spine_bounding_box_attachment_get_color(spine_bounding_box_attachment attachment) {"
    },
    {
      "name": "spine_bounding_box_attachment_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2909,
          "character": 0
        },
        "end": {
          "line": 2913,
          "character": 1
        }
      },
      "preview": "void spine_bounding_box_attachment_set_color(spine_bounding_box_attachment attachment, float r, float g, float b, float a) {"
    },
    {
      "name": "spine_path_attachment_get_num_lengths",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2916,
          "character": 0
        },
        "end": {
          "line": 2920,
          "character": 1
        }
      },
      "preview": "int32_t spine_path_attachment_get_num_lengths(spine_path_attachment attachment) {"
    },
    {
      "name": "spine_path_attachment_get_lengths",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2922,
          "character": 0
        },
        "end": {
          "line": 2926,
          "character": 1
        }
      },
      "preview": "float *spine_path_attachment_get_lengths(spine_path_attachment attachment) {"
    },
    {
      "name": "spine_path_attachment_get_is_closed",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2928,
          "character": 0
        },
        "end": {
          "line": 2932,
          "character": 1
        }
      },
      "preview": "spine_bool spine_path_attachment_get_is_closed(spine_path_attachment attachment) {"
    },
    {
      "name": "spine_path_attachment_set_is_closed",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2934,
          "character": 0
        },
        "end": {
          "line": 2938,
          "character": 1
        }
      },
      "preview": "void spine_path_attachment_set_is_closed(spine_path_attachment attachment, spine_bool isClosed) {"
    },
    {
      "name": "spine_path_attachment_get_is_constant_speed",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2940,
          "character": 0
        },
        "end": {
          "line": 2944,
          "character": 1
        }
      },
      "preview": "spine_bool spine_path_attachment_get_is_constant_speed(spine_path_attachment attachment) {"
    },
    {
      "name": "spine_path_attachment_set_is_constant_speed",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2946,
          "character": 0
        },
        "end": {
          "line": 2950,
          "character": 1
        }
      },
      "preview": "void spine_path_attachment_set_is_constant_speed(spine_path_attachment attachment, spine_bool isConstantSpeed) {"
    },
    {
      "name": "spine_path_attachment_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2952,
          "character": 0
        },
        "end": {
          "line": 2956,
          "character": 1
        }
      },
      "preview": "spine_color spine_path_attachment_get_color(spine_path_attachment attachment) {"
    },
    {
      "name": "spine_path_attachment_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2958,
          "character": 0
        },
        "end": {
          "line": 2962,
          "character": 1
        }
      },
      "preview": "void spine_path_attachment_set_color(spine_path_attachment attachment, float r, float g, float b, float a) {"
    },
    {
      "name": "spine_skin_set_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2965,
          "character": 0
        },
        "end": {
          "line": 2969,
          "character": 1
        }
      },
      "preview": "void spine_skin_set_attachment(spine_skin skin, int32_t slotIndex, const utf8 *name, spine_attachment attachment) {"
    },
    {
      "name": "spine_skin_get_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2971,
          "character": 0
        },
        "end": {
          "line": 2975,
          "character": 1
        }
      },
      "preview": "spine_attachment spine_skin_get_attachment(spine_skin skin, int32_t slotIndex, const utf8 *name) {"
    },
    {
      "name": "spine_skin_remove_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2977,
          "character": 0
        },
        "end": {
          "line": 2981,
          "character": 1
        }
      },
      "preview": "void spine_skin_remove_attachment(spine_skin skin, int32_t slotIndex, const utf8 *name) {"
    },
    {
      "name": "spine_skin_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2983,
          "character": 0
        },
        "end": {
          "line": 2987,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_skin_get_name(spine_skin skin) {"
    },
    {
      "name": "spine_skin_add_skin",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2989,
          "character": 0
        },
        "end": {
          "line": 2994,
          "character": 1
        }
      },
      "preview": "void spine_skin_add_skin(spine_skin skin, spine_skin other) {"
    },
    {
      "name": "spine_skin_copy_skin",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 2996,
          "character": 0
        },
        "end": {
          "line": 3001,
          "character": 1
        }
      },
      "preview": "void spine_skin_copy_skin(spine_skin skin, spine_skin other) {"
    },
    {
      "name": "spine_skin_get_entries",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3003,
          "character": 0
        },
        "end": {
          "line": 3024,
          "character": 1
        }
      },
      "preview": "spine_skin_entries spine_skin_get_entries(spine_skin skin) {"
    },
    {
      "name": "spine_skin_entries_get_num_entries",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3026,
          "character": 0
        },
        "end": {
          "line": 3029,
          "character": 1
        }
      },
      "preview": "int32_t spine_skin_entries_get_num_entries(spine_skin_entries entries) {"
    },
    {
      "name": "spine_skin_entries_get_entry",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3031,
          "character": 0
        },
        "end": {
          "line": 3034,
          "character": 1
        }
      },
      "preview": "spine_skin_entry spine_skin_entries_get_entry(spine_skin_entries entries, int32_t index) {"
    },
    {
      "name": "spine_skin_entries_dispose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3036,
          "character": 0
        },
        "end": {
          "line": 3040,
          "character": 1
        }
      },
      "preview": "void spine_skin_entries_dispose(spine_skin_entries entries) {"
    },
    {
      "name": "spine_skin_entry_get_slot_index",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3042,
          "character": 0
        },
        "end": {
          "line": 3045,
          "character": 1
        }
      },
      "preview": "int32_t spine_skin_entry_get_slot_index(spine_skin_entry entry) {"
    },
    {
      "name": "spine_skin_entry_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3047,
          "character": 0
        },
        "end": {
          "line": 3050,
          "character": 1
        }
      },
      "preview": "utf8 *spine_skin_entry_get_name(spine_skin_entry entry) {"
    },
    {
      "name": "spine_skin_entry_get_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3052,
          "character": 0
        },
        "end": {
          "line": 3055,
          "character": 1
        }
      },
      "preview": "spine_attachment spine_skin_entry_get_attachment(spine_skin_entry entry) {"
    },
    {
      "name": "spine_skin_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3057,
          "character": 0
        },
        "end": {
          "line": 3061,
          "character": 1
        }
      },
      "preview": "int32_t spine_skin_get_num_bones(spine_skin skin) {"
    },
    {
      "name": "spine_skin_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3063,
          "character": 0
        },
        "end": {
          "line": 3067,
          "character": 1
        }
      },
      "preview": "spine_bone_data *spine_skin_get_bones(spine_skin skin) {"
    },
    {
      "name": "spine_skin_get_num_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3069,
          "character": 0
        },
        "end": {
          "line": 3073,
          "character": 1
        }
      },
      "preview": "int32_t spine_skin_get_num_constraints(spine_skin skin) {"
    },
    {
      "name": "spine_skin_get_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3075,
          "character": 0
        },
        "end": {
          "line": 3079,
          "character": 1
        }
      },
      "preview": "spine_constraint_data *spine_skin_get_constraints(spine_skin skin) {"
    },
    {
      "name": "spine_skin_create",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3081,
          "character": 0
        },
        "end": {
          "line": 3084,
          "character": 1
        }
      },
      "preview": "spine_skin spine_skin_create(const utf8 *name) {"
    },
    {
      "name": "spine_skin_dispose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3086,
          "character": 0
        },
        "end": {
          "line": 3090,
          "character": 1
        }
      },
      "preview": "void spine_skin_dispose(spine_skin skin) {"
    },
    {
      "name": "spine_constraint_data_get_type",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3093,
          "character": 0
        },
        "end": {
          "line": 3105,
          "character": 1
        }
      },
      "preview": "spine_constraint_type spine_constraint_data_get_type(spine_constraint_data data) {"
    },
    {
      "name": "spine_constraint_data_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3107,
          "character": 0
        },
        "end": {
          "line": 3111,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_constraint_data_get_name(spine_constraint_data data) {"
    },
    {
      "name": "spine_constraint_data_get_order",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3113,
          "character": 0
        },
        "end": {
          "line": 3117,
          "character": 1
        }
      },
      "preview": "uint64_t spine_constraint_data_get_order(spine_constraint_data data) {"
    },
    {
      "name": "spine_constraint_data_set_order",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3119,
          "character": 0
        },
        "end": {
          "line": 3123,
          "character": 1
        }
      },
      "preview": "void spine_constraint_data_set_order(spine_constraint_data data, uint64_t order) {"
    },
    {
      "name": "spine_constraint_data_get_is_skin_required",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3125,
          "character": 0
        },
        "end": {
          "line": 3129,
          "character": 1
        }
      },
      "preview": "spine_bool spine_constraint_data_get_is_skin_required(spine_constraint_data data) {"
    },
    {
      "name": "spine_constraint_data_set_is_skin_required",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3131,
          "character": 0
        },
        "end": {
          "line": 3135,
          "character": 1
        }
      },
      "preview": "void spine_constraint_data_set_is_skin_required(spine_constraint_data data, spine_bool isSkinRequired) {"
    },
    {
      "name": "spine_ik_constraint_data_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3138,
          "character": 0
        },
        "end": {
          "line": 3142,
          "character": 1
        }
      },
      "preview": "int32_t spine_ik_constraint_data_get_num_bones(spine_ik_constraint_data data) {"
    },
    {
      "name": "spine_ik_constraint_data_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3144,
          "character": 0
        },
        "end": {
          "line": 3148,
          "character": 1
        }
      },
      "preview": "spine_bone_data *spine_ik_constraint_data_get_bones(spine_ik_constraint_data data) {"
    },
    {
      "name": "spine_ik_constraint_data_get_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3150,
          "character": 0
        },
        "end": {
          "line": 3154,
          "character": 1
        }
      },
      "preview": "spine_bone_data spine_ik_constraint_data_get_target(spine_ik_constraint_data data) {"
    },
    {
      "name": "spine_ik_constraint_data_set_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3156,
          "character": 0
        },
        "end": {
          "line": 3160,
          "character": 1
        }
      },
      "preview": "void spine_ik_constraint_data_set_target(spine_ik_constraint_data data, spine_bone_data target) {"
    },
    {
      "name": "spine_ik_constraint_data_get_bend_direction",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3162,
          "character": 0
        },
        "end": {
          "line": 3166,
          "character": 1
        }
      },
      "preview": "int32_t spine_ik_constraint_data_get_bend_direction(spine_ik_constraint_data data) {"
    },
    {
      "name": "spine_ik_constraint_data_set_bend_direction",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3168,
          "character": 0
        },
        "end": {
          "line": 3172,
          "character": 1
        }
      },
      "preview": "void spine_ik_constraint_data_set_bend_direction(spine_ik_constraint_data data, int32_t bendDirection) {"
    },
    {
      "name": "spine_ik_constraint_data_get_compress",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3174,
          "character": 0
        },
        "end": {
          "line": 3178,
          "character": 1
        }
      },
      "preview": "spine_bool spine_ik_constraint_data_get_compress(spine_ik_constraint_data data) {"
    },
    {
      "name": "spine_ik_constraint_data_set_compress",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3180,
          "character": 0
        },
        "end": {
          "line": 3184,
          "character": 1
        }
      },
      "preview": "void spine_ik_constraint_data_set_compress(spine_ik_constraint_data data, spine_bool compress) {"
    },
    {
      "name": "spine_ik_constraint_data_get_stretch",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3186,
          "character": 0
        },
        "end": {
          "line": 3190,
          "character": 1
        }
      },
      "preview": "spine_bool spine_ik_constraint_data_get_stretch(spine_ik_constraint_data data) {"
    },
    {
      "name": "spine_ik_constraint_data_set_stretch",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3192,
          "character": 0
        },
        "end": {
          "line": 3196,
          "character": 1
        }
      },
      "preview": "void spine_ik_constraint_data_set_stretch(spine_ik_constraint_data data, spine_bool stretch) {"
    },
    {
      "name": "spine_ik_constraint_data_get_uniform",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3198,
          "character": 0
        },
        "end": {
          "line": 3202,
          "character": 1
        }
      },
      "preview": "spine_bool spine_ik_constraint_data_get_uniform(spine_ik_constraint_data data) {"
    },
    {
      "name": "spine_ik_constraint_data_set_uniform",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3204,
          "character": 0
        },
        "end": {
          "line": 3208,
          "character": 1
        }
      },
      "preview": "void spine_ik_constraint_data_set_uniform(spine_ik_constraint_data data, spine_bool uniform) {"
    },
    {
      "name": "spine_ik_constraint_data_get_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3210,
          "character": 0
        },
        "end": {
          "line": 3214,
          "character": 1
        }
      },
      "preview": "float spine_ik_constraint_data_get_mix(spine_ik_constraint_data data) {"
    },
    {
      "name": "spine_ik_constraint_data_set_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3216,
          "character": 0
        },
        "end": {
          "line": 3220,
          "character": 1
        }
      },
      "preview": "void spine_ik_constraint_data_set_mix(spine_ik_constraint_data data, float mix) {"
    },
    {
      "name": "spine_ik_constraint_data_get_softness",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3222,
          "character": 0
        },
        "end": {
          "line": 3226,
          "character": 1
        }
      },
      "preview": "float spine_ik_constraint_data_get_softness(spine_ik_constraint_data data) {"
    },
    {
      "name": "spine_ik_constraint_data_set_softness",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3228,
          "character": 0
        },
        "end": {
          "line": 3232,
          "character": 1
        }
      },
      "preview": "void spine_ik_constraint_data_set_softness(spine_ik_constraint_data data, float softness) {"
    },
    {
      "name": "spine_ik_constraint_update",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3235,
          "character": 0
        },
        "end": {
          "line": 3239,
          "character": 1
        }
      },
      "preview": "void spine_ik_constraint_update(spine_ik_constraint constraint) {"
    },
    {
      "name": "spine_ik_constraint_get_order",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3241,
          "character": 0
        },
        "end": {
          "line": 3245,
          "character": 1
        }
      },
      "preview": "int32_t spine_ik_constraint_get_order(spine_ik_constraint constraint) {"
    },
    {
      "name": "spine_ik_constraint_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3247,
          "character": 0
        },
        "end": {
          "line": 3251,
          "character": 1
        }
      },
      "preview": "spine_ik_constraint_data spine_ik_constraint_get_data(spine_ik_constraint constraint) {"
    },
    {
      "name": "spine_ik_constraint_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3253,
          "character": 0
        },
        "end": {
          "line": 3257,
          "character": 1
        }
      },
      "preview": "int32_t spine_ik_constraint_get_num_bones(spine_ik_constraint constraint) {"
    },
    {
      "name": "spine_ik_constraint_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3259,
          "character": 0
        },
        "end": {
          "line": 3263,
          "character": 1
        }
      },
      "preview": "spine_bone *spine_ik_constraint_get_bones(spine_ik_constraint constraint) {"
    },
    {
      "name": "spine_ik_constraint_get_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3265,
          "character": 0
        },
        "end": {
          "line": 3269,
          "character": 1
        }
      },
      "preview": "spine_bone spine_ik_constraint_get_target(spine_ik_constraint constraint) {"
    },
    {
      "name": "spine_ik_constraint_set_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3271,
          "character": 0
        },
        "end": {
          "line": 3275,
          "character": 1
        }
      },
      "preview": "void spine_ik_constraint_set_target(spine_ik_constraint constraint, spine_bone target) {"
    },
    {
      "name": "spine_ik_constraint_get_bend_direction",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3277,
          "character": 0
        },
        "end": {
          "line": 3281,
          "character": 1
        }
      },
      "preview": "int32_t spine_ik_constraint_get_bend_direction(spine_ik_constraint constraint) {"
    },
    {
      "name": "spine_ik_constraint_set_bend_direction",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3283,
          "character": 0
        },
        "end": {
          "line": 3287,
          "character": 1
        }
      },
      "preview": "void spine_ik_constraint_set_bend_direction(spine_ik_constraint constraint, int32_t bendDirection) {"
    },
    {
      "name": "spine_ik_constraint_get_compress",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3289,
          "character": 0
        },
        "end": {
          "line": 3293,
          "character": 1
        }
      },
      "preview": "spine_bool spine_ik_constraint_get_compress(spine_ik_constraint constraint) {"
    },
    {
      "name": "spine_ik_constraint_set_compress",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3295,
          "character": 0
        },
        "end": {
          "line": 3299,
          "character": 1
        }
      },
      "preview": "void spine_ik_constraint_set_compress(spine_ik_constraint constraint, spine_bool compress) {"
    },
    {
      "name": "spine_ik_constraint_get_stretch",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3301,
          "character": 0
        },
        "end": {
          "line": 3305,
          "character": 1
        }
      },
      "preview": "spine_bool spine_ik_constraint_get_stretch(spine_ik_constraint constraint) {"
    },
    {
      "name": "spine_ik_constraint_set_stretch",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3307,
          "character": 0
        },
        "end": {
          "line": 3311,
          "character": 1
        }
      },
      "preview": "void spine_ik_constraint_set_stretch(spine_ik_constraint constraint, spine_bool stretch) {"
    },
    {
      "name": "spine_ik_constraint_get_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3313,
          "character": 0
        },
        "end": {
          "line": 3317,
          "character": 1
        }
      },
      "preview": "float spine_ik_constraint_get_mix(spine_ik_constraint constraint) {"
    },
    {
      "name": "spine_ik_constraint_set_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3319,
          "character": 0
        },
        "end": {
          "line": 3323,
          "character": 1
        }
      },
      "preview": "void spine_ik_constraint_set_mix(spine_ik_constraint constraint, float mix) {"
    },
    {
      "name": "spine_ik_constraint_get_softness",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3325,
          "character": 0
        },
        "end": {
          "line": 3329,
          "character": 1
        }
      },
      "preview": "float spine_ik_constraint_get_softness(spine_ik_constraint constraint) {"
    },
    {
      "name": "spine_ik_constraint_set_softness",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3331,
          "character": 0
        },
        "end": {
          "line": 3335,
          "character": 1
        }
      },
      "preview": "void spine_ik_constraint_set_softness(spine_ik_constraint constraint, float softness) {"
    },
    {
      "name": "spine_ik_constraint_get_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3337,
          "character": 0
        },
        "end": {
          "line": 3341,
          "character": 1
        }
      },
      "preview": "spine_bool spine_ik_constraint_get_is_active(spine_ik_constraint constraint) {"
    },
    {
      "name": "spine_ik_constraint_set_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3343,
          "character": 0
        },
        "end": {
          "line": 3347,
          "character": 1
        }
      },
      "preview": "void spine_ik_constraint_set_is_active(spine_ik_constraint constraint, spine_bool isActive) {"
    },
    {
      "name": "spine_transform_constraint_data_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3350,
          "character": 0
        },
        "end": {
          "line": 3354,
          "character": 1
        }
      },
      "preview": "int32_t spine_transform_constraint_data_get_num_bones(spine_transform_constraint_data data) {"
    },
    {
      "name": "spine_transform_constraint_data_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3356,
          "character": 0
        },
        "end": {
          "line": 3360,
          "character": 1
        }
      },
      "preview": "spine_bone_data *spine_transform_constraint_data_get_bones(spine_transform_constraint_data data) {"
    },
    {
      "name": "spine_transform_constraint_data_get_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3362,
          "character": 0
        },
        "end": {
          "line": 3366,
          "character": 1
        }
      },
      "preview": "spine_bone_data spine_transform_constraint_data_get_target(spine_transform_constraint_data data) {"
    },
    {
      "name": "spine_transform_constraint_data_set_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3368,
          "character": 0
        },
        "end": {
          "line": 3372,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_data_set_target(spine_transform_constraint_data data, spine_bone_data target) {"
    },
    {
      "name": "spine_transform_constraint_data_get_mix_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3374,
          "character": 0
        },
        "end": {
          "line": 3378,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_data_get_mix_rotate(spine_transform_constraint_data data) {"
    },
    {
      "name": "spine_transform_constraint_data_set_mix_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3380,
          "character": 0
        },
        "end": {
          "line": 3384,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_data_set_mix_rotate(spine_transform_constraint_data data, float mixRotate) {"
    },
    {
      "name": "spine_transform_constraint_data_get_mix_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3386,
          "character": 0
        },
        "end": {
          "line": 3390,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_data_get_mix_x(spine_transform_constraint_data data) {"
    },
    {
      "name": "spine_transform_constraint_data_set_mix_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3392,
          "character": 0
        },
        "end": {
          "line": 3396,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_data_set_mix_x(spine_transform_constraint_data data, float mixX) {"
    },
    {
      "name": "spine_transform_constraint_data_get_mix_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3398,
          "character": 0
        },
        "end": {
          "line": 3402,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_data_get_mix_y(spine_transform_constraint_data data) {"
    },
    {
      "name": "spine_transform_constraint_data_set_mix_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3404,
          "character": 0
        },
        "end": {
          "line": 3408,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_data_set_mix_y(spine_transform_constraint_data data, float mixY) {"
    },
    {
      "name": "spine_transform_constraint_data_get_mix_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3410,
          "character": 0
        },
        "end": {
          "line": 3414,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_data_get_mix_scale_x(spine_transform_constraint_data data) {"
    },
    {
      "name": "spine_transform_constraint_data_set_mix_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3416,
          "character": 0
        },
        "end": {
          "line": 3420,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_data_set_mix_scale_x(spine_transform_constraint_data data, float mixScaleX) {"
    },
    {
      "name": "spine_transform_constraint_data_get_mix_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3422,
          "character": 0
        },
        "end": {
          "line": 3426,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_data_get_mix_scale_y(spine_transform_constraint_data data) {"
    },
    {
      "name": "spine_transform_constraint_data_set_mix_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3428,
          "character": 0
        },
        "end": {
          "line": 3432,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_data_set_mix_scale_y(spine_transform_constraint_data data, float mixScaleY) {"
    },
    {
      "name": "spine_transform_constraint_data_get_mix_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3434,
          "character": 0
        },
        "end": {
          "line": 3438,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_data_get_mix_shear_y(spine_transform_constraint_data data) {"
    },
    {
      "name": "spine_transform_constraint_data_set_mix_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3440,
          "character": 0
        },
        "end": {
          "line": 3444,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_data_set_mix_shear_y(spine_transform_constraint_data data, float mixShearY) {"
    },
    {
      "name": "spine_transform_constraint_data_get_offset_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3446,
          "character": 0
        },
        "end": {
          "line": 3450,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_data_get_offset_rotation(spine_transform_constraint_data data) {"
    },
    {
      "name": "spine_transform_constraint_data_set_offset_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3452,
          "character": 0
        },
        "end": {
          "line": 3456,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_data_set_offset_rotation(spine_transform_constraint_data data, float offsetRotation) {"
    },
    {
      "name": "spine_transform_constraint_data_get_offset_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3458,
          "character": 0
        },
        "end": {
          "line": 3462,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_data_get_offset_x(spine_transform_constraint_data data) {"
    },
    {
      "name": "spine_transform_constraint_data_set_offset_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3464,
          "character": 0
        },
        "end": {
          "line": 3468,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_data_set_offset_x(spine_transform_constraint_data data, float offsetX) {"
    },
    {
      "name": "spine_transform_constraint_data_get_offset_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3470,
          "character": 0
        },
        "end": {
          "line": 3474,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_data_get_offset_y(spine_transform_constraint_data data) {"
    },
    {
      "name": "spine_transform_constraint_data_set_offset_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3476,
          "character": 0
        },
        "end": {
          "line": 3480,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_data_set_offset_y(spine_transform_constraint_data data, float offsetY) {"
    },
    {
      "name": "spine_transform_constraint_data_get_offset_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3482,
          "character": 0
        },
        "end": {
          "line": 3486,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_data_get_offset_scale_x(spine_transform_constraint_data data) {"
    },
    {
      "name": "spine_transform_constraint_data_set_offset_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3488,
          "character": 0
        },
        "end": {
          "line": 3492,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_data_set_offset_scale_x(spine_transform_constraint_data data, float offsetScaleX) {"
    },
    {
      "name": "spine_transform_constraint_data_get_offset_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3494,
          "character": 0
        },
        "end": {
          "line": 3498,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_data_get_offset_scale_y(spine_transform_constraint_data data) {"
    },
    {
      "name": "spine_transform_constraint_data_set_offset_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3500,
          "character": 0
        },
        "end": {
          "line": 3504,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_data_set_offset_scale_y(spine_transform_constraint_data data, float offsetScaleY) {"
    },
    {
      "name": "spine_transform_constraint_data_get_offset_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3506,
          "character": 0
        },
        "end": {
          "line": 3510,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_data_get_offset_shear_y(spine_transform_constraint_data data) {"
    },
    {
      "name": "spine_transform_constraint_data_set_offset_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3512,
          "character": 0
        },
        "end": {
          "line": 3516,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_data_set_offset_shear_y(spine_transform_constraint_data data, float offsetShearY) {"
    },
    {
      "name": "spine_transform_constraint_data_get_is_relative",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3518,
          "character": 0
        },
        "end": {
          "line": 3522,
          "character": 1
        }
      },
      "preview": "spine_bool spine_transform_constraint_data_get_is_relative(spine_transform_constraint_data data) {"
    },
    {
      "name": "spine_transform_constraint_data_set_is_relative",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3524,
          "character": 0
        },
        "end": {
          "line": 3528,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_data_set_is_relative(spine_transform_constraint_data data, spine_bool isRelative) {"
    },
    {
      "name": "spine_transform_constraint_data_get_is_local",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3530,
          "character": 0
        },
        "end": {
          "line": 3534,
          "character": 1
        }
      },
      "preview": "spine_bool spine_transform_constraint_data_get_is_local(spine_transform_constraint_data data) {"
    },
    {
      "name": "spine_transform_constraint_data_set_is_local",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3536,
          "character": 0
        },
        "end": {
          "line": 3540,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_data_set_is_local(spine_transform_constraint_data data, spine_bool isLocal) {"
    },
    {
      "name": "spine_transform_constraint_update",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3543,
          "character": 0
        },
        "end": {
          "line": 3547,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_update(spine_transform_constraint constraint) {"
    },
    {
      "name": "spine_transform_constraint_get_order",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3549,
          "character": 0
        },
        "end": {
          "line": 3553,
          "character": 1
        }
      },
      "preview": "int32_t spine_transform_constraint_get_order(spine_transform_constraint constraint) {"
    },
    {
      "name": "spine_transform_constraint_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3555,
          "character": 0
        },
        "end": {
          "line": 3559,
          "character": 1
        }
      },
      "preview": "spine_transform_constraint_data spine_transform_constraint_get_data(spine_transform_constraint constraint) {"
    },
    {
      "name": "spine_transform_constraint_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3561,
          "character": 0
        },
        "end": {
          "line": 3565,
          "character": 1
        }
      },
      "preview": "int32_t spine_transform_constraint_get_num_bones(spine_transform_constraint constraint) {"
    },
    {
      "name": "spine_transform_constraint_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3567,
          "character": 0
        },
        "end": {
          "line": 3571,
          "character": 1
        }
      },
      "preview": "spine_bone *spine_transform_constraint_get_bones(spine_transform_constraint constraint) {"
    },
    {
      "name": "spine_transform_constraint_get_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3573,
          "character": 0
        },
        "end": {
          "line": 3577,
          "character": 1
        }
      },
      "preview": "spine_bone spine_transform_constraint_get_target(spine_transform_constraint constraint) {"
    },
    {
      "name": "spine_transform_constraint_set_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3579,
          "character": 0
        },
        "end": {
          "line": 3583,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_set_target(spine_transform_constraint constraint, spine_bone target) {"
    },
    {
      "name": "spine_transform_constraint_get_mix_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3585,
          "character": 0
        },
        "end": {
          "line": 3589,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_get_mix_rotate(spine_transform_constraint constraint) {"
    },
    {
      "name": "spine_transform_constraint_set_mix_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3591,
          "character": 0
        },
        "end": {
          "line": 3595,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_set_mix_rotate(spine_transform_constraint constraint, float mixRotate) {"
    },
    {
      "name": "spine_transform_constraint_get_mix_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3597,
          "character": 0
        },
        "end": {
          "line": 3601,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_get_mix_x(spine_transform_constraint constraint) {"
    },
    {
      "name": "spine_transform_constraint_set_mix_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3603,
          "character": 0
        },
        "end": {
          "line": 3607,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_set_mix_x(spine_transform_constraint constraint, float mixX) {"
    },
    {
      "name": "spine_transform_constraint_get_mix_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3609,
          "character": 0
        },
        "end": {
          "line": 3613,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_get_mix_y(spine_transform_constraint constraint) {"
    },
    {
      "name": "spine_transform_constraint_set_mix_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3615,
          "character": 0
        },
        "end": {
          "line": 3619,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_set_mix_y(spine_transform_constraint constraint, float mixY) {"
    },
    {
      "name": "spine_transform_constraint_get_mix_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3621,
          "character": 0
        },
        "end": {
          "line": 3625,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_get_mix_scale_x(spine_transform_constraint constraint) {"
    },
    {
      "name": "spine_transform_constraint_set_mix_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3627,
          "character": 0
        },
        "end": {
          "line": 3631,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_set_mix_scale_x(spine_transform_constraint constraint, float mixScaleX) {"
    },
    {
      "name": "spine_transform_constraint_get_mix_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3633,
          "character": 0
        },
        "end": {
          "line": 3637,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_get_mix_scale_y(spine_transform_constraint constraint) {"
    },
    {
      "name": "spine_transform_constraint_set_mix_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3639,
          "character": 0
        },
        "end": {
          "line": 3643,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_set_mix_scale_y(spine_transform_constraint constraint, float mixScaleY) {"
    },
    {
      "name": "spine_transform_constraint_get_mix_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3645,
          "character": 0
        },
        "end": {
          "line": 3649,
          "character": 1
        }
      },
      "preview": "float spine_transform_constraint_get_mix_shear_y(spine_transform_constraint constraint) {"
    },
    {
      "name": "spine_transform_constraint_set_mix_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3651,
          "character": 0
        },
        "end": {
          "line": 3655,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_set_mix_shear_y(spine_transform_constraint constraint, float mixShearY) {"
    },
    {
      "name": "spine_transform_constraint_get_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3657,
          "character": 0
        },
        "end": {
          "line": 3661,
          "character": 1
        }
      },
      "preview": "spine_bool spine_transform_constraint_get_is_active(spine_transform_constraint constraint) {"
    },
    {
      "name": "spine_transform_constraint_set_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3663,
          "character": 0
        },
        "end": {
          "line": 3667,
          "character": 1
        }
      },
      "preview": "void spine_transform_constraint_set_is_active(spine_transform_constraint constraint, spine_bool isActive) {"
    },
    {
      "name": "spine_path_constraint_data_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3670,
          "character": 0
        },
        "end": {
          "line": 3674,
          "character": 1
        }
      },
      "preview": "int32_t spine_path_constraint_data_get_num_bones(spine_path_constraint_data data) {"
    },
    {
      "name": "spine_path_constraint_data_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3676,
          "character": 0
        },
        "end": {
          "line": 3680,
          "character": 1
        }
      },
      "preview": "spine_bone_data *spine_path_constraint_data_get_bones(spine_path_constraint_data data) {"
    },
    {
      "name": "spine_path_constraint_data_get_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3682,
          "character": 0
        },
        "end": {
          "line": 3686,
          "character": 1
        }
      },
      "preview": "spine_slot_data spine_path_constraint_data_get_target(spine_path_constraint_data data) {"
    },
    {
      "name": "spine_path_constraint_data_set_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3688,
          "character": 0
        },
        "end": {
          "line": 3692,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_data_set_target(spine_path_constraint_data data, spine_slot_data target) {"
    },
    {
      "name": "spine_path_constraint_data_get_position_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3694,
          "character": 0
        },
        "end": {
          "line": 3698,
          "character": 1
        }
      },
      "preview": "spine_position_mode spine_path_constraint_data_get_position_mode(spine_path_constraint_data data) {"
    },
    {
      "name": "spine_path_constraint_data_set_position_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3700,
          "character": 0
        },
        "end": {
          "line": 3704,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_data_set_position_mode(spine_path_constraint_data data, spine_position_mode positionMode) {"
    },
    {
      "name": "spine_path_constraint_data_get_spacing_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3706,
          "character": 0
        },
        "end": {
          "line": 3710,
          "character": 1
        }
      },
      "preview": "spine_spacing_mode spine_path_constraint_data_get_spacing_mode(spine_path_constraint_data data) {"
    },
    {
      "name": "spine_path_constraint_data_set_spacing_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3712,
          "character": 0
        },
        "end": {
          "line": 3716,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_data_set_spacing_mode(spine_path_constraint_data data, spine_spacing_mode spacingMode) {"
    },
    {
      "name": "spine_path_constraint_data_get_rotate_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3718,
          "character": 0
        },
        "end": {
          "line": 3722,
          "character": 1
        }
      },
      "preview": "spine_rotate_mode spine_path_constraint_data_get_rotate_mode(spine_path_constraint_data data) {"
    },
    {
      "name": "spine_path_constraint_data_set_rotate_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3724,
          "character": 0
        },
        "end": {
          "line": 3728,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_data_set_rotate_mode(spine_path_constraint_data data, spine_rotate_mode rotateMode) {"
    },
    {
      "name": "spine_path_constraint_data_get_offset_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3730,
          "character": 0
        },
        "end": {
          "line": 3734,
          "character": 1
        }
      },
      "preview": "float spine_path_constraint_data_get_offset_rotation(spine_path_constraint_data data) {"
    },
    {
      "name": "spine_path_constraint_data_set_offset_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3736,
          "character": 0
        },
        "end": {
          "line": 3740,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_data_set_offset_rotation(spine_path_constraint_data data, float offsetRotation) {"
    },
    {
      "name": "spine_path_constraint_data_get_position",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3742,
          "character": 0
        },
        "end": {
          "line": 3746,
          "character": 1
        }
      },
      "preview": "float spine_path_constraint_data_get_position(spine_path_constraint_data data) {"
    },
    {
      "name": "spine_path_constraint_data_set_position",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3748,
          "character": 0
        },
        "end": {
          "line": 3752,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_data_set_position(spine_path_constraint_data data, float position) {"
    },
    {
      "name": "spine_path_constraint_data_get_spacing",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3754,
          "character": 0
        },
        "end": {
          "line": 3758,
          "character": 1
        }
      },
      "preview": "float spine_path_constraint_data_get_spacing(spine_path_constraint_data data) {"
    },
    {
      "name": "spine_path_constraint_data_set_spacing",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3760,
          "character": 0
        },
        "end": {
          "line": 3764,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_data_set_spacing(spine_path_constraint_data data, float spacing) {"
    },
    {
      "name": "spine_path_constraint_data_get_mix_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3766,
          "character": 0
        },
        "end": {
          "line": 3770,
          "character": 1
        }
      },
      "preview": "float spine_path_constraint_data_get_mix_rotate(spine_path_constraint_data data) {"
    },
    {
      "name": "spine_path_constraint_data_set_mix_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3772,
          "character": 0
        },
        "end": {
          "line": 3776,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_data_set_mix_rotate(spine_path_constraint_data data, float mixRotate) {"
    },
    {
      "name": "spine_path_constraint_data_get_mix_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3778,
          "character": 0
        },
        "end": {
          "line": 3782,
          "character": 1
        }
      },
      "preview": "float spine_path_constraint_data_get_mix_x(spine_path_constraint_data data) {"
    },
    {
      "name": "spine_path_constraint_data_set_mix_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3784,
          "character": 0
        },
        "end": {
          "line": 3788,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_data_set_mix_x(spine_path_constraint_data data, float mixX) {"
    },
    {
      "name": "spine_path_constraint_data_get_mix_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3790,
          "character": 0
        },
        "end": {
          "line": 3794,
          "character": 1
        }
      },
      "preview": "float spine_path_constraint_data_get_mix_y(spine_path_constraint_data data) {"
    },
    {
      "name": "spine_path_constraint_data_set_mix_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3796,
          "character": 0
        },
        "end": {
          "line": 3800,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_data_set_mix_y(spine_path_constraint_data data, float mixY) {"
    },
    {
      "name": "spine_path_constraint_update",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3803,
          "character": 0
        },
        "end": {
          "line": 3807,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_update(spine_path_constraint constraint) {"
    },
    {
      "name": "spine_path_constraint_get_order",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3809,
          "character": 0
        },
        "end": {
          "line": 3813,
          "character": 1
        }
      },
      "preview": "int32_t spine_path_constraint_get_order(spine_path_constraint constraint) {"
    },
    {
      "name": "spine_path_constraint_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3815,
          "character": 0
        },
        "end": {
          "line": 3819,
          "character": 1
        }
      },
      "preview": "spine_path_constraint_data spine_path_constraint_get_data(spine_path_constraint constraint) {"
    },
    {
      "name": "spine_path_constraint_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3821,
          "character": 0
        },
        "end": {
          "line": 3825,
          "character": 1
        }
      },
      "preview": "int32_t spine_path_constraint_get_num_bones(spine_path_constraint constraint) {"
    },
    {
      "name": "spine_path_constraint_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3827,
          "character": 0
        },
        "end": {
          "line": 3831,
          "character": 1
        }
      },
      "preview": "spine_bone *spine_path_constraint_get_bones(spine_path_constraint constraint) {"
    },
    {
      "name": "spine_path_constraint_get_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3833,
          "character": 0
        },
        "end": {
          "line": 3837,
          "character": 1
        }
      },
      "preview": "spine_slot spine_path_constraint_get_target(spine_path_constraint constraint) {"
    },
    {
      "name": "spine_path_constraint_set_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3839,
          "character": 0
        },
        "end": {
          "line": 3843,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_set_target(spine_path_constraint constraint, spine_slot target) {"
    },
    {
      "name": "spine_path_constraint_get_position",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3845,
          "character": 0
        },
        "end": {
          "line": 3849,
          "character": 1
        }
      },
      "preview": "float spine_path_constraint_get_position(spine_path_constraint constraint) {"
    },
    {
      "name": "spine_path_constraint_set_position",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3851,
          "character": 0
        },
        "end": {
          "line": 3855,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_set_position(spine_path_constraint constraint, float position) {"
    },
    {
      "name": "spine_path_constraint_get_spacing",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3857,
          "character": 0
        },
        "end": {
          "line": 3861,
          "character": 1
        }
      },
      "preview": "float spine_path_constraint_get_spacing(spine_path_constraint constraint) {"
    },
    {
      "name": "spine_path_constraint_set_spacing",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3863,
          "character": 0
        },
        "end": {
          "line": 3867,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_set_spacing(spine_path_constraint constraint, float spacing) {"
    },
    {
      "name": "spine_path_constraint_get_mix_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3869,
          "character": 0
        },
        "end": {
          "line": 3873,
          "character": 1
        }
      },
      "preview": "float spine_path_constraint_get_mix_rotate(spine_path_constraint constraint) {"
    },
    {
      "name": "spine_path_constraint_set_mix_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3875,
          "character": 0
        },
        "end": {
          "line": 3879,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_set_mix_rotate(spine_path_constraint constraint, float mixRotate) {"
    },
    {
      "name": "spine_path_constraint_get_mix_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3881,
          "character": 0
        },
        "end": {
          "line": 3885,
          "character": 1
        }
      },
      "preview": "float spine_path_constraint_get_mix_x(spine_path_constraint constraint) {"
    },
    {
      "name": "spine_path_constraint_set_mix_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3887,
          "character": 0
        },
        "end": {
          "line": 3891,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_set_mix_x(spine_path_constraint constraint, float mixX) {"
    },
    {
      "name": "spine_path_constraint_get_mix_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3893,
          "character": 0
        },
        "end": {
          "line": 3897,
          "character": 1
        }
      },
      "preview": "float spine_path_constraint_get_mix_y(spine_path_constraint constraint) {"
    },
    {
      "name": "spine_path_constraint_set_mix_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3899,
          "character": 0
        },
        "end": {
          "line": 3903,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_set_mix_y(spine_path_constraint constraint, float mixY) {"
    },
    {
      "name": "spine_path_constraint_get_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3905,
          "character": 0
        },
        "end": {
          "line": 3909,
          "character": 1
        }
      },
      "preview": "spine_bool spine_path_constraint_get_is_active(spine_path_constraint constraint) {"
    },
    {
      "name": "spine_path_constraint_set_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3911,
          "character": 0
        },
        "end": {
          "line": 3915,
          "character": 1
        }
      },
      "preview": "void spine_path_constraint_set_is_active(spine_path_constraint constraint, spine_bool isActive) {"
    },
    {
      "name": "spine_physics_constraint_data_set_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3918,
          "character": 0
        },
        "end": {
          "line": 3922,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_bone(spine_physics_constraint_data data, spine_bone_data bone) {"
    },
    {
      "name": "spine_physics_constraint_data_get_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3924,
          "character": 0
        },
        "end": {
          "line": 3928,
          "character": 1
        }
      },
      "preview": "spine_bone_data spine_physics_constraint_data_get_bone(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3930,
          "character": 0
        },
        "end": {
          "line": 3934,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_x(spine_physics_constraint_data data, float x) {"
    },
    {
      "name": "spine_physics_constraint_data_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3936,
          "character": 0
        },
        "end": {
          "line": 3940,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_data_get_x(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3942,
          "character": 0
        },
        "end": {
          "line": 3946,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_y(spine_physics_constraint_data data, float y) {"
    },
    {
      "name": "spine_physics_constraint_data_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3948,
          "character": 0
        },
        "end": {
          "line": 3952,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_data_get_y(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3954,
          "character": 0
        },
        "end": {
          "line": 3958,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_rotate(spine_physics_constraint_data data, float rotate) {"
    },
    {
      "name": "spine_physics_constraint_data_get_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3960,
          "character": 0
        },
        "end": {
          "line": 3964,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_data_get_rotate(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3966,
          "character": 0
        },
        "end": {
          "line": 3970,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_scale_x(spine_physics_constraint_data data, float scaleX) {"
    },
    {
      "name": "spine_physics_constraint_data_get_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3972,
          "character": 0
        },
        "end": {
          "line": 3976,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_data_get_scale_x(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_shear_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3978,
          "character": 0
        },
        "end": {
          "line": 3982,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_shear_x(spine_physics_constraint_data data, float shearX) {"
    },
    {
      "name": "spine_physics_constraint_data_get_shear_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3984,
          "character": 0
        },
        "end": {
          "line": 3988,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_data_get_shear_x(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_limit",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3990,
          "character": 0
        },
        "end": {
          "line": 3994,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_limit(spine_physics_constraint_data data, float limit) {"
    },
    {
      "name": "spine_physics_constraint_data_get_limit",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 3996,
          "character": 0
        },
        "end": {
          "line": 4000,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_data_get_limit(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_step",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4002,
          "character": 0
        },
        "end": {
          "line": 4006,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_step(spine_physics_constraint_data data, float step) {"
    },
    {
      "name": "spine_physics_constraint_data_get_step",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4008,
          "character": 0
        },
        "end": {
          "line": 4012,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_data_get_step(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_inertia",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4014,
          "character": 0
        },
        "end": {
          "line": 4018,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_inertia(spine_physics_constraint_data data, float inertia) {"
    },
    {
      "name": "spine_physics_constraint_data_get_inertia",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4020,
          "character": 0
        },
        "end": {
          "line": 4024,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_data_get_inertia(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_strength",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4026,
          "character": 0
        },
        "end": {
          "line": 4030,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_strength(spine_physics_constraint_data data, float strength) {"
    },
    {
      "name": "spine_physics_constraint_data_get_strength",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4032,
          "character": 0
        },
        "end": {
          "line": 4036,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_data_get_strength(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_damping",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4038,
          "character": 0
        },
        "end": {
          "line": 4042,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_damping(spine_physics_constraint_data data, float damping) {"
    },
    {
      "name": "spine_physics_constraint_data_get_damping",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4044,
          "character": 0
        },
        "end": {
          "line": 4048,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_data_get_damping(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_mass_inverse",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4050,
          "character": 0
        },
        "end": {
          "line": 4054,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_mass_inverse(spine_physics_constraint_data data, float massInverse) {"
    },
    {
      "name": "spine_physics_constraint_data_get_mass_inverse",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4056,
          "character": 0
        },
        "end": {
          "line": 4060,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_data_get_mass_inverse(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_wind",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4062,
          "character": 0
        },
        "end": {
          "line": 4066,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_wind(spine_physics_constraint_data data, float wind) {"
    },
    {
      "name": "spine_physics_constraint_data_get_wind",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4068,
          "character": 0
        },
        "end": {
          "line": 4072,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_data_get_wind(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_gravity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4074,
          "character": 0
        },
        "end": {
          "line": 4078,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_gravity(spine_physics_constraint_data data, float gravity) {"
    },
    {
      "name": "spine_physics_constraint_data_get_gravity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4080,
          "character": 0
        },
        "end": {
          "line": 4084,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_data_get_gravity(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4086,
          "character": 0
        },
        "end": {
          "line": 4090,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_mix(spine_physics_constraint_data data, float mix) {"
    },
    {
      "name": "spine_physics_constraint_data_get_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4092,
          "character": 0
        },
        "end": {
          "line": 4096,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_data_get_mix(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_inertia_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4098,
          "character": 0
        },
        "end": {
          "line": 4102,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_inertia_global(spine_physics_constraint_data data, int32_t inertiaGlobal) {"
    },
    {
      "name": "spine_physics_constraint_data_is_inertia_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4104,
          "character": 0
        },
        "end": {
          "line": 4108,
          "character": 1
        }
      },
      "preview": "spine_bool spine_physics_constraint_data_is_inertia_global(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_strength_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4110,
          "character": 0
        },
        "end": {
          "line": 4114,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_strength_global(spine_physics_constraint_data data, spine_bool strengthGlobal) {"
    },
    {
      "name": "spine_physics_constraint_data_is_strength_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4116,
          "character": 0
        },
        "end": {
          "line": 4120,
          "character": 1
        }
      },
      "preview": "spine_bool spine_physics_constraint_data_is_strength_global(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_damping_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4122,
          "character": 0
        },
        "end": {
          "line": 4126,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_damping_global(spine_physics_constraint_data data, spine_bool dampingGlobal) {"
    },
    {
      "name": "spine_physics_constraint_data_is_damping_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4128,
          "character": 0
        },
        "end": {
          "line": 4132,
          "character": 1
        }
      },
      "preview": "spine_bool spine_physics_constraint_data_is_damping_global(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_mass_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4134,
          "character": 0
        },
        "end": {
          "line": 4138,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_mass_global(spine_physics_constraint_data data, spine_bool massGlobal) {"
    },
    {
      "name": "spine_physics_constraint_data_is_mass_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4140,
          "character": 0
        },
        "end": {
          "line": 4144,
          "character": 1
        }
      },
      "preview": "spine_bool spine_physics_constraint_data_is_mass_global(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_wind_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4146,
          "character": 0
        },
        "end": {
          "line": 4150,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_wind_global(spine_physics_constraint_data data, spine_bool windGlobal) {"
    },
    {
      "name": "spine_physics_constraint_data_is_wind_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4152,
          "character": 0
        },
        "end": {
          "line": 4156,
          "character": 1
        }
      },
      "preview": "spine_bool spine_physics_constraint_data_is_wind_global(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_gravity_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4158,
          "character": 0
        },
        "end": {
          "line": 4162,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_gravity_global(spine_physics_constraint_data data, spine_bool gravityGlobal) {"
    },
    {
      "name": "spine_physics_constraint_data_is_gravity_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4164,
          "character": 0
        },
        "end": {
          "line": 4168,
          "character": 1
        }
      },
      "preview": "spine_bool spine_physics_constraint_data_is_gravity_global(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_data_set_mix_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4170,
          "character": 0
        },
        "end": {
          "line": 4174,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_data_set_mix_global(spine_physics_constraint_data data, spine_bool mixGlobal) {"
    },
    {
      "name": "spine_physics_constraint_data_is_mix_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4176,
          "character": 0
        },
        "end": {
          "line": 4180,
          "character": 1
        }
      },
      "preview": "spine_bool spine_physics_constraint_data_is_mix_global(spine_physics_constraint_data data) {"
    },
    {
      "name": "spine_physics_constraint_set_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4183,
          "character": 0
        },
        "end": {
          "line": 4187,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_bone(spine_physics_constraint constraint, spine_bone bone) {"
    },
    {
      "name": "spine_physics_constraint_get_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4189,
          "character": 0
        },
        "end": {
          "line": 4193,
          "character": 1
        }
      },
      "preview": "spine_bone spine_physics_constraint_get_bone(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_inertia",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4195,
          "character": 0
        },
        "end": {
          "line": 4199,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_inertia(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_inertia",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4201,
          "character": 0
        },
        "end": {
          "line": 4205,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_inertia(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_strength",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4207,
          "character": 0
        },
        "end": {
          "line": 4211,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_strength(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_strength",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4213,
          "character": 0
        },
        "end": {
          "line": 4217,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_strength(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_damping",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4219,
          "character": 0
        },
        "end": {
          "line": 4223,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_damping(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_damping",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4225,
          "character": 0
        },
        "end": {
          "line": 4229,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_damping(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_mass_inverse",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4231,
          "character": 0
        },
        "end": {
          "line": 4235,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_mass_inverse(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_mass_inverse",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4237,
          "character": 0
        },
        "end": {
          "line": 4241,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_mass_inverse(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_wind",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4243,
          "character": 0
        },
        "end": {
          "line": 4247,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_wind(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_wind",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4249,
          "character": 0
        },
        "end": {
          "line": 4253,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_wind(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_gravity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4255,
          "character": 0
        },
        "end": {
          "line": 4259,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_gravity(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_gravity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4261,
          "character": 0
        },
        "end": {
          "line": 4265,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_gravity(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4267,
          "character": 0
        },
        "end": {
          "line": 4271,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_mix(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4273,
          "character": 0
        },
        "end": {
          "line": 4277,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_mix(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_reset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4279,
          "character": 0
        },
        "end": {
          "line": 4283,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_reset(spine_physics_constraint constraint, spine_bool value) {"
    },
    {
      "name": "spine_physics_constraint_get_reset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4285,
          "character": 0
        },
        "end": {
          "line": 4289,
          "character": 1
        }
      },
      "preview": "spine_bool spine_physics_constraint_get_reset(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_ux",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4291,
          "character": 0
        },
        "end": {
          "line": 4295,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_ux(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_ux",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4297,
          "character": 0
        },
        "end": {
          "line": 4301,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_ux(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_uy",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4303,
          "character": 0
        },
        "end": {
          "line": 4307,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_uy(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_uy",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4309,
          "character": 0
        },
        "end": {
          "line": 4313,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_uy(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_cx",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4315,
          "character": 0
        },
        "end": {
          "line": 4319,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_cx(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_cx",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4321,
          "character": 0
        },
        "end": {
          "line": 4325,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_cx(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_cy",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4327,
          "character": 0
        },
        "end": {
          "line": 4331,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_cy(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_cy",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4333,
          "character": 0
        },
        "end": {
          "line": 4337,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_cy(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_tx",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4339,
          "character": 0
        },
        "end": {
          "line": 4343,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_tx(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_tx",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4345,
          "character": 0
        },
        "end": {
          "line": 4349,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_tx(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_ty",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4351,
          "character": 0
        },
        "end": {
          "line": 4355,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_ty(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_ty",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4357,
          "character": 0
        },
        "end": {
          "line": 4361,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_ty(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_x_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4363,
          "character": 0
        },
        "end": {
          "line": 4367,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_x_offset(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_x_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4369,
          "character": 0
        },
        "end": {
          "line": 4373,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_x_offset(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_x_velocity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4375,
          "character": 0
        },
        "end": {
          "line": 4379,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_x_velocity(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_x_velocity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4381,
          "character": 0
        },
        "end": {
          "line": 4385,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_x_velocity(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_y_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4387,
          "character": 0
        },
        "end": {
          "line": 4391,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_y_offset(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_y_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4393,
          "character": 0
        },
        "end": {
          "line": 4397,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_y_offset(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_y_velocity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4399,
          "character": 0
        },
        "end": {
          "line": 4403,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_y_velocity(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_y_velocity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4405,
          "character": 0
        },
        "end": {
          "line": 4409,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_y_velocity(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_rotate_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4411,
          "character": 0
        },
        "end": {
          "line": 4415,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_rotate_offset(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_rotate_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4417,
          "character": 0
        },
        "end": {
          "line": 4421,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_rotate_offset(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_rotate_velocity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4423,
          "character": 0
        },
        "end": {
          "line": 4427,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_rotate_velocity(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_rotate_velocity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4429,
          "character": 0
        },
        "end": {
          "line": 4433,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_rotate_velocity(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_scale_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4435,
          "character": 0
        },
        "end": {
          "line": 4439,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_scale_offset(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_scale_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4441,
          "character": 0
        },
        "end": {
          "line": 4445,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_scale_offset(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_scale_velocity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4447,
          "character": 0
        },
        "end": {
          "line": 4451,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_scale_velocity(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_scale_velocity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4453,
          "character": 0
        },
        "end": {
          "line": 4457,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_scale_velocity(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4459,
          "character": 0
        },
        "end": {
          "line": 4463,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_active(spine_physics_constraint constraint, spine_bool value) {"
    },
    {
      "name": "spine_physics_constraint_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4465,
          "character": 0
        },
        "end": {
          "line": 4469,
          "character": 1
        }
      },
      "preview": "spine_bool spine_physics_constraint_is_active(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_remaining",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4471,
          "character": 0
        },
        "end": {
          "line": 4475,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_remaining(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_remaining",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4477,
          "character": 0
        },
        "end": {
          "line": 4481,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_remaining(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_set_last_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4483,
          "character": 0
        },
        "end": {
          "line": 4487,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_set_last_time(spine_physics_constraint constraint, float value) {"
    },
    {
      "name": "spine_physics_constraint_get_last_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4489,
          "character": 0
        },
        "end": {
          "line": 4493,
          "character": 1
        }
      },
      "preview": "float spine_physics_constraint_get_last_time(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_reset_fully",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4495,
          "character": 0
        },
        "end": {
          "line": 4499,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_reset_fully(spine_physics_constraint constraint) {"
    },
    {
      "name": "spine_physics_constraint_update",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4501,
          "character": 0
        },
        "end": {
          "line": 4505,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_update(spine_physics_constraint data, spine_physics physics) {"
    },
    {
      "name": "spine_physics_constraint_translate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4507,
          "character": 0
        },
        "end": {
          "line": 4511,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_translate(spine_physics_constraint data, float x, float y) {"
    },
    {
      "name": "spine_physics_constraint_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4513,
          "character": 0
        },
        "end": {
          "line": 4517,
          "character": 1
        }
      },
      "preview": "void spine_physics_constraint_rotate(spine_physics_constraint data, float x, float y, float degrees) {"
    },
    {
      "name": "spine_sequence_apply",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4520,
          "character": 0
        },
        "end": {
          "line": 4524,
          "character": 1
        }
      },
      "preview": "void spine_sequence_apply(spine_sequence sequence, spine_slot slot, spine_attachment attachment) {"
    },
    {
      "name": "spine_sequence_get_path",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4526,
          "character": 0
        },
        "end": {
          "line": 4530,
          "character": 1
        }
      },
      "preview": "const utf8 *spine_sequence_get_path(spine_sequence sequence, const utf8 *basePath, int32_t index) {"
    },
    {
      "name": "spine_sequence_get_id",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4532,
          "character": 0
        },
        "end": {
          "line": 4536,
          "character": 1
        }
      },
      "preview": "int32_t spine_sequence_get_id(spine_sequence sequence) {"
    },
    {
      "name": "spine_sequence_set_id",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4538,
          "character": 0
        },
        "end": {
          "line": 4542,
          "character": 1
        }
      },
      "preview": "void spine_sequence_set_id(spine_sequence sequence, int32_t id) {"
    },
    {
      "name": "spine_sequence_get_start",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4544,
          "character": 0
        },
        "end": {
          "line": 4548,
          "character": 1
        }
      },
      "preview": "int32_t spine_sequence_get_start(spine_sequence sequence) {"
    },
    {
      "name": "spine_sequence_set_start",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4550,
          "character": 0
        },
        "end": {
          "line": 4554,
          "character": 1
        }
      },
      "preview": "void spine_sequence_set_start(spine_sequence sequence, int32_t start) {"
    },
    {
      "name": "spine_sequence_get_digits",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4556,
          "character": 0
        },
        "end": {
          "line": 4560,
          "character": 1
        }
      },
      "preview": "int32_t spine_sequence_get_digits(spine_sequence sequence) {"
    },
    {
      "name": "spine_sequence_set_digits",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4562,
          "character": 0
        },
        "end": {
          "line": 4566,
          "character": 1
        }
      },
      "preview": "void spine_sequence_set_digits(spine_sequence sequence, int32_t digits) {"
    },
    {
      "name": "spine_sequence_get_setup_index",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4568,
          "character": 0
        },
        "end": {
          "line": 4572,
          "character": 1
        }
      },
      "preview": "int32_t spine_sequence_get_setup_index(spine_sequence sequence) {"
    },
    {
      "name": "spine_sequence_set_setup_index",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4574,
          "character": 0
        },
        "end": {
          "line": 4578,
          "character": 1
        }
      },
      "preview": "void spine_sequence_set_setup_index(spine_sequence sequence, int32_t setupIndex) {"
    },
    {
      "name": "spine_sequence_get_num_regions",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4580,
          "character": 0
        },
        "end": {
          "line": 4584,
          "character": 1
        }
      },
      "preview": "int32_t spine_sequence_get_num_regions(spine_sequence sequence) {"
    },
    {
      "name": "spine_sequence_get_regions",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4586,
          "character": 0
        },
        "end": {
          "line": 4590,
          "character": 1
        }
      },
      "preview": "spine_texture_region *spine_sequence_get_regions(spine_sequence sequence) {"
    },
    {
      "name": "spine_texture_region_get_texture",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4593,
          "character": 0
        },
        "end": {
          "line": 4597,
          "character": 1
        }
      },
      "preview": "void *spine_texture_region_get_texture(spine_texture_region textureRegion) {"
    },
    {
      "name": "spine_texture_region_set_texture",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4599,
          "character": 0
        },
        "end": {
          "line": 4603,
          "character": 1
        }
      },
      "preview": "void spine_texture_region_set_texture(spine_texture_region textureRegion, void *texture) {"
    },
    {
      "name": "spine_texture_region_get_u",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4605,
          "character": 0
        },
        "end": {
          "line": 4609,
          "character": 1
        }
      },
      "preview": "float spine_texture_region_get_u(spine_texture_region textureRegion) {"
    },
    {
      "name": "spine_texture_region_set_u",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4611,
          "character": 0
        },
        "end": {
          "line": 4615,
          "character": 1
        }
      },
      "preview": "void spine_texture_region_set_u(spine_texture_region textureRegion, float u) {"
    },
    {
      "name": "spine_texture_region_get_v",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4617,
          "character": 0
        },
        "end": {
          "line": 4621,
          "character": 1
        }
      },
      "preview": "float spine_texture_region_get_v(spine_texture_region textureRegion) {"
    },
    {
      "name": "spine_texture_region_set_v",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4622,
          "character": 0
        },
        "end": {
          "line": 4626,
          "character": 1
        }
      },
      "preview": "void spine_texture_region_set_v(spine_texture_region textureRegion, float v) {"
    },
    {
      "name": "spine_texture_region_get_u2",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4627,
          "character": 0
        },
        "end": {
          "line": 4631,
          "character": 1
        }
      },
      "preview": "float spine_texture_region_get_u2(spine_texture_region textureRegion) {"
    },
    {
      "name": "spine_texture_region_set_u2",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4633,
          "character": 0
        },
        "end": {
          "line": 4637,
          "character": 1
        }
      },
      "preview": "void spine_texture_region_set_u2(spine_texture_region textureRegion, float u2) {"
    },
    {
      "name": "spine_texture_region_get_v2",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4639,
          "character": 0
        },
        "end": {
          "line": 4643,
          "character": 1
        }
      },
      "preview": "float spine_texture_region_get_v2(spine_texture_region textureRegion) {"
    },
    {
      "name": "spine_texture_region_set_v2",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4645,
          "character": 0
        },
        "end": {
          "line": 4649,
          "character": 1
        }
      },
      "preview": "void spine_texture_region_set_v2(spine_texture_region textureRegion, float v2) {"
    },
    {
      "name": "spine_texture_region_get_degrees",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4651,
          "character": 0
        },
        "end": {
          "line": 4655,
          "character": 1
        }
      },
      "preview": "int32_t spine_texture_region_get_degrees(spine_texture_region textureRegion) {"
    },
    {
      "name": "spine_texture_region_set_degrees",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4657,
          "character": 0
        },
        "end": {
          "line": 4661,
          "character": 1
        }
      },
      "preview": "void spine_texture_region_set_degrees(spine_texture_region textureRegion, int32_t degrees) {"
    },
    {
      "name": "spine_texture_region_get_offset_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4663,
          "character": 0
        },
        "end": {
          "line": 4667,
          "character": 1
        }
      },
      "preview": "float spine_texture_region_get_offset_x(spine_texture_region textureRegion) {"
    },
    {
      "name": "spine_texture_region_set_offset_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4669,
          "character": 0
        },
        "end": {
          "line": 4673,
          "character": 1
        }
      },
      "preview": "void spine_texture_region_set_offset_x(spine_texture_region textureRegion, float offsetX) {"
    },
    {
      "name": "spine_texture_region_get_offset_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4675,
          "character": 0
        },
        "end": {
          "line": 4679,
          "character": 1
        }
      },
      "preview": "float spine_texture_region_get_offset_y(spine_texture_region textureRegion) {"
    },
    {
      "name": "spine_texture_region_set_offset_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4681,
          "character": 0
        },
        "end": {
          "line": 4685,
          "character": 1
        }
      },
      "preview": "void spine_texture_region_set_offset_y(spine_texture_region textureRegion, float offsetY) {"
    },
    {
      "name": "spine_texture_region_get_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4687,
          "character": 0
        },
        "end": {
          "line": 4691,
          "character": 1
        }
      },
      "preview": "int32_t spine_texture_region_get_width(spine_texture_region textureRegion) {"
    },
    {
      "name": "spine_texture_region_set_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4693,
          "character": 0
        },
        "end": {
          "line": 4697,
          "character": 1
        }
      },
      "preview": "void spine_texture_region_set_width(spine_texture_region textureRegion, int32_t width) {"
    },
    {
      "name": "spine_texture_region_get_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4699,
          "character": 0
        },
        "end": {
          "line": 4703,
          "character": 1
        }
      },
      "preview": "int32_t spine_texture_region_get_height(spine_texture_region textureRegion) {"
    },
    {
      "name": "spine_texture_region_set_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4705,
          "character": 0
        },
        "end": {
          "line": 4709,
          "character": 1
        }
      },
      "preview": "void spine_texture_region_set_height(spine_texture_region textureRegion, int32_t height) {"
    },
    {
      "name": "spine_texture_region_get_original_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4711,
          "character": 0
        },
        "end": {
          "line": 4715,
          "character": 1
        }
      },
      "preview": "int32_t spine_texture_region_get_original_width(spine_texture_region textureRegion) {"
    },
    {
      "name": "spine_texture_region_set_original_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4717,
          "character": 0
        },
        "end": {
          "line": 4721,
          "character": 1
        }
      },
      "preview": "void spine_texture_region_set_original_width(spine_texture_region textureRegion, int32_t originalWidth) {"
    },
    {
      "name": "spine_texture_region_get_original_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4723,
          "character": 0
        },
        "end": {
          "line": 4727,
          "character": 1
        }
      },
      "preview": "int32_t spine_texture_region_get_original_height(spine_texture_region textureRegion) {"
    },
    {
      "name": "spine_texture_region_set_original_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4729,
          "character": 0
        },
        "end": {
          "line": 4733,
          "character": 1
        }
      },
      "preview": "void spine_texture_region_set_original_height(spine_texture_region textureRegion, int32_t originalHeight) {"
    },
    {
      "name": "spine_skeleton_bounds_create",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4735,
          "character": 0
        },
        "end": {
          "line": 4737,
          "character": 1
        }
      },
      "preview": "spine_skeleton_bounds spine_skeleton_bounds_create() {"
    },
    {
      "name": "spine_skeleton_bounds_dispose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4739,
          "character": 0
        },
        "end": {
          "line": 4743,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_bounds_dispose(spine_skeleton_bounds bounds) {"
    },
    {
      "name": "spine_skeleton_bounds_update",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4745,
          "character": 0
        },
        "end": {
          "line": 4752,
          "character": 1
        }
      },
      "preview": "void spine_skeleton_bounds_update(spine_skeleton_bounds bounds, spine_skeleton skeleton, spine_bool updateAabb) {"
    },
    {
      "name": "spine_skeleton_bounds_aabb_contains_point",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4754,
          "character": 0
        },
        "end": {
          "line": 4757,
          "character": 1
        }
      },
      "preview": "spine_bool spine_skeleton_bounds_aabb_contains_point(spine_skeleton_bounds bounds, float x, float y) {"
    },
    {
      "name": "spine_skeleton_bounds_aabb_intersects_segment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4759,
          "character": 0
        },
        "end": {
          "line": 4762,
          "character": 1
        }
      },
      "preview": "spine_bool spine_skeleton_bounds_aabb_intersects_segment(spine_skeleton_bounds bounds, float x1, float y1, float x2, float y2) {"
    },
    {
      "name": "spine_skeleton_bounds_aabb_intersects_skeleton",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4764,
          "character": 0
        },
        "end": {
          "line": 4768,
          "character": 1
        }
      },
      "preview": "spine_bool spine_skeleton_bounds_aabb_intersects_skeleton(spine_skeleton_bounds bounds, spine_skeleton_bounds otherBounds) {"
    },
    {
      "name": "spine_skeleton_bounds_contains_point",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4770,
          "character": 0
        },
        "end": {
          "line": 4774,
          "character": 1
        }
      },
      "preview": "spine_bool spine_skeleton_bounds_contains_point(spine_skeleton_bounds bounds, spine_polygon polygon, float x, float y) {"
    },
    {
      "name": "spine_skeleton_bounds_contains_point_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4776,
          "character": 0
        },
        "end": {
          "line": 4779,
          "character": 1
        }
      },
      "preview": "spine_bounding_box_attachment spine_skeleton_bounds_contains_point_attachment(spine_skeleton_bounds bounds, float x, float y) {"
    },
    {
      "name": "spine_skeleton_bounds_intersects_segment_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4781,
          "character": 0
        },
        "end": {
          "line": 4784,
          "character": 1
        }
      },
      "preview": "spine_bounding_box_attachment spine_skeleton_bounds_intersects_segment_attachment(spine_skeleton_bounds bounds, float x1, float y1, float x2, float y2) {"
    },
    {
      "name": "spine_skeleton_bounds_intersects_segment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4786,
          "character": 0
        },
        "end": {
          "line": 4790,
          "character": 1
        }
      },
      "preview": "spine_bool spine_skeleton_bounds_intersects_segment(spine_skeleton_bounds bounds, spine_polygon polygon, float x1, float y1, float x2, float y2) {"
    },
    {
      "name": "spine_skeleton_bounds_get_polygon",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4792,
          "character": 0
        },
        "end": {
          "line": 4796,
          "character": 1
        }
      },
      "preview": "spine_polygon spine_skeleton_bounds_get_polygon(spine_skeleton_bounds bounds, spine_bounding_box_attachment attachment) {"
    },
    {
      "name": "spine_skeleton_bounds_get_bounding_box",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4798,
          "character": 0
        },
        "end": {
          "line": 4802,
          "character": 1
        }
      },
      "preview": "spine_bounding_box_attachment spine_skeleton_bounds_get_bounding_box(spine_skeleton_bounds bounds, spine_polygon polygon) {"
    },
    {
      "name": "spine_skeleton_bounds_get_num_polygons",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4804,
          "character": 0
        },
        "end": {
          "line": 4807,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_bounds_get_num_polygons(spine_skeleton_bounds bounds) {"
    },
    {
      "name": "spine_skeleton_bounds_get_polygons",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4809,
          "character": 0
        },
        "end": {
          "line": 4812,
          "character": 1
        }
      },
      "preview": "spine_polygon *spine_skeleton_bounds_get_polygons(spine_skeleton_bounds bounds) {"
    },
    {
      "name": "spine_skeleton_bounds_get_num_bounding_boxes",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4814,
          "character": 0
        },
        "end": {
          "line": 4817,
          "character": 1
        }
      },
      "preview": "int32_t spine_skeleton_bounds_get_num_bounding_boxes(spine_skeleton_bounds bounds) {"
    },
    {
      "name": "spine_skeleton_bounds_get_bounding_boxes",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4819,
          "character": 0
        },
        "end": {
          "line": 4822,
          "character": 1
        }
      },
      "preview": "spine_bounding_box_attachment *spine_skeleton_bounds_get_bounding_boxes(spine_skeleton_bounds bounds) {"
    },
    {
      "name": "spine_skeleton_bounds_get_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4824,
          "character": 0
        },
        "end": {
          "line": 4827,
          "character": 1
        }
      },
      "preview": "float spine_skeleton_bounds_get_width(spine_skeleton_bounds bounds) {"
    },
    {
      "name": "spine_skeleton_bounds_get_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4829,
          "character": 0
        },
        "end": {
          "line": 4832,
          "character": 1
        }
      },
      "preview": "float spine_skeleton_bounds_get_height(spine_skeleton_bounds bounds) {"
    },
    {
      "name": "spine_polygon_get_num_vertices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4834,
          "character": 0
        },
        "end": {
          "line": 4837,
          "character": 1
        }
      },
      "preview": "int32_t spine_polygon_get_num_vertices(spine_polygon polygon) {"
    },
    {
      "name": "spine_polygon_get_vertices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.cpp",
      "range": {
        "start": {
          "line": 4839,
          "character": 0
        },
        "end": {
          "line": 4842,
          "character": 1
        }
      },
      "preview": "float *spine_polygon_get_vertices(spine_polygon polygon) {"
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 63,
          "character": 0
        },
        "end": {
          "line": 63,
          "character": 33
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_skeleton)",
      "children": [
        {
          "name": "spine_skeleton_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 63,
              "character": 0
            },
            "end": {
              "line": 63,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skeleton)"
        },
        {
          "name": "spine_skeleton_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 63,
              "character": 0
            },
            "end": {
              "line": 63,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skeleton)"
        },
        {
          "name": "spine_skeleton",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 63,
              "character": 0
            },
            "end": {
              "line": 63,
              "character": 32
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skeleton)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 64,
          "character": 0
        },
        "end": {
          "line": 64,
          "character": 38
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_skeleton_data)",
      "children": [
        {
          "name": "spine_skeleton_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 64,
              "character": 0
            },
            "end": {
              "line": 64,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skeleton_data)"
        },
        {
          "name": "spine_skeleton_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 64,
              "character": 0
            },
            "end": {
              "line": 64,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skeleton_data)"
        },
        {
          "name": "spine_skeleton_data",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 64,
              "character": 0
            },
            "end": {
              "line": 64,
              "character": 37
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skeleton_data)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 65,
          "character": 0
        },
        "end": {
          "line": 65,
          "character": 29
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_bone)",
      "children": [
        {
          "name": "spine_bone_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 65,
              "character": 0
            },
            "end": {
              "line": 65,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_bone)"
        },
        {
          "name": "spine_bone_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 65,
              "character": 0
            },
            "end": {
              "line": 65,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_bone)"
        },
        {
          "name": "spine_bone",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 65,
              "character": 0
            },
            "end": {
              "line": 65,
              "character": 28
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_bone)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 66,
          "character": 0
        },
        "end": {
          "line": 66,
          "character": 34
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_bone_data)",
      "children": [
        {
          "name": "spine_bone_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 66,
              "character": 0
            },
            "end": {
              "line": 66,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_bone_data)"
        },
        {
          "name": "spine_bone_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 66,
              "character": 0
            },
            "end": {
              "line": 66,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_bone_data)"
        },
        {
          "name": "spine_bone_data",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 66,
              "character": 0
            },
            "end": {
              "line": 66,
              "character": 33
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_bone_data)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 67,
          "character": 0
        },
        "end": {
          "line": 67,
          "character": 29
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_slot)",
      "children": [
        {
          "name": "spine_slot_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 67,
              "character": 0
            },
            "end": {
              "line": 67,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_slot)"
        },
        {
          "name": "spine_slot_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 67,
              "character": 0
            },
            "end": {
              "line": 67,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_slot)"
        },
        {
          "name": "spine_slot",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 67,
              "character": 0
            },
            "end": {
              "line": 67,
              "character": 28
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_slot)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 68,
          "character": 0
        },
        "end": {
          "line": 68,
          "character": 34
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_slot_data)",
      "children": [
        {
          "name": "spine_slot_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 68,
              "character": 0
            },
            "end": {
              "line": 68,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_slot_data)"
        },
        {
          "name": "spine_slot_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 68,
              "character": 0
            },
            "end": {
              "line": 68,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_slot_data)"
        },
        {
          "name": "spine_slot_data",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 68,
              "character": 0
            },
            "end": {
              "line": 68,
              "character": 33
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_slot_data)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 69,
          "character": 0
        },
        "end": {
          "line": 69,
          "character": 29
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_skin)",
      "children": [
        {
          "name": "spine_skin_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 69,
              "character": 0
            },
            "end": {
              "line": 69,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skin)"
        },
        {
          "name": "spine_skin_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 69,
              "character": 0
            },
            "end": {
              "line": 69,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skin)"
        },
        {
          "name": "spine_skin",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 69,
              "character": 0
            },
            "end": {
              "line": 69,
              "character": 28
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skin)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 70,
          "character": 0
        },
        "end": {
          "line": 70,
          "character": 35
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_attachment)",
      "children": [
        {
          "name": "spine_attachment_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 70,
              "character": 0
            },
            "end": {
              "line": 70,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_attachment)"
        },
        {
          "name": "spine_attachment_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 70,
              "character": 0
            },
            "end": {
              "line": 70,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_attachment)"
        },
        {
          "name": "spine_attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 70,
              "character": 0
            },
            "end": {
              "line": 70,
              "character": 34
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_attachment)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 71,
          "character": 0
        },
        "end": {
          "line": 71,
          "character": 42
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_region_attachment)",
      "children": [
        {
          "name": "spine_region_attachment_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 71,
              "character": 0
            },
            "end": {
              "line": 71,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_region_attachment)"
        },
        {
          "name": "spine_region_attachment_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 71,
              "character": 0
            },
            "end": {
              "line": 71,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_region_attachment)"
        },
        {
          "name": "spine_region_attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 71,
              "character": 0
            },
            "end": {
              "line": 71,
              "character": 41
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_region_attachment)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 72,
          "character": 0
        },
        "end": {
          "line": 72,
          "character": 42
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_vertex_attachment)",
      "children": [
        {
          "name": "spine_vertex_attachment_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 72,
              "character": 0
            },
            "end": {
              "line": 72,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_vertex_attachment)"
        },
        {
          "name": "spine_vertex_attachment_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 72,
              "character": 0
            },
            "end": {
              "line": 72,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_vertex_attachment)"
        },
        {
          "name": "spine_vertex_attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 72,
              "character": 0
            },
            "end": {
              "line": 72,
              "character": 41
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_vertex_attachment)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 73,
          "character": 0
        },
        "end": {
          "line": 73,
          "character": 40
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_mesh_attachment)",
      "children": [
        {
          "name": "spine_mesh_attachment_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 73,
              "character": 0
            },
            "end": {
              "line": 73,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_mesh_attachment)"
        },
        {
          "name": "spine_mesh_attachment_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 73,
              "character": 0
            },
            "end": {
              "line": 73,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_mesh_attachment)"
        },
        {
          "name": "spine_mesh_attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 73,
              "character": 0
            },
            "end": {
              "line": 73,
              "character": 39
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_mesh_attachment)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 74,
          "character": 0
        },
        "end": {
          "line": 74,
          "character": 44
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_clipping_attachment)",
      "children": [
        {
          "name": "spine_clipping_attachment_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 74,
              "character": 0
            },
            "end": {
              "line": 74,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_clipping_attachment)"
        },
        {
          "name": "spine_clipping_attachment_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 74,
              "character": 0
            },
            "end": {
              "line": 74,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_clipping_attachment)"
        },
        {
          "name": "spine_clipping_attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 74,
              "character": 0
            },
            "end": {
              "line": 74,
              "character": 43
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_clipping_attachment)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 75,
          "character": 0
        },
        "end": {
          "line": 75,
          "character": 48
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_bounding_box_attachment)",
      "children": [
        {
          "name": "spine_bounding_box_attachment_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 75,
              "character": 0
            },
            "end": {
              "line": 75,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_bounding_box_attachment)"
        },
        {
          "name": "spine_bounding_box_attachment_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 75,
              "character": 0
            },
            "end": {
              "line": 75,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_bounding_box_attachment)"
        },
        {
          "name": "spine_bounding_box_attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 75,
              "character": 0
            },
            "end": {
              "line": 75,
              "character": 47
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_bounding_box_attachment)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 76,
          "character": 0
        },
        "end": {
          "line": 76,
          "character": 40
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_path_attachment)",
      "children": [
        {
          "name": "spine_path_attachment_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 76,
              "character": 0
            },
            "end": {
              "line": 76,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_path_attachment)"
        },
        {
          "name": "spine_path_attachment_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 76,
              "character": 0
            },
            "end": {
              "line": 76,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_path_attachment)"
        },
        {
          "name": "spine_path_attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 76,
              "character": 0
            },
            "end": {
              "line": 76,
              "character": 39
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_path_attachment)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 77,
          "character": 0
        },
        "end": {
          "line": 77,
          "character": 41
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_point_attachment)",
      "children": [
        {
          "name": "spine_point_attachment_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 77,
              "character": 0
            },
            "end": {
              "line": 77,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_point_attachment)"
        },
        {
          "name": "spine_point_attachment_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 77,
              "character": 0
            },
            "end": {
              "line": 77,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_point_attachment)"
        },
        {
          "name": "spine_point_attachment",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 77,
              "character": 0
            },
            "end": {
              "line": 77,
              "character": 40
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_point_attachment)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 78,
          "character": 0
        },
        "end": {
          "line": 78,
          "character": 39
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_texture_region)",
      "children": [
        {
          "name": "spine_texture_region_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 78,
              "character": 0
            },
            "end": {
              "line": 78,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_texture_region)"
        },
        {
          "name": "spine_texture_region_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 78,
              "character": 0
            },
            "end": {
              "line": 78,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_texture_region)"
        },
        {
          "name": "spine_texture_region",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 78,
              "character": 0
            },
            "end": {
              "line": 78,
              "character": 38
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_texture_region)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 79,
          "character": 0
        },
        "end": {
          "line": 79,
          "character": 33
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_sequence)",
      "children": [
        {
          "name": "spine_sequence_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 79,
              "character": 0
            },
            "end": {
              "line": 79,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_sequence)"
        },
        {
          "name": "spine_sequence_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 79,
              "character": 0
            },
            "end": {
              "line": 79,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_sequence)"
        },
        {
          "name": "spine_sequence",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 79,
              "character": 0
            },
            "end": {
              "line": 79,
              "character": 32
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_sequence)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 80,
          "character": 0
        },
        "end": {
          "line": 80,
          "character": 35
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_constraint)",
      "children": [
        {
          "name": "spine_constraint_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 80,
              "character": 0
            },
            "end": {
              "line": 80,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_constraint)"
        },
        {
          "name": "spine_constraint_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 80,
              "character": 0
            },
            "end": {
              "line": 80,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_constraint)"
        },
        {
          "name": "spine_constraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 80,
              "character": 0
            },
            "end": {
              "line": 80,
              "character": 34
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_constraint)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 81,
          "character": 0
        },
        "end": {
          "line": 81,
          "character": 40
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_constraint_data)",
      "children": [
        {
          "name": "spine_constraint_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 81,
              "character": 0
            },
            "end": {
              "line": 81,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_constraint_data)"
        },
        {
          "name": "spine_constraint_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 81,
              "character": 0
            },
            "end": {
              "line": 81,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_constraint_data)"
        },
        {
          "name": "spine_constraint_data",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 81,
              "character": 0
            },
            "end": {
              "line": 81,
              "character": 39
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_constraint_data)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 82,
          "character": 0
        },
        "end": {
          "line": 82,
          "character": 38
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_ik_constraint)",
      "children": [
        {
          "name": "spine_ik_constraint_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 82,
              "character": 0
            },
            "end": {
              "line": 82,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_ik_constraint)"
        },
        {
          "name": "spine_ik_constraint_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 82,
              "character": 0
            },
            "end": {
              "line": 82,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_ik_constraint)"
        },
        {
          "name": "spine_ik_constraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 82,
              "character": 0
            },
            "end": {
              "line": 82,
              "character": 37
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_ik_constraint)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 83,
          "character": 0
        },
        "end": {
          "line": 83,
          "character": 43
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_ik_constraint_data)",
      "children": [
        {
          "name": "spine_ik_constraint_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 83,
              "character": 0
            },
            "end": {
              "line": 83,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_ik_constraint_data)"
        },
        {
          "name": "spine_ik_constraint_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 83,
              "character": 0
            },
            "end": {
              "line": 83,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_ik_constraint_data)"
        },
        {
          "name": "spine_ik_constraint_data",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 83,
              "character": 0
            },
            "end": {
              "line": 83,
              "character": 42
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_ik_constraint_data)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 84,
          "character": 0
        },
        "end": {
          "line": 84,
          "character": 45
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_transform_constraint)",
      "children": [
        {
          "name": "spine_transform_constraint_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 84,
              "character": 0
            },
            "end": {
              "line": 84,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_transform_constraint)"
        },
        {
          "name": "spine_transform_constraint_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 84,
              "character": 0
            },
            "end": {
              "line": 84,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_transform_constraint)"
        },
        {
          "name": "spine_transform_constraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 84,
              "character": 0
            },
            "end": {
              "line": 84,
              "character": 44
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_transform_constraint)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 85,
          "character": 0
        },
        "end": {
          "line": 85,
          "character": 50
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_transform_constraint_data)",
      "children": [
        {
          "name": "spine_transform_constraint_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 85,
              "character": 0
            },
            "end": {
              "line": 85,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_transform_constraint_data)"
        },
        {
          "name": "spine_transform_constraint_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 85,
              "character": 0
            },
            "end": {
              "line": 85,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_transform_constraint_data)"
        },
        {
          "name": "spine_transform_constraint_data",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 85,
              "character": 0
            },
            "end": {
              "line": 85,
              "character": 49
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_transform_constraint_data)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 86,
          "character": 0
        },
        "end": {
          "line": 86,
          "character": 40
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_path_constraint)",
      "children": [
        {
          "name": "spine_path_constraint_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 86,
              "character": 0
            },
            "end": {
              "line": 86,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_path_constraint)"
        },
        {
          "name": "spine_path_constraint_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 86,
              "character": 0
            },
            "end": {
              "line": 86,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_path_constraint)"
        },
        {
          "name": "spine_path_constraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 86,
              "character": 0
            },
            "end": {
              "line": 86,
              "character": 39
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_path_constraint)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 87,
          "character": 0
        },
        "end": {
          "line": 87,
          "character": 45
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_path_constraint_data)",
      "children": [
        {
          "name": "spine_path_constraint_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 87,
              "character": 0
            },
            "end": {
              "line": 87,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_path_constraint_data)"
        },
        {
          "name": "spine_path_constraint_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 87,
              "character": 0
            },
            "end": {
              "line": 87,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_path_constraint_data)"
        },
        {
          "name": "spine_path_constraint_data",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 87,
              "character": 0
            },
            "end": {
              "line": 87,
              "character": 44
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_path_constraint_data)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 88,
          "character": 0
        },
        "end": {
          "line": 88,
          "character": 43
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_physics_constraint)",
      "children": [
        {
          "name": "spine_physics_constraint_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 88,
              "character": 0
            },
            "end": {
              "line": 88,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_physics_constraint)"
        },
        {
          "name": "spine_physics_constraint_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 88,
              "character": 0
            },
            "end": {
              "line": 88,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_physics_constraint)"
        },
        {
          "name": "spine_physics_constraint",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 88,
              "character": 0
            },
            "end": {
              "line": 88,
              "character": 42
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_physics_constraint)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 89,
          "character": 0
        },
        "end": {
          "line": 89,
          "character": 48
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_physics_constraint_data)",
      "children": [
        {
          "name": "spine_physics_constraint_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 89,
              "character": 0
            },
            "end": {
              "line": 89,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_physics_constraint_data)"
        },
        {
          "name": "spine_physics_constraint_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 89,
              "character": 0
            },
            "end": {
              "line": 89,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_physics_constraint_data)"
        },
        {
          "name": "spine_physics_constraint_data",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 89,
              "character": 0
            },
            "end": {
              "line": 89,
              "character": 47
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_physics_constraint_data)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 90,
          "character": 0
        },
        "end": {
          "line": 90,
          "character": 40
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_animation_state)",
      "children": [
        {
          "name": "spine_animation_state_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 90,
              "character": 0
            },
            "end": {
              "line": 90,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_animation_state)"
        },
        {
          "name": "spine_animation_state_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 90,
              "character": 0
            },
            "end": {
              "line": 90,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_animation_state)"
        },
        {
          "name": "spine_animation_state",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 90,
              "character": 0
            },
            "end": {
              "line": 90,
              "character": 39
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_animation_state)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 91,
          "character": 0
        },
        "end": {
          "line": 91,
          "character": 45
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_animation_state_data)",
      "children": [
        {
          "name": "spine_animation_state_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 91,
              "character": 0
            },
            "end": {
              "line": 91,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_animation_state_data)"
        },
        {
          "name": "spine_animation_state_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 91,
              "character": 0
            },
            "end": {
              "line": 91,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_animation_state_data)"
        },
        {
          "name": "spine_animation_state_data",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 91,
              "character": 0
            },
            "end": {
              "line": 91,
              "character": 44
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_animation_state_data)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 92,
          "character": 0
        },
        "end": {
          "line": 92,
          "character": 47
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_animation_state_events)",
      "children": [
        {
          "name": "spine_animation_state_events_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 92,
              "character": 0
            },
            "end": {
              "line": 92,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_animation_state_events)"
        },
        {
          "name": "spine_animation_state_events_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 92,
              "character": 0
            },
            "end": {
              "line": 92,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_animation_state_events)"
        },
        {
          "name": "spine_animation_state_events",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 92,
              "character": 0
            },
            "end": {
              "line": 92,
              "character": 46
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_animation_state_events)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 93,
          "character": 0
        },
        "end": {
          "line": 93,
          "character": 30
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_event)",
      "children": [
        {
          "name": "spine_event_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 93,
              "character": 0
            },
            "end": {
              "line": 93,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_event)"
        },
        {
          "name": "spine_event_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 93,
              "character": 0
            },
            "end": {
              "line": 93,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_event)"
        },
        {
          "name": "spine_event",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 93,
              "character": 0
            },
            "end": {
              "line": 93,
              "character": 29
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_event)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 94,
          "character": 0
        },
        "end": {
          "line": 94,
          "character": 35
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_event_data)",
      "children": [
        {
          "name": "spine_event_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 94,
              "character": 0
            },
            "end": {
              "line": 94,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_event_data)"
        },
        {
          "name": "spine_event_data_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 94,
              "character": 0
            },
            "end": {
              "line": 94,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_event_data)"
        },
        {
          "name": "spine_event_data",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 94,
              "character": 0
            },
            "end": {
              "line": 94,
              "character": 34
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_event_data)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 95,
          "character": 0
        },
        "end": {
          "line": 95,
          "character": 36
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_track_entry)",
      "children": [
        {
          "name": "spine_track_entry_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 95,
              "character": 0
            },
            "end": {
              "line": 95,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_track_entry)"
        },
        {
          "name": "spine_track_entry_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 95,
              "character": 0
            },
            "end": {
              "line": 95,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_track_entry)"
        },
        {
          "name": "spine_track_entry",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 95,
              "character": 0
            },
            "end": {
              "line": 95,
              "character": 35
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_track_entry)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 96,
          "character": 0
        },
        "end": {
          "line": 96,
          "character": 34
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_animation)",
      "children": [
        {
          "name": "spine_animation_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 96,
              "character": 0
            },
            "end": {
              "line": 96,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_animation)"
        },
        {
          "name": "spine_animation_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 96,
              "character": 0
            },
            "end": {
              "line": 96,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_animation)"
        },
        {
          "name": "spine_animation",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 96,
              "character": 0
            },
            "end": {
              "line": 96,
              "character": 33
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_animation)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 97,
          "character": 0
        },
        "end": {
          "line": 97,
          "character": 30
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_atlas)",
      "children": [
        {
          "name": "spine_atlas_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 97,
              "character": 0
            },
            "end": {
              "line": 97,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_atlas)"
        },
        {
          "name": "spine_atlas_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 97,
              "character": 0
            },
            "end": {
              "line": 97,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_atlas)"
        },
        {
          "name": "spine_atlas",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 97,
              "character": 0
            },
            "end": {
              "line": 97,
              "character": 29
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_atlas)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 98,
          "character": 0
        },
        "end": {
          "line": 98,
          "character": 45
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_skeleton_data_result)",
      "children": [
        {
          "name": "spine_skeleton_data_result_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 98,
              "character": 0
            },
            "end": {
              "line": 98,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skeleton_data_result)"
        },
        {
          "name": "spine_skeleton_data_result_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 98,
              "character": 0
            },
            "end": {
              "line": 98,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skeleton_data_result)"
        },
        {
          "name": "spine_skeleton_data_result",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 98,
              "character": 0
            },
            "end": {
              "line": 98,
              "character": 44
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skeleton_data_result)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 99,
          "character": 0
        },
        "end": {
          "line": 99,
          "character": 39
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_render_command)",
      "children": [
        {
          "name": "spine_render_command_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 99,
              "character": 0
            },
            "end": {
              "line": 99,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_render_command)"
        },
        {
          "name": "spine_render_command_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 99,
              "character": 0
            },
            "end": {
              "line": 99,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_render_command)"
        },
        {
          "name": "spine_render_command",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 99,
              "character": 0
            },
            "end": {
              "line": 99,
              "character": 38
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_render_command)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 100,
          "character": 0
        },
        "end": {
          "line": 100,
          "character": 31
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_bounds)",
      "children": [
        {
          "name": "spine_bounds_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 100,
              "character": 0
            },
            "end": {
              "line": 100,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_bounds)"
        },
        {
          "name": "spine_bounds_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 100,
              "character": 0
            },
            "end": {
              "line": 100,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_bounds)"
        },
        {
          "name": "spine_bounds",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 100,
              "character": 0
            },
            "end": {
              "line": 100,
              "character": 30
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_bounds)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 101,
          "character": 0
        },
        "end": {
          "line": 101,
          "character": 30
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_color)",
      "children": [
        {
          "name": "spine_color_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 101,
              "character": 0
            },
            "end": {
              "line": 101,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_color)"
        },
        {
          "name": "spine_color_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 101,
              "character": 0
            },
            "end": {
              "line": 101,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_color)"
        },
        {
          "name": "spine_color",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 101,
              "character": 0
            },
            "end": {
              "line": 101,
              "character": 29
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_color)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 102,
          "character": 0
        },
        "end": {
          "line": 102,
          "character": 31
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_vector)",
      "children": [
        {
          "name": "spine_vector_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 102,
              "character": 0
            },
            "end": {
              "line": 102,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_vector)"
        },
        {
          "name": "spine_vector_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 102,
              "character": 0
            },
            "end": {
              "line": 102,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_vector)"
        },
        {
          "name": "spine_vector",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 102,
              "character": 0
            },
            "end": {
              "line": 102,
              "character": 30
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_vector)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 103,
          "character": 0
        },
        "end": {
          "line": 103,
          "character": 42
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_skeleton_drawable)",
      "children": [
        {
          "name": "spine_skeleton_drawable_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 103,
              "character": 0
            },
            "end": {
              "line": 103,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skeleton_drawable)"
        },
        {
          "name": "spine_skeleton_drawable_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 103,
              "character": 0
            },
            "end": {
              "line": 103,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skeleton_drawable)"
        },
        {
          "name": "spine_skeleton_drawable",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 103,
              "character": 0
            },
            "end": {
              "line": 103,
              "character": 41
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skeleton_drawable)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 104,
          "character": 0
        },
        "end": {
          "line": 104,
          "character": 35
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_skin_entry)",
      "children": [
        {
          "name": "spine_skin_entry_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 104,
              "character": 0
            },
            "end": {
              "line": 104,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skin_entry)"
        },
        {
          "name": "spine_skin_entry_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 104,
              "character": 0
            },
            "end": {
              "line": 104,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skin_entry)"
        },
        {
          "name": "spine_skin_entry",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 104,
              "character": 0
            },
            "end": {
              "line": 104,
              "character": 34
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skin_entry)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 105,
          "character": 0
        },
        "end": {
          "line": 105,
          "character": 37
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_skin_entries)",
      "children": [
        {
          "name": "spine_skin_entries_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 105,
              "character": 0
            },
            "end": {
              "line": 105,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skin_entries)"
        },
        {
          "name": "spine_skin_entries_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 105,
              "character": 0
            },
            "end": {
              "line": 105,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skin_entries)"
        },
        {
          "name": "spine_skin_entries",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 105,
              "character": 0
            },
            "end": {
              "line": 105,
              "character": 36
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skin_entries)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 106,
          "character": 0
        },
        "end": {
          "line": 106,
          "character": 40
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_skeleton_bounds)",
      "children": [
        {
          "name": "spine_skeleton_bounds_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 106,
              "character": 0
            },
            "end": {
              "line": 106,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skeleton_bounds)"
        },
        {
          "name": "spine_skeleton_bounds_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 106,
              "character": 0
            },
            "end": {
              "line": 106,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skeleton_bounds)"
        },
        {
          "name": "spine_skeleton_bounds",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 106,
              "character": 0
            },
            "end": {
              "line": 106,
              "character": 39
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_skeleton_bounds)"
        }
      ]
    },
    {
      "name": "SPINE_OPAQUE_TYPE",
      "kind": "unknown",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 107,
          "character": 0
        },
        "end": {
          "line": 107,
          "character": 32
        }
      },
      "preview": "SPINE_OPAQUE_TYPE(spine_polygon)",
      "children": [
        {
          "name": "spine_polygon_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 107,
              "character": 0
            },
            "end": {
              "line": 107,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_polygon)"
        },
        {
          "name": "spine_polygon_wrapper",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 107,
              "character": 0
            },
            "end": {
              "line": 107,
              "character": 17
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_polygon)"
        },
        {
          "name": "spine_polygon",
          "kind": "class",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 107,
              "character": 0
            },
            "end": {
              "line": 107,
              "character": 31
            }
          },
          "preview": "SPINE_OPAQUE_TYPE(spine_polygon)"
        }
      ]
    },
    {
      "name": "utf8",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 111,
          "character": 0
        },
        "end": {
          "line": 111,
          "character": 17
        }
      },
      "preview": "typedef char utf8;"
    },
    {
      "name": "spine_blend_mode",
      "kind": "enum",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 115,
          "character": 0
        },
        "end": {
          "line": 120,
          "character": 1
        }
      },
      "preview": "typedef enum spine_blend_mode {",
      "children": [
        {
          "name": "SPINE_BLEND_MODE_NORMAL",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 116,
              "character": 0
            },
            "end": {
              "line": 116,
              "character": 28
            }
          },
          "preview": "SPINE_BLEND_MODE_NORMAL = 0,"
        },
        {
          "name": "SPINE_BLEND_MODE_ADDITIVE",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 117,
              "character": 0
            },
            "end": {
              "line": 117,
              "character": 26
            }
          },
          "preview": "SPINE_BLEND_MODE_ADDITIVE,"
        },
        {
          "name": "SPINE_BLEND_MODE_MULTIPLY",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 118,
              "character": 0
            },
            "end": {
              "line": 118,
              "character": 26
            }
          },
          "preview": "SPINE_BLEND_MODE_MULTIPLY,"
        },
        {
          "name": "SPINE_BLEND_MODE_SCREEN",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 119,
              "character": 0
            },
            "end": {
              "line": 119,
              "character": 24
            }
          },
          "preview": "SPINE_BLEND_MODE_SCREEN"
        }
      ]
    },
    {
      "name": "spine_blend_mode",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 120,
          "character": 0
        },
        "end": {
          "line": 120,
          "character": 18
        }
      },
      "preview": "} spine_blend_mode;"
    },
    {
      "name": "spine_mix_blend",
      "kind": "enum",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 122,
          "character": 0
        },
        "end": {
          "line": 127,
          "character": 1
        }
      },
      "preview": "typedef enum spine_mix_blend {",
      "children": [
        {
          "name": "SPINE_MIX_BLEND_SETUP",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 123,
              "character": 0
            },
            "end": {
              "line": 123,
              "character": 26
            }
          },
          "preview": "SPINE_MIX_BLEND_SETUP = 0,"
        },
        {
          "name": "SPINE_MIX_BLEND_FIRST",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 124,
              "character": 0
            },
            "end": {
              "line": 124,
              "character": 22
            }
          },
          "preview": "SPINE_MIX_BLEND_FIRST,"
        },
        {
          "name": "SPINE_MIX_BLEND_REPLACE",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 125,
              "character": 0
            },
            "end": {
              "line": 125,
              "character": 24
            }
          },
          "preview": "SPINE_MIX_BLEND_REPLACE,"
        },
        {
          "name": "SPINE_MIX_BLEND_ADD",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 126,
              "character": 0
            },
            "end": {
              "line": 126,
              "character": 20
            }
          },
          "preview": "SPINE_MIX_BLEND_ADD"
        }
      ]
    },
    {
      "name": "spine_mix_blend",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 127,
          "character": 0
        },
        "end": {
          "line": 127,
          "character": 17
        }
      },
      "preview": "} spine_mix_blend;"
    },
    {
      "name": "spine_event_type",
      "kind": "enum",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 129,
          "character": 0
        },
        "end": {
          "line": 136,
          "character": 1
        }
      },
      "preview": "typedef enum spine_event_type {",
      "children": [
        {
          "name": "SPINE_EVENT_TYPE_START",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 130,
              "character": 0
            },
            "end": {
              "line": 130,
              "character": 27
            }
          },
          "preview": "SPINE_EVENT_TYPE_START = 0,"
        },
        {
          "name": "SPINE_EVENT_TYPE_INTERRUPT",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 131,
              "character": 0
            },
            "end": {
              "line": 131,
              "character": 27
            }
          },
          "preview": "SPINE_EVENT_TYPE_INTERRUPT,"
        },
        {
          "name": "SPINE_EVENT_TYPE_END",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 132,
              "character": 0
            },
            "end": {
              "line": 132,
              "character": 21
            }
          },
          "preview": "SPINE_EVENT_TYPE_END,"
        },
        {
          "name": "SPINE_EVENT_TYPE_COMPLETE",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 133,
              "character": 0
            },
            "end": {
              "line": 133,
              "character": 26
            }
          },
          "preview": "SPINE_EVENT_TYPE_COMPLETE,"
        },
        {
          "name": "SPINE_EVENT_TYPE_DISPOSE",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 134,
              "character": 0
            },
            "end": {
              "line": 134,
              "character": 25
            }
          },
          "preview": "SPINE_EVENT_TYPE_DISPOSE,"
        },
        {
          "name": "SPINE_EVENT_TYPE_EVENT",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 135,
              "character": 0
            },
            "end": {
              "line": 135,
              "character": 23
            }
          },
          "preview": "SPINE_EVENT_TYPE_EVENT"
        }
      ]
    },
    {
      "name": "spine_event_type",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 136,
          "character": 0
        },
        "end": {
          "line": 136,
          "character": 18
        }
      },
      "preview": "} spine_event_type;"
    },
    {
      "name": "spine_attachment_type",
      "kind": "enum",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 138,
          "character": 0
        },
        "end": {
          "line": 145,
          "character": 1
        }
      },
      "preview": "typedef enum spine_attachment_type {",
      "children": [
        {
          "name": "SPINE_ATTACHMENT_REGION",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 139,
              "character": 0
            },
            "end": {
              "line": 139,
              "character": 28
            }
          },
          "preview": "SPINE_ATTACHMENT_REGION = 0,"
        },
        {
          "name": "SPINE_ATTACHMENT_MESH",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 140,
              "character": 0
            },
            "end": {
              "line": 140,
              "character": 22
            }
          },
          "preview": "SPINE_ATTACHMENT_MESH,"
        },
        {
          "name": "SPINE_ATTACHMENT_CLIPPING",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 141,
              "character": 0
            },
            "end": {
              "line": 141,
              "character": 26
            }
          },
          "preview": "SPINE_ATTACHMENT_CLIPPING,"
        },
        {
          "name": "SPINE_ATTACHMENT_BOUNDING_BOX",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 142,
              "character": 0
            },
            "end": {
              "line": 142,
              "character": 30
            }
          },
          "preview": "SPINE_ATTACHMENT_BOUNDING_BOX,"
        },
        {
          "name": "SPINE_ATTACHMENT_PATH",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 143,
              "character": 0
            },
            "end": {
              "line": 143,
              "character": 22
            }
          },
          "preview": "SPINE_ATTACHMENT_PATH,"
        },
        {
          "name": "SPINE_ATTACHMENT_POINT",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 144,
              "character": 0
            },
            "end": {
              "line": 144,
              "character": 23
            }
          },
          "preview": "SPINE_ATTACHMENT_POINT,"
        }
      ]
    },
    {
      "name": "spine_attachment_type",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 145,
          "character": 0
        },
        "end": {
          "line": 145,
          "character": 23
        }
      },
      "preview": "} spine_attachment_type;"
    },
    {
      "name": "spine_constraint_type",
      "kind": "enum",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 147,
          "character": 0
        },
        "end": {
          "line": 151,
          "character": 1
        }
      },
      "preview": "typedef enum spine_constraint_type {",
      "children": [
        {
          "name": "SPINE_CONSTRAINT_IK",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 148,
              "character": 0
            },
            "end": {
              "line": 148,
              "character": 20
            }
          },
          "preview": "SPINE_CONSTRAINT_IK,"
        },
        {
          "name": "SPINE_CONSTRAINT_TRANSFORM",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 149,
              "character": 0
            },
            "end": {
              "line": 149,
              "character": 27
            }
          },
          "preview": "SPINE_CONSTRAINT_TRANSFORM,"
        },
        {
          "name": "SPINE_CONSTRAINT_PATH",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 150,
              "character": 0
            },
            "end": {
              "line": 150,
              "character": 22
            }
          },
          "preview": "SPINE_CONSTRAINT_PATH"
        }
      ]
    },
    {
      "name": "spine_constraint_type",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 151,
          "character": 0
        },
        "end": {
          "line": 151,
          "character": 23
        }
      },
      "preview": "} spine_constraint_type;"
    },
    {
      "name": "spine_inherit",
      "kind": "enum",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 153,
          "character": 0
        },
        "end": {
          "line": 159,
          "character": 1
        }
      },
      "preview": "typedef enum spine_inherit {",
      "children": [
        {
          "name": "SPINE_INHERIT_NORMAL",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 154,
              "character": 0
            },
            "end": {
              "line": 154,
              "character": 25
            }
          },
          "preview": "SPINE_INHERIT_NORMAL = 0,"
        },
        {
          "name": "SPINE_INHERIT_ONLY_TRANSLATION",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 155,
              "character": 0
            },
            "end": {
              "line": 155,
              "character": 31
            }
          },
          "preview": "SPINE_INHERIT_ONLY_TRANSLATION,"
        },
        {
          "name": "SPINE_INHERIT_NO_ROTATION_OR_REFLECTION",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 156,
              "character": 0
            },
            "end": {
              "line": 156,
              "character": 40
            }
          },
          "preview": "SPINE_INHERIT_NO_ROTATION_OR_REFLECTION,"
        },
        {
          "name": "SPINE_INHERIT_NO_SCALE",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 157,
              "character": 0
            },
            "end": {
              "line": 157,
              "character": 23
            }
          },
          "preview": "SPINE_INHERIT_NO_SCALE,"
        },
        {
          "name": "SPINE_INHERIT_NO_SCALE_OR_REFLECTION",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 158,
              "character": 0
            },
            "end": {
              "line": 158,
              "character": 37
            }
          },
          "preview": "SPINE_INHERIT_NO_SCALE_OR_REFLECTION"
        }
      ]
    },
    {
      "name": "spine_inherit",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 159,
          "character": 0
        },
        "end": {
          "line": 159,
          "character": 15
        }
      },
      "preview": "} spine_inherit;"
    },
    {
      "name": "spine_position_mode",
      "kind": "enum",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 161,
          "character": 0
        },
        "end": {
          "line": 164,
          "character": 1
        }
      },
      "preview": "typedef enum spine_position_mode {",
      "children": [
        {
          "name": "SPINE_POSITION_MODE_FIXED",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 162,
              "character": 0
            },
            "end": {
              "line": 162,
              "character": 30
            }
          },
          "preview": "SPINE_POSITION_MODE_FIXED = 0,"
        },
        {
          "name": "SPINE_POSITION_MODE_PERCENT",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 163,
              "character": 0
            },
            "end": {
              "line": 163,
              "character": 28
            }
          },
          "preview": "SPINE_POSITION_MODE_PERCENT"
        }
      ]
    },
    {
      "name": "spine_position_mode",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 164,
          "character": 0
        },
        "end": {
          "line": 164,
          "character": 21
        }
      },
      "preview": "} spine_position_mode;"
    },
    {
      "name": "spine_spacing_mode",
      "kind": "enum",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 166,
          "character": 0
        },
        "end": {
          "line": 171,
          "character": 1
        }
      },
      "preview": "typedef enum spine_spacing_mode {",
      "children": [
        {
          "name": "SPINE_SPACING_MODE_LENGTH",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 167,
              "character": 0
            },
            "end": {
              "line": 167,
              "character": 30
            }
          },
          "preview": "SPINE_SPACING_MODE_LENGTH = 0,"
        },
        {
          "name": "SPINE_SPACING_MODE_FIXED",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 168,
              "character": 0
            },
            "end": {
              "line": 168,
              "character": 25
            }
          },
          "preview": "SPINE_SPACING_MODE_FIXED,"
        },
        {
          "name": "SPINE_SPACING_MODE_PERCENT",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 169,
              "character": 0
            },
            "end": {
              "line": 169,
              "character": 27
            }
          },
          "preview": "SPINE_SPACING_MODE_PERCENT,"
        },
        {
          "name": "SPINE_SPACING_MODE_PROPORTIONAL",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 170,
              "character": 0
            },
            "end": {
              "line": 170,
              "character": 32
            }
          },
          "preview": "SPINE_SPACING_MODE_PROPORTIONAL"
        }
      ]
    },
    {
      "name": "spine_spacing_mode",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 171,
          "character": 0
        },
        "end": {
          "line": 171,
          "character": 20
        }
      },
      "preview": "} spine_spacing_mode;"
    },
    {
      "name": "spine_rotate_mode",
      "kind": "enum",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 173,
          "character": 0
        },
        "end": {
          "line": 177,
          "character": 1
        }
      },
      "preview": "typedef enum spine_rotate_mode {",
      "children": [
        {
          "name": "SPINE_ROTATE_MODE_TANGENT",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 174,
              "character": 0
            },
            "end": {
              "line": 174,
              "character": 30
            }
          },
          "preview": "SPINE_ROTATE_MODE_TANGENT = 0,"
        },
        {
          "name": "SPINE_ROTATE_MODE_CHAIN",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 175,
              "character": 0
            },
            "end": {
              "line": 175,
              "character": 24
            }
          },
          "preview": "SPINE_ROTATE_MODE_CHAIN,"
        },
        {
          "name": "SPINE_ROTATE_MODE_CHAIN_SCALE",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 176,
              "character": 0
            },
            "end": {
              "line": 176,
              "character": 30
            }
          },
          "preview": "SPINE_ROTATE_MODE_CHAIN_SCALE"
        }
      ]
    },
    {
      "name": "spine_rotate_mode",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 177,
          "character": 0
        },
        "end": {
          "line": 177,
          "character": 19
        }
      },
      "preview": "} spine_rotate_mode;"
    },
    {
      "name": "spine_physics",
      "kind": "enum",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 179,
          "character": 0
        },
        "end": {
          "line": 185,
          "character": 1
        }
      },
      "preview": "typedef enum spine_physics {",
      "children": [
        {
          "name": "SPINE_PHYSICS_NONE",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 180,
              "character": 0
            },
            "end": {
              "line": 180,
              "character": 23
            }
          },
          "preview": "SPINE_PHYSICS_NONE = 0,"
        },
        {
          "name": "SPINE_PHYSICS_RESET",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 181,
              "character": 0
            },
            "end": {
              "line": 181,
              "character": 20
            }
          },
          "preview": "SPINE_PHYSICS_RESET,"
        },
        {
          "name": "SPINE_PHYSICS_UPDATE",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 182,
              "character": 0
            },
            "end": {
              "line": 182,
              "character": 21
            }
          },
          "preview": "SPINE_PHYSICS_UPDATE,"
        },
        {
          "name": "SPINE_PHYSICS_POSE",
          "kind": "enum",
          "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
          "range": {
            "start": {
              "line": 183,
              "character": 0
            },
            "end": {
              "line": 183,
              "character": 19
            }
          },
          "preview": "SPINE_PHYSICS_POSE"
        }
      ]
    },
    {
      "name": "spine_physics",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 185,
          "character": 0
        },
        "end": {
          "line": 185,
          "character": 15
        }
      },
      "preview": "} spine_physics;"
    },
    {
      "name": "spine_bool",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 189,
          "character": 0
        },
        "end": {
          "line": 189,
          "character": 26
        }
      },
      "preview": "typedef int32_t spine_bool;"
    },
    {
      "name": "spine_texture_loader_load_func",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 191,
          "character": 0
        },
        "end": {
          "line": 191,
          "character": 65
        }
      },
      "preview": "typedef void* (*spine_texture_loader_load_func)(const char *path);"
    },
    {
      "name": "spine_texture_loader_unload_func",
      "kind": "class",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 193,
          "character": 0
        },
        "end": {
          "line": 193,
          "character": 63
        }
      },
      "preview": "typedef void (*spine_texture_loader_unload_func)(void *texture);"
    },
    {
      "name": "spine_major_version",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 197,
          "character": 0
        },
        "end": {
          "line": 197,
          "character": 51
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_major_version();"
    },
    {
      "name": "spine_minor_version",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 198,
          "character": 0
        },
        "end": {
          "line": 198,
          "character": 51
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_minor_version();"
    },
    {
      "name": "spine_enable_debug_extension",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 199,
          "character": 0
        },
        "end": {
          "line": 199,
          "character": 74
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_enable_debug_extension(spine_bool enable);"
    },
    {
      "name": "spine_report_leaks",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 200,
          "character": 0
        },
        "end": {
          "line": 200,
          "character": 47
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_report_leaks();"
    },
    {
      "name": "spine_color_get_r",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 202,
          "character": 0
        },
        "end": {
          "line": 202,
          "character": 64
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_color_get_r(spine_color color);"
    },
    {
      "name": "spine_color_get_g",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 203,
          "character": 0
        },
        "end": {
          "line": 203,
          "character": 64
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_color_get_g(spine_color color);"
    },
    {
      "name": "spine_color_get_b",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 204,
          "character": 0
        },
        "end": {
          "line": 204,
          "character": 64
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_color_get_b(spine_color color);"
    },
    {
      "name": "spine_color_get_a",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 205,
          "character": 0
        },
        "end": {
          "line": 205,
          "character": 64
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_color_get_a(spine_color color);"
    },
    {
      "name": "spine_bounds_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 207,
          "character": 0
        },
        "end": {
          "line": 207,
          "character": 67
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bounds_get_x(spine_bounds bounds);"
    },
    {
      "name": "spine_bounds_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 208,
          "character": 0
        },
        "end": {
          "line": 208,
          "character": 67
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bounds_get_y(spine_bounds bounds);"
    },
    {
      "name": "spine_bounds_get_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 209,
          "character": 0
        },
        "end": {
          "line": 209,
          "character": 71
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bounds_get_width(spine_bounds bounds);"
    },
    {
      "name": "spine_bounds_get_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 210,
          "character": 0
        },
        "end": {
          "line": 210,
          "character": 72
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bounds_get_height(spine_bounds bounds);"
    },
    {
      "name": "spine_vector_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 212,
          "character": 0
        },
        "end": {
          "line": 212,
          "character": 67
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_vector_get_x(spine_vector vector);"
    },
    {
      "name": "spine_vector_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 213,
          "character": 0
        },
        "end": {
          "line": 213,
          "character": 67
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_vector_get_y(spine_vector vector);"
    },
    {
      "name": "spine_atlas_load",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 215,
          "character": 0
        },
        "end": {
          "line": 215,
          "character": 73
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_atlas spine_atlas_load(const utf8 *atlasData);"
    },
    {
      "name": "spine_atlas_load_callback",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 217,
          "character": 0
        },
        "end": {
          "line": 217,
          "character": 182
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_atlas spine_atlas_load_callback(const utf8 *atlasData, const utf8 *atlasDir, spine_texture_loader_load_func load, spine_texture_loader_unload_func unload);"
    },
    {
      "name": "spine_atlas_get_num_image_paths",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 218,
          "character": 0
        },
        "end": {
          "line": 218,
          "character": 80
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_atlas_get_num_image_paths(spine_atlas atlas);"
    },
    {
      "name": "spine_atlas_get_image_path",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 219,
          "character": 0
        },
        "end": {
          "line": 219,
          "character": 88
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT utf8 *spine_atlas_get_image_path(spine_atlas atlas, int32_t index);"
    },
    {
      "name": "spine_atlas_is_pma",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 220,
          "character": 0
        },
        "end": {
          "line": 220,
          "character": 70
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_atlas_is_pma(spine_atlas atlas);"
    },
    {
      "name": "spine_atlas_get_error",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 221,
          "character": 0
        },
        "end": {
          "line": 221,
          "character": 68
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT utf8 *spine_atlas_get_error(spine_atlas atlas);"
    },
    {
      "name": "spine_atlas_dispose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 222,
          "character": 0
        },
        "end": {
          "line": 222,
          "character": 65
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_atlas_dispose(spine_atlas atlas);"
    },
    {
      "name": "spine_skeleton_data_load_json",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 225,
          "character": 0
        },
        "end": {
          "line": 225,
          "character": 123
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_skeleton_data_result spine_skeleton_data_load_json(spine_atlas atlas, const utf8 *skeletonData);"
    },
    {
      "name": "spine_skeleton_data_load_binary",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 227,
          "character": 0
        },
        "end": {
          "line": 227,
          "character": 144
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_skeleton_data_result spine_skeleton_data_load_binary(spine_atlas atlas, const uint8_t *skeletonData, int32_t length);"
    },
    {
      "name": "spine_skeleton_data_result_get_error",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 228,
          "character": 0
        },
        "end": {
          "line": 228,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT utf8 *spine_skeleton_data_result_get_error(spine_skeleton_data_result result);"
    },
    {
      "name": "spine_skeleton_data_result_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 229,
          "character": 0
        },
        "end": {
          "line": 229,
          "character": 112
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_skeleton_data spine_skeleton_data_result_get_data(spine_skeleton_data_result result);"
    },
    {
      "name": "spine_skeleton_data_result_dispose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 230,
          "character": 0
        },
        "end": {
          "line": 230,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_data_result_dispose(spine_skeleton_data_result result);"
    },
    {
      "name": "spine_skeleton_data_find_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 231,
          "character": 0
        },
        "end": {
          "line": 231,
          "character": 111
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone_data spine_skeleton_data_find_bone(spine_skeleton_data data, const utf8 *name);"
    },
    {
      "name": "spine_skeleton_data_find_slot",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 232,
          "character": 0
        },
        "end": {
          "line": 232,
          "character": 111
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_slot_data spine_skeleton_data_find_slot(spine_skeleton_data data, const utf8 *name);"
    },
    {
      "name": "spine_skeleton_data_find_skin",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 233,
          "character": 0
        },
        "end": {
          "line": 233,
          "character": 106
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_skin spine_skeleton_data_find_skin(spine_skeleton_data data, const utf8 *name);"
    },
    {
      "name": "spine_skeleton_data_find_event",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 234,
          "character": 0
        },
        "end": {
          "line": 234,
          "character": 113
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_event_data spine_skeleton_data_find_event(spine_skeleton_data data, const utf8 *name);"
    },
    {
      "name": "spine_skeleton_data_find_animation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 235,
          "character": 0
        },
        "end": {
          "line": 235,
          "character": 116
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_animation spine_skeleton_data_find_animation(spine_skeleton_data data, const utf8 *name);"
    },
    {
      "name": "spine_skeleton_data_find_ik_constraint",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 236,
          "character": 0
        },
        "end": {
          "line": 236,
          "character": 129
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_ik_constraint_data spine_skeleton_data_find_ik_constraint(spine_skeleton_data data, const utf8 *name);"
    },
    {
      "name": "spine_skeleton_data_find_transform_constraint",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 237,
          "character": 0
        },
        "end": {
          "line": 237,
          "character": 143
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_transform_constraint_data spine_skeleton_data_find_transform_constraint(spine_skeleton_data data, const utf8 *name);"
    },
    {
      "name": "spine_skeleton_data_find_path_constraint",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 238,
          "character": 0
        },
        "end": {
          "line": 238,
          "character": 133
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_path_constraint_data spine_skeleton_data_find_path_constraint(spine_skeleton_data data, const utf8 *name);"
    },
    {
      "name": "spine_skeleton_data_find_physics_constraint",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 239,
          "character": 0
        },
        "end": {
          "line": 239,
          "character": 139
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_physics_constraint_data spine_skeleton_data_find_physics_constraint(spine_skeleton_data data, const utf8 *name);"
    },
    {
      "name": "spine_skeleton_data_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 241,
          "character": 0
        },
        "end": {
          "line": 241,
          "character": 88
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_skeleton_data_get_name(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 243,
          "character": 0
        },
        "end": {
          "line": 243,
          "character": 89
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_data_get_num_bones(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 244,
          "character": 0
        },
        "end": {
          "line": 244,
          "character": 94
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone_data *spine_skeleton_data_get_bones(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_num_slots",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 245,
          "character": 0
        },
        "end": {
          "line": 245,
          "character": 89
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_data_get_num_slots(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_slots",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 246,
          "character": 0
        },
        "end": {
          "line": 246,
          "character": 94
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_slot_data *spine_skeleton_data_get_slots(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_num_skins",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 247,
          "character": 0
        },
        "end": {
          "line": 247,
          "character": 89
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_data_get_num_skins(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_skins",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 248,
          "character": 0
        },
        "end": {
          "line": 248,
          "character": 89
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_skin *spine_skeleton_data_get_skins(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_default_skin",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 250,
          "character": 0
        },
        "end": {
          "line": 250,
          "character": 95
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_skin spine_skeleton_data_get_default_skin(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_set_default_skin",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 251,
          "character": 0
        },
        "end": {
          "line": 251,
          "character": 106
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_data_set_default_skin(spine_skeleton_data data, spine_skin skin);"
    },
    {
      "name": "spine_skeleton_data_get_num_events",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 252,
          "character": 0
        },
        "end": {
          "line": 252,
          "character": 90
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_data_get_num_events(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_events",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 253,
          "character": 0
        },
        "end": {
          "line": 253,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_event_data *spine_skeleton_data_get_events(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_num_animations",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 254,
          "character": 0
        },
        "end": {
          "line": 254,
          "character": 94
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_data_get_num_animations(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_animations",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 255,
          "character": 0
        },
        "end": {
          "line": 255,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_animation *spine_skeleton_data_get_animations(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_num_ik_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 256,
          "character": 0
        },
        "end": {
          "line": 256,
          "character": 98
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_data_get_num_ik_constraints(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_ik_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 257,
          "character": 0
        },
        "end": {
          "line": 257,
          "character": 112
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_ik_constraint_data *spine_skeleton_data_get_ik_constraints(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_num_transform_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 258,
          "character": 0
        },
        "end": {
          "line": 258,
          "character": 105
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_data_get_num_transform_constraints(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_transform_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 259,
          "character": 0
        },
        "end": {
          "line": 259,
          "character": 126
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_transform_constraint_data *spine_skeleton_data_get_transform_constraints(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_num_path_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 260,
          "character": 0
        },
        "end": {
          "line": 260,
          "character": 100
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_data_get_num_path_constraints(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_path_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 261,
          "character": 0
        },
        "end": {
          "line": 261,
          "character": 116
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_path_constraint_data *spine_skeleton_data_get_path_constraints(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_num_physics_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 262,
          "character": 0
        },
        "end": {
          "line": 262,
          "character": 103
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_data_get_num_physics_constraints(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_physics_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 263,
          "character": 0
        },
        "end": {
          "line": 263,
          "character": 122
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_physics_constraint_data *spine_skeleton_data_get_physics_constraints(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 264,
          "character": 0
        },
        "end": {
          "line": 264,
          "character": 79
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_skeleton_data_get_x(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_set_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 265,
          "character": 0
        },
        "end": {
          "line": 265,
          "character": 87
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_data_set_x(spine_skeleton_data data, float x);"
    },
    {
      "name": "spine_skeleton_data_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 266,
          "character": 0
        },
        "end": {
          "line": 266,
          "character": 79
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_skeleton_data_get_y(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_set_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 267,
          "character": 0
        },
        "end": {
          "line": 267,
          "character": 87
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_data_set_y(spine_skeleton_data data, float y);"
    },
    {
      "name": "spine_skeleton_data_get_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 268,
          "character": 0
        },
        "end": {
          "line": 268,
          "character": 83
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_skeleton_data_get_width(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_set_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 269,
          "character": 0
        },
        "end": {
          "line": 269,
          "character": 95
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_data_set_width(spine_skeleton_data data, float width);"
    },
    {
      "name": "spine_skeleton_data_get_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 270,
          "character": 0
        },
        "end": {
          "line": 270,
          "character": 84
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_skeleton_data_get_height(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_set_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 271,
          "character": 0
        },
        "end": {
          "line": 271,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_data_set_height(spine_skeleton_data data, float height);"
    },
    {
      "name": "spine_skeleton_data_get_version",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 272,
          "character": 0
        },
        "end": {
          "line": 272,
          "character": 91
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_skeleton_data_get_version(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_hash",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 275,
          "character": 0
        },
        "end": {
          "line": 275,
          "character": 88
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_skeleton_data_get_hash(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_images_path",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 277,
          "character": 0
        },
        "end": {
          "line": 277,
          "character": 95
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_skeleton_data_get_images_path(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_audio_path",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 279,
          "character": 0
        },
        "end": {
          "line": 279,
          "character": 94
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_skeleton_data_get_audio_path(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_fps",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 281,
          "character": 0
        },
        "end": {
          "line": 281,
          "character": 81
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_skeleton_data_get_fps(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_get_reference_scale",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 283,
          "character": 0
        },
        "end": {
          "line": 283,
          "character": 93
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_skeleton_data_get_reference_scale(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_data_dispose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 284,
          "character": 0
        },
        "end": {
          "line": 284,
          "character": 80
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_data_dispose(spine_skeleton_data data);"
    },
    {
      "name": "spine_skeleton_drawable_create",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 287,
          "character": 0
        },
        "end": {
          "line": 287,
          "character": 110
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_skeleton_drawable spine_skeleton_drawable_create(spine_skeleton_data skeletonData);"
    },
    {
      "name": "spine_skeleton_drawable_render",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 289,
          "character": 0
        },
        "end": {
          "line": 289,
          "character": 107
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_render_command spine_skeleton_drawable_render(spine_skeleton_drawable drawable);"
    },
    {
      "name": "spine_skeleton_drawable_dispose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 290,
          "character": 0
        },
        "end": {
          "line": 290,
          "character": 92
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_drawable_dispose(spine_skeleton_drawable drawable);"
    },
    {
      "name": "spine_skeleton_drawable_get_skeleton",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 291,
          "character": 0
        },
        "end": {
          "line": 291,
          "character": 107
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_skeleton spine_skeleton_drawable_get_skeleton(spine_skeleton_drawable drawable);"
    },
    {
      "name": "spine_skeleton_drawable_get_animation_state",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 292,
          "character": 0
        },
        "end": {
          "line": 292,
          "character": 121
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_animation_state spine_skeleton_drawable_get_animation_state(spine_skeleton_drawable drawable);"
    },
    {
      "name": "spine_skeleton_drawable_get_animation_state_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 293,
          "character": 0
        },
        "end": {
          "line": 293,
          "character": 131
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_animation_state_data spine_skeleton_drawable_get_animation_state_data(spine_skeleton_drawable drawable);"
    },
    {
      "name": "spine_skeleton_drawable_get_animation_state_events",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 294,
          "character": 0
        },
        "end": {
          "line": 294,
          "character": 135
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_animation_state_events spine_skeleton_drawable_get_animation_state_events(spine_skeleton_drawable drawable);"
    },
    {
      "name": "spine_render_command_get_positions",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 297,
          "character": 0
        },
        "end": {
          "line": 297,
          "character": 93
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float *spine_render_command_get_positions(spine_render_command command);"
    },
    {
      "name": "spine_render_command_get_uvs",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 299,
          "character": 0
        },
        "end": {
          "line": 299,
          "character": 87
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float *spine_render_command_get_uvs(spine_render_command command);"
    },
    {
      "name": "spine_render_command_get_colors",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 301,
          "character": 0
        },
        "end": {
          "line": 301,
          "character": 92
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t *spine_render_command_get_colors(spine_render_command command);"
    },
    {
      "name": "spine_render_command_get_dark_colors",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 303,
          "character": 0
        },
        "end": {
          "line": 303,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t *spine_render_command_get_dark_colors(spine_render_command command);"
    },
    {
      "name": "spine_render_command_get_num_vertices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 304,
          "character": 0
        },
        "end": {
          "line": 304,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_render_command_get_num_vertices(spine_render_command command);"
    },
    {
      "name": "spine_render_command_get_indices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 305,
          "character": 0
        },
        "end": {
          "line": 305,
          "character": 94
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT uint16_t *spine_render_command_get_indices(spine_render_command command);"
    },
    {
      "name": "spine_render_command_get_num_indices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 306,
          "character": 0
        },
        "end": {
          "line": 306,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_render_command_get_num_indices(spine_render_command command);"
    },
    {
      "name": "spine_render_command_get_atlas_page",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 307,
          "character": 0
        },
        "end": {
          "line": 307,
          "character": 95
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_render_command_get_atlas_page(spine_render_command command);"
    },
    {
      "name": "spine_render_command_get_blend_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 308,
          "character": 0
        },
        "end": {
          "line": 308,
          "character": 104
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_blend_mode spine_render_command_get_blend_mode(spine_render_command command);"
    },
    {
      "name": "spine_render_command_get_next",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 309,
          "character": 0
        },
        "end": {
          "line": 309,
          "character": 102
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_render_command spine_render_command_get_next(spine_render_command command);"
    },
    {
      "name": "spine_animation_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 311,
          "character": 0
        },
        "end": {
          "line": 311,
          "character": 85
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_animation_get_name(spine_animation animation);"
    },
    {
      "name": "spine_animation_get_duration",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 314,
          "character": 0
        },
        "end": {
          "line": 314,
          "character": 83
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_animation_get_duration(spine_animation animation);"
    },
    {
      "name": "spine_animation_state_data_get_skeleton_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 317,
          "character": 0
        },
        "end": {
          "line": 317,
          "character": 124
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_skeleton_data spine_animation_state_data_get_skeleton_data(spine_animation_state_data stateData);"
    },
    {
      "name": "spine_animation_state_data_get_default_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 318,
          "character": 0
        },
        "end": {
          "line": 318,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_animation_state_data_get_default_mix(spine_animation_state_data stateData);"
    },
    {
      "name": "spine_animation_state_data_set_default_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 319,
          "character": 0
        },
        "end": {
          "line": 319,
          "character": 125
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_animation_state_data_set_default_mix(spine_animation_state_data stateData, float defaultMix);"
    },
    {
      "name": "spine_animation_state_data_set_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 320,
          "character": 0
        },
        "end": {
          "line": 320,
          "character": 157
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_animation_state_data_set_mix(spine_animation_state_data stateData, spine_animation from, spine_animation to, float duration);"
    },
    {
      "name": "spine_animation_state_data_get_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 321,
          "character": 0
        },
        "end": {
          "line": 321,
          "character": 142
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_animation_state_data_get_mix(spine_animation_state_data stateData, spine_animation from, spine_animation to);"
    },
    {
      "name": "spine_animation_state_data_set_mix_by_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 322,
          "character": 0
        },
        "end": {
          "line": 322,
          "character": 165
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_animation_state_data_set_mix_by_name(spine_animation_state_data stateData, const utf8 *fromName, const utf8 *toName, float duration);"
    },
    {
      "name": "spine_animation_state_data_get_mix_by_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 323,
          "character": 0
        },
        "end": {
          "line": 323,
          "character": 150
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_animation_state_data_get_mix_by_name(spine_animation_state_data stateData, const utf8 *fromName, const utf8 *toName);"
    },
    {
      "name": "spine_animation_state_data_clear",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 324,
          "character": 0
        },
        "end": {
          "line": 324,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_animation_state_data_clear(spine_animation_state_data stateData);"
    },
    {
      "name": "spine_animation_state_update",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 326,
          "character": 0
        },
        "end": {
          "line": 326,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_animation_state_update(spine_animation_state state, float delta);"
    },
    {
      "name": "spine_animation_state_apply",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 327,
          "character": 0
        },
        "end": {
          "line": 327,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_animation_state_apply(spine_animation_state state, spine_skeleton skeleton);"
    },
    {
      "name": "spine_animation_state_clear_tracks",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 328,
          "character": 0
        },
        "end": {
          "line": 328,
          "character": 90
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_animation_state_clear_tracks(spine_animation_state state);"
    },
    {
      "name": "spine_animation_state_clear_track",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 329,
          "character": 0
        },
        "end": {
          "line": 329,
          "character": 109
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_animation_state_clear_track(spine_animation_state state, int32_t trackIndex);"
    },
    {
      "name": "spine_animation_state_get_num_tracks",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 330,
          "character": 0
        },
        "end": {
          "line": 330,
          "character": 95
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_animation_state_get_num_tracks(spine_animation_state state);"
    },
    {
      "name": "spine_animation_state_set_animation_by_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 331,
          "character": 0
        },
        "end": {
          "line": 331,
          "character": 176
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_track_entry spine_animation_state_set_animation_by_name(spine_animation_state state, int32_t trackIndex, const utf8 *animationName, spine_bool loop);"
    },
    {
      "name": "spine_animation_state_set_animation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 332,
          "character": 0
        },
        "end": {
          "line": 332,
          "character": 168
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_track_entry spine_animation_state_set_animation(spine_animation_state state, int32_t trackIndex, spine_animation animation, spine_bool loop);"
    },
    {
      "name": "spine_animation_state_add_animation_by_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 333,
          "character": 0
        },
        "end": {
          "line": 333,
          "character": 189
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_track_entry spine_animation_state_add_animation_by_name(spine_animation_state state, int32_t trackIndex, const utf8 *animationName, spine_bool loop, float delay);"
    },
    {
      "name": "spine_animation_state_add_animation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 334,
          "character": 0
        },
        "end": {
          "line": 334,
          "character": 181
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_track_entry spine_animation_state_add_animation(spine_animation_state state, int32_t trackIndex, spine_animation animation, spine_bool loop, float delay);"
    },
    {
      "name": "spine_animation_state_set_empty_animation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 335,
          "character": 0
        },
        "end": {
          "line": 335,
          "character": 149
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_track_entry spine_animation_state_set_empty_animation(spine_animation_state state, int32_t trackIndex, float mixDuration);"
    },
    {
      "name": "spine_animation_state_add_empty_animation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 336,
          "character": 0
        },
        "end": {
          "line": 336,
          "character": 162
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_track_entry spine_animation_state_add_empty_animation(spine_animation_state state, int32_t trackIndex, float mixDuration, float delay);"
    },
    {
      "name": "spine_animation_state_set_empty_animations",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 337,
          "character": 0
        },
        "end": {
          "line": 337,
          "character": 117
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_animation_state_set_empty_animations(spine_animation_state state, float mixDuration);"
    },
    {
      "name": "spine_animation_state_get_current",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 339,
          "character": 0
        },
        "end": {
          "line": 339,
          "character": 122
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_track_entry spine_animation_state_get_current(spine_animation_state state, int32_t trackIndex);"
    },
    {
      "name": "spine_animation_state_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 340,
          "character": 0
        },
        "end": {
          "line": 340,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_animation_state_data spine_animation_state_get_data(spine_animation_state state);"
    },
    {
      "name": "spine_animation_state_get_time_scale",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 341,
          "character": 0
        },
        "end": {
          "line": 341,
          "character": 93
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_animation_state_get_time_scale(spine_animation_state state);"
    },
    {
      "name": "spine_animation_state_set_time_scale",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 342,
          "character": 0
        },
        "end": {
          "line": 342,
          "character": 109
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_animation_state_set_time_scale(spine_animation_state state, float timeScale);"
    },
    {
      "name": "spine_animation_state_dispose_track_entry",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 350,
          "character": 0
        },
        "end": {
          "line": 350,
          "character": 122
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_animation_state_dispose_track_entry(spine_animation_state state, spine_track_entry entry);"
    },
    {
      "name": "spine_animation_state_events_get_num_events",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 352,
          "character": 0
        },
        "end": {
          "line": 352,
          "character": 110
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_animation_state_events_get_num_events(spine_animation_state_events events);"
    },
    {
      "name": "spine_animation_state_events_get_event_type",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 353,
          "character": 0
        },
        "end": {
          "line": 353,
          "character": 134
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_event_type spine_animation_state_events_get_event_type(spine_animation_state_events events, int32_t index);"
    },
    {
      "name": "spine_animation_state_events_get_track_entry",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 354,
          "character": 0
        },
        "end": {
          "line": 354,
          "character": 136
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_track_entry spine_animation_state_events_get_track_entry(spine_animation_state_events events, int32_t index);"
    },
    {
      "name": "spine_animation_state_events_get_event",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 356,
          "character": 0
        },
        "end": {
          "line": 356,
          "character": 124
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_event spine_animation_state_events_get_event(spine_animation_state_events events, int32_t index);"
    },
    {
      "name": "spine_animation_state_events_reset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 357,
          "character": 0
        },
        "end": {
          "line": 357,
          "character": 98
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_animation_state_events_reset(spine_animation_state_events events);"
    },
    {
      "name": "spine_track_entry_get_track_index",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 359,
          "character": 0
        },
        "end": {
          "line": 359,
          "character": 88
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_track_entry_get_track_index(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_get_animation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 360,
          "character": 0
        },
        "end": {
          "line": 360,
          "character": 94
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_animation spine_track_entry_get_animation(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_get_previous",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 361,
          "character": 0
        },
        "end": {
          "line": 361,
          "character": 95
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_track_entry spine_track_entry_get_previous(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_get_loop",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 362,
          "character": 0
        },
        "end": {
          "line": 362,
          "character": 84
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_track_entry_get_loop(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_loop",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 363,
          "character": 0
        },
        "end": {
          "line": 363,
          "character": 95
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_loop(spine_track_entry entry, spine_bool loop);"
    },
    {
      "name": "spine_track_entry_get_hold_previous",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 364,
          "character": 0
        },
        "end": {
          "line": 364,
          "character": 93
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_track_entry_get_hold_previous(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_hold_previous",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 365,
          "character": 0
        },
        "end": {
          "line": 365,
          "character": 112
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_hold_previous(spine_track_entry entry, spine_bool holdPrevious);"
    },
    {
      "name": "spine_track_entry_get_reverse",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 366,
          "character": 0
        },
        "end": {
          "line": 366,
          "character": 87
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_track_entry_get_reverse(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_reverse",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 367,
          "character": 0
        },
        "end": {
          "line": 367,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_reverse(spine_track_entry entry, spine_bool reverse);"
    },
    {
      "name": "spine_track_entry_get_shortest_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 368,
          "character": 0
        },
        "end": {
          "line": 368,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_track_entry_get_shortest_rotation(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_shortest_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 369,
          "character": 0
        },
        "end": {
          "line": 369,
          "character": 120
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_shortest_rotation(spine_track_entry entry, spine_bool shortestRotation);"
    },
    {
      "name": "spine_track_entry_get_delay",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 370,
          "character": 0
        },
        "end": {
          "line": 370,
          "character": 80
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_track_entry_get_delay(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_delay",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 371,
          "character": 0
        },
        "end": {
          "line": 371,
          "character": 92
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_delay(spine_track_entry entry, float delay);"
    },
    {
      "name": "spine_track_entry_get_track_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 372,
          "character": 0
        },
        "end": {
          "line": 372,
          "character": 85
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_track_entry_get_track_time(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_track_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 373,
          "character": 0
        },
        "end": {
          "line": 373,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_track_time(spine_track_entry entry, float trackTime);"
    },
    {
      "name": "spine_track_entry_get_track_end",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 374,
          "character": 0
        },
        "end": {
          "line": 374,
          "character": 84
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_track_entry_get_track_end(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_track_end",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 375,
          "character": 0
        },
        "end": {
          "line": 375,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_track_end(spine_track_entry entry, float trackEnd);"
    },
    {
      "name": "spine_track_entry_get_animation_start",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 376,
          "character": 0
        },
        "end": {
          "line": 376,
          "character": 90
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_track_entry_get_animation_start(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_animation_start",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 377,
          "character": 0
        },
        "end": {
          "line": 377,
          "character": 111
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_animation_start(spine_track_entry entry, float animationStart);"
    },
    {
      "name": "spine_track_entry_get_animation_end",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 378,
          "character": 0
        },
        "end": {
          "line": 378,
          "character": 88
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_track_entry_get_animation_end(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_animation_end",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 379,
          "character": 0
        },
        "end": {
          "line": 379,
          "character": 107
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_animation_end(spine_track_entry entry, float animationEnd);"
    },
    {
      "name": "spine_track_entry_get_animation_last",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 380,
          "character": 0
        },
        "end": {
          "line": 380,
          "character": 89
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_track_entry_get_animation_last(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_animation_last",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 381,
          "character": 0
        },
        "end": {
          "line": 381,
          "character": 109
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_animation_last(spine_track_entry entry, float animationLast);"
    },
    {
      "name": "spine_track_entry_get_animation_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 382,
          "character": 0
        },
        "end": {
          "line": 382,
          "character": 89
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_track_entry_get_animation_time(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_get_time_scale",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 383,
          "character": 0
        },
        "end": {
          "line": 383,
          "character": 85
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_track_entry_get_time_scale(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_time_scale",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 384,
          "character": 0
        },
        "end": {
          "line": 384,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_time_scale(spine_track_entry entry, float timeScale);"
    },
    {
      "name": "spine_track_entry_get_alpha",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 385,
          "character": 0
        },
        "end": {
          "line": 385,
          "character": 80
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_track_entry_get_alpha(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_alpha",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 386,
          "character": 0
        },
        "end": {
          "line": 386,
          "character": 92
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_alpha(spine_track_entry entry, float alpha);"
    },
    {
      "name": "spine_track_entry_get_event_threshold",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 387,
          "character": 0
        },
        "end": {
          "line": 387,
          "character": 90
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_track_entry_get_event_threshold(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_event_threshold",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 388,
          "character": 0
        },
        "end": {
          "line": 388,
          "character": 111
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_event_threshold(spine_track_entry entry, float eventThreshold);"
    },
    {
      "name": "spine_track_entry_get_alpha_attachment_threshold",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 389,
          "character": 0
        },
        "end": {
          "line": 389,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_track_entry_get_alpha_attachment_threshold(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_alpha_attachment_threshold",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 390,
          "character": 0
        },
        "end": {
          "line": 390,
          "character": 127
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_alpha_attachment_threshold(spine_track_entry entry, float attachmentThreshold);"
    },
    {
      "name": "spine_track_entry_get_mix_attachment_threshold",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 391,
          "character": 0
        },
        "end": {
          "line": 391,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_track_entry_get_mix_attachment_threshold(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_mix_attachment_threshold",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 392,
          "character": 0
        },
        "end": {
          "line": 392,
          "character": 125
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_mix_attachment_threshold(spine_track_entry entry, float attachmentThreshold);"
    },
    {
      "name": "spine_track_entry_get_mix_draw_order_threshold",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 393,
          "character": 0
        },
        "end": {
          "line": 393,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_track_entry_get_mix_draw_order_threshold(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_mix_draw_order_threshold",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 394,
          "character": 0
        },
        "end": {
          "line": 394,
          "character": 124
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_mix_draw_order_threshold(spine_track_entry entry, float drawOrderThreshold);"
    },
    {
      "name": "spine_track_entry_get_next",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 396,
          "character": 0
        },
        "end": {
          "line": 396,
          "character": 91
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_track_entry spine_track_entry_get_next(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_is_complete",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 397,
          "character": 0
        },
        "end": {
          "line": 397,
          "character": 87
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_track_entry_is_complete(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_get_mix_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 398,
          "character": 0
        },
        "end": {
          "line": 398,
          "character": 83
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_track_entry_get_mix_time(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_mix_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 399,
          "character": 0
        },
        "end": {
          "line": 399,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_mix_time(spine_track_entry entry, float mixTime);"
    },
    {
      "name": "spine_track_entry_get_mix_duration",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 400,
          "character": 0
        },
        "end": {
          "line": 400,
          "character": 87
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_track_entry_get_mix_duration(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_mix_duration",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 401,
          "character": 0
        },
        "end": {
          "line": 401,
          "character": 105
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_mix_duration(spine_track_entry entry, float mixDuration);"
    },
    {
      "name": "spine_track_entry_get_mix_blend",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 402,
          "character": 0
        },
        "end": {
          "line": 402,
          "character": 94
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_mix_blend spine_track_entry_get_mix_blend(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_set_mix_blend",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 403,
          "character": 0
        },
        "end": {
          "line": 403,
          "character": 109
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_set_mix_blend(spine_track_entry entry, spine_mix_blend mixBlend);"
    },
    {
      "name": "spine_track_entry_get_mixing_from",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 405,
          "character": 0
        },
        "end": {
          "line": 405,
          "character": 98
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_track_entry spine_track_entry_get_mixing_from(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_get_mixing_to",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 407,
          "character": 0
        },
        "end": {
          "line": 407,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_track_entry spine_track_entry_get_mixing_to(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_reset_rotation_directions",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 408,
          "character": 0
        },
        "end": {
          "line": 408,
          "character": 95
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_track_entry_reset_rotation_directions(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_get_track_complete",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 409,
          "character": 0
        },
        "end": {
          "line": 409,
          "character": 89
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_track_entry_get_track_complete(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_was_applied",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 410,
          "character": 0
        },
        "end": {
          "line": 410,
          "character": 87
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_track_entry_was_applied(spine_track_entry entry);"
    },
    {
      "name": "spine_track_entry_is_next_ready",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 411,
          "character": 0
        },
        "end": {
          "line": 411,
          "character": 89
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_track_entry_is_next_ready(spine_track_entry entry);"
    },
    {
      "name": "spine_skeleton_update_cache",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 415,
          "character": 0
        },
        "end": {
          "line": 415,
          "character": 79
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_update_cache(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_update_world_transform",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 417,
          "character": 0
        },
        "end": {
          "line": 417,
          "character": 112
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_update_world_transform(spine_skeleton skeleton, spine_physics physics);"
    },
    {
      "name": "spine_skeleton_update_world_transform_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 418,
          "character": 0
        },
        "end": {
          "line": 418,
          "character": 136
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_update_world_transform_bone(spine_skeleton skeleton, spine_physics physics, spine_bone parent);"
    },
    {
      "name": "spine_skeleton_set_to_setup_pose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 419,
          "character": 0
        },
        "end": {
          "line": 419,
          "character": 84
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_set_to_setup_pose(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_set_bones_to_setup_pose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 420,
          "character": 0
        },
        "end": {
          "line": 420,
          "character": 90
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_set_bones_to_setup_pose(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_set_slots_to_setup_pose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 421,
          "character": 0
        },
        "end": {
          "line": 421,
          "character": 90
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_set_slots_to_setup_pose(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_find_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 422,
          "character": 0
        },
        "end": {
          "line": 422,
          "character": 104
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone spine_skeleton_find_bone(spine_skeleton skeleton, const utf8 *boneName);"
    },
    {
      "name": "spine_skeleton_find_slot",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 423,
          "character": 0
        },
        "end": {
          "line": 423,
          "character": 104
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_slot spine_skeleton_find_slot(spine_skeleton skeleton, const utf8 *slotName);"
    },
    {
      "name": "spine_skeleton_set_skin_by_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 424,
          "character": 0
        },
        "end": {
          "line": 424,
          "character": 105
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_set_skin_by_name(spine_skeleton skeleton, const utf8 *skinName);"
    },
    {
      "name": "spine_skeleton_set_skin",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 425,
          "character": 0
        },
        "end": {
          "line": 425,
          "character": 92
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_set_skin(spine_skeleton skeleton, spine_skin skin);"
    },
    {
      "name": "spine_skeleton_get_attachment_by_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 427,
          "character": 0
        },
        "end": {
          "line": 427,
          "character": 151
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_attachment spine_skeleton_get_attachment_by_name(spine_skeleton skeleton, const utf8 *slotName, const utf8 *attachmentName);"
    },
    {
      "name": "spine_skeleton_get_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 429,
          "character": 0
        },
        "end": {
          "line": 429,
          "character": 140
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_attachment spine_skeleton_get_attachment(spine_skeleton skeleton, int32_t slotIndex, const utf8 *attachmentName);"
    },
    {
      "name": "spine_skeleton_set_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 430,
          "character": 0
        },
        "end": {
          "line": 430,
          "character": 131
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_set_attachment(spine_skeleton skeleton, const utf8 *slotName, const utf8 *attachmentName);"
    },
    {
      "name": "spine_skeleton_find_ik_constraint",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 431,
          "character": 0
        },
        "end": {
          "line": 431,
          "character": 128
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_ik_constraint spine_skeleton_find_ik_constraint(spine_skeleton skeleton, const utf8 *constraintName);"
    },
    {
      "name": "spine_skeleton_find_transform_constraint",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 432,
          "character": 0
        },
        "end": {
          "line": 432,
          "character": 142
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_transform_constraint spine_skeleton_find_transform_constraint(spine_skeleton skeleton, const utf8 *constraintName);"
    },
    {
      "name": "spine_skeleton_find_path_constraint",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 433,
          "character": 0
        },
        "end": {
          "line": 433,
          "character": 132
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_path_constraint spine_skeleton_find_path_constraint(spine_skeleton skeleton, const utf8 *constraintName);"
    },
    {
      "name": "spine_skeleton_find_physics_constraint",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 434,
          "character": 0
        },
        "end": {
          "line": 434,
          "character": 138
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_physics_constraint spine_skeleton_find_physics_constraint(spine_skeleton skeleton, const utf8 *constraintName);"
    },
    {
      "name": "spine_skeleton_get_bounds",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 435,
          "character": 0
        },
        "end": {
          "line": 435,
          "character": 85
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bounds spine_skeleton_get_bounds(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_root_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 437,
          "character": 0
        },
        "end": {
          "line": 437,
          "character": 86
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone spine_skeleton_get_root_bone(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 439,
          "character": 0
        },
        "end": {
          "line": 439,
          "character": 90
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_skeleton_data spine_skeleton_get_data(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 440,
          "character": 0
        },
        "end": {
          "line": 440,
          "character": 83
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_get_num_bones(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 441,
          "character": 0
        },
        "end": {
          "line": 441,
          "character": 83
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone *spine_skeleton_get_bones(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_num_slots",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 443,
          "character": 0
        },
        "end": {
          "line": 443,
          "character": 83
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_get_num_slots(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_slots",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 444,
          "character": 0
        },
        "end": {
          "line": 444,
          "character": 83
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_slot *spine_skeleton_get_slots(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_num_draw_order",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 445,
          "character": 0
        },
        "end": {
          "line": 445,
          "character": 88
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_get_num_draw_order(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_draw_order",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 446,
          "character": 0
        },
        "end": {
          "line": 446,
          "character": 88
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_slot *spine_skeleton_get_draw_order(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_num_ik_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 447,
          "character": 0
        },
        "end": {
          "line": 447,
          "character": 92
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_get_num_ik_constraints(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_ik_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 448,
          "character": 0
        },
        "end": {
          "line": 448,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_ik_constraint *spine_skeleton_get_ik_constraints(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_num_transform_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 449,
          "character": 0
        },
        "end": {
          "line": 449,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_get_num_transform_constraints(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_transform_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 450,
          "character": 0
        },
        "end": {
          "line": 450,
          "character": 115
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_transform_constraint *spine_skeleton_get_transform_constraints(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_num_path_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 451,
          "character": 0
        },
        "end": {
          "line": 451,
          "character": 94
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_get_num_path_constraints(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_path_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 452,
          "character": 0
        },
        "end": {
          "line": 452,
          "character": 105
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_path_constraint *spine_skeleton_get_path_constraints(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_num_physics_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 453,
          "character": 0
        },
        "end": {
          "line": 453,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_get_num_physics_constraints(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_physics_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 454,
          "character": 0
        },
        "end": {
          "line": 454,
          "character": 111
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_physics_constraint *spine_skeleton_get_physics_constraints(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_skin",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 456,
          "character": 0
        },
        "end": {
          "line": 456,
          "character": 81
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_skin spine_skeleton_get_skin(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 457,
          "character": 0
        },
        "end": {
          "line": 457,
          "character": 83
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_color spine_skeleton_get_color(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 458,
          "character": 0
        },
        "end": {
          "line": 458,
          "character": 112
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_set_color(spine_skeleton skeleton, float r, float g, float b, float a);"
    },
    {
      "name": "spine_skeleton_set_position",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 459,
          "character": 0
        },
        "end": {
          "line": 459,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_set_position(spine_skeleton skeleton, float x, float y);"
    },
    {
      "name": "spine_skeleton_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 460,
          "character": 0
        },
        "end": {
          "line": 460,
          "character": 73
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_skeleton_get_x(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_set_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 461,
          "character": 0
        },
        "end": {
          "line": 461,
          "character": 81
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_set_x(spine_skeleton skeleton, float x);"
    },
    {
      "name": "spine_skeleton_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 462,
          "character": 0
        },
        "end": {
          "line": 462,
          "character": 73
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_skeleton_get_y(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_set_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 463,
          "character": 0
        },
        "end": {
          "line": 463,
          "character": 81
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_set_y(spine_skeleton skeleton, float y);"
    },
    {
      "name": "spine_skeleton_set_scale",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 464,
          "character": 0
        },
        "end": {
          "line": 464,
          "character": 104
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_set_scale(spine_skeleton skeleton, float scaleX, float scaleY);"
    },
    {
      "name": "spine_skeleton_get_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 465,
          "character": 0
        },
        "end": {
          "line": 465,
          "character": 79
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_skeleton_get_scale_x(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_set_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 466,
          "character": 0
        },
        "end": {
          "line": 466,
          "character": 92
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_set_scale_x(spine_skeleton skeleton, float scaleX);"
    },
    {
      "name": "spine_skeleton_get_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 467,
          "character": 0
        },
        "end": {
          "line": 467,
          "character": 79
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_skeleton_get_scale_y(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_set_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 468,
          "character": 0
        },
        "end": {
          "line": 468,
          "character": 92
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_set_scale_y(spine_skeleton skeleton, float scaleY);"
    },
    {
      "name": "spine_skeleton_get_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 469,
          "character": 0
        },
        "end": {
          "line": 469,
          "character": 76
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_skeleton_get_time(spine_skeleton skeleton);"
    },
    {
      "name": "spine_skeleton_set_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 470,
          "character": 0
        },
        "end": {
          "line": 470,
          "character": 87
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_set_time(spine_skeleton skeleton, float time);"
    },
    {
      "name": "spine_skeleton_update",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 471,
          "character": 0
        },
        "end": {
          "line": 471,
          "character": 86
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_update(spine_skeleton skeleton, float delta);"
    },
    {
      "name": "spine_event_data_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 473,
          "character": 0
        },
        "end": {
          "line": 473,
          "character": 83
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_event_data_get_name(spine_event_data event);"
    },
    {
      "name": "spine_event_data_get_int_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 474,
          "character": 0
        },
        "end": {
          "line": 474,
          "character": 84
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_event_data_get_int_value(spine_event_data event);"
    },
    {
      "name": "spine_event_data_set_int_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 475,
          "character": 0
        },
        "end": {
          "line": 475,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_event_data_set_int_value(spine_event_data event, int32_t value);"
    },
    {
      "name": "spine_event_data_get_float_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 476,
          "character": 0
        },
        "end": {
          "line": 476,
          "character": 84
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_event_data_get_float_value(spine_event_data event);"
    },
    {
      "name": "spine_event_data_set_float_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 477,
          "character": 0
        },
        "end": {
          "line": 477,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_event_data_set_float_value(spine_event_data event, float value);"
    },
    {
      "name": "spine_event_data_get_string_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 478,
          "character": 0
        },
        "end": {
          "line": 478,
          "character": 91
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_event_data_get_string_value(spine_event_data event);"
    },
    {
      "name": "spine_event_data_set_string_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 479,
          "character": 0
        },
        "end": {
          "line": 479,
          "character": 103
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_event_data_set_string_value(spine_event_data event, const utf8 *value);"
    },
    {
      "name": "spine_event_data_get_audio_path",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 480,
          "character": 0
        },
        "end": {
          "line": 480,
          "character": 89
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_event_data_get_audio_path(spine_event_data event);"
    },
    {
      "name": "spine_event_data_get_volume",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 482,
          "character": 0
        },
        "end": {
          "line": 482,
          "character": 79
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_event_data_get_volume(spine_event_data event);"
    },
    {
      "name": "spine_event_data_set_volume",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 483,
          "character": 0
        },
        "end": {
          "line": 483,
          "character": 92
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_event_data_set_volume(spine_event_data event, float volume);"
    },
    {
      "name": "spine_event_data_get_balance",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 484,
          "character": 0
        },
        "end": {
          "line": 484,
          "character": 80
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_event_data_get_balance(spine_event_data event);"
    },
    {
      "name": "spine_event_data_set_balance",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 485,
          "character": 0
        },
        "end": {
          "line": 485,
          "character": 94
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_event_data_set_balance(spine_event_data event, float balance);"
    },
    {
      "name": "spine_event_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 487,
          "character": 0
        },
        "end": {
          "line": 487,
          "character": 78
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_event_data spine_event_get_data(spine_event event);"
    },
    {
      "name": "spine_event_get_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 488,
          "character": 0
        },
        "end": {
          "line": 488,
          "character": 67
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_event_get_time(spine_event event);"
    },
    {
      "name": "spine_event_get_int_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 489,
          "character": 0
        },
        "end": {
          "line": 489,
          "character": 74
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_event_get_int_value(spine_event event);"
    },
    {
      "name": "spine_event_set_int_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 490,
          "character": 0
        },
        "end": {
          "line": 490,
          "character": 86
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_event_set_int_value(spine_event event, int32_t value);"
    },
    {
      "name": "spine_event_get_float_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 491,
          "character": 0
        },
        "end": {
          "line": 491,
          "character": 74
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_event_get_float_value(spine_event event);"
    },
    {
      "name": "spine_event_set_float_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 492,
          "character": 0
        },
        "end": {
          "line": 492,
          "character": 86
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_event_set_float_value(spine_event event, float value);"
    },
    {
      "name": "spine_event_get_string_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 493,
          "character": 0
        },
        "end": {
          "line": 493,
          "character": 81
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_event_get_string_value(spine_event event);"
    },
    {
      "name": "spine_event_set_string_value",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 494,
          "character": 0
        },
        "end": {
          "line": 494,
          "character": 93
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_event_set_string_value(spine_event event, const utf8 *value);"
    },
    {
      "name": "spine_event_get_volume",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 495,
          "character": 0
        },
        "end": {
          "line": 495,
          "character": 69
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_event_get_volume(spine_event event);"
    },
    {
      "name": "spine_event_set_volume",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 496,
          "character": 0
        },
        "end": {
          "line": 496,
          "character": 82
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_event_set_volume(spine_event event, float volume);"
    },
    {
      "name": "spine_event_get_balance",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 497,
          "character": 0
        },
        "end": {
          "line": 497,
          "character": 70
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_event_get_balance(spine_event event);"
    },
    {
      "name": "spine_event_set_balance",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 498,
          "character": 0
        },
        "end": {
          "line": 498,
          "character": 84
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_event_set_balance(spine_event event, float balance);"
    },
    {
      "name": "spine_slot_data_get_index",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 500,
          "character": 0
        },
        "end": {
          "line": 500,
          "character": 77
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_slot_data_get_index(spine_slot_data slot);"
    },
    {
      "name": "spine_slot_data_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 501,
          "character": 0
        },
        "end": {
          "line": 501,
          "character": 80
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_slot_data_get_name(spine_slot_data slot);"
    },
    {
      "name": "spine_slot_data_get_bone_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 502,
          "character": 0
        },
        "end": {
          "line": 502,
          "character": 89
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone_data spine_slot_data_get_bone_data(spine_slot_data slot);"
    },
    {
      "name": "spine_slot_data_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 503,
          "character": 0
        },
        "end": {
          "line": 503,
          "character": 81
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_color spine_slot_data_get_color(spine_slot_data slot);"
    },
    {
      "name": "spine_slot_data_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 504,
          "character": 0
        },
        "end": {
          "line": 504,
          "character": 110
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_slot_data_set_color(spine_slot_data slot, float r, float g, float b, float a);"
    },
    {
      "name": "spine_slot_data_get_dark_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 505,
          "character": 0
        },
        "end": {
          "line": 505,
          "character": 86
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_color spine_slot_data_get_dark_color(spine_slot_data slot);"
    },
    {
      "name": "spine_slot_data_set_dark_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 506,
          "character": 0
        },
        "end": {
          "line": 506,
          "character": 115
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_slot_data_set_dark_color(spine_slot_data slot, float r, float g, float b, float a);"
    },
    {
      "name": "spine_slot_data_get_has_dark_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 507,
          "character": 0
        },
        "end": {
          "line": 507,
          "character": 89
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_slot_data_get_has_dark_color(spine_slot_data slot);"
    },
    {
      "name": "spine_slot_data_set_has_dark_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 508,
          "character": 0
        },
        "end": {
          "line": 508,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_slot_data_set_has_dark_color(spine_slot_data slot, spine_bool hasDarkColor);"
    },
    {
      "name": "spine_slot_data_get_attachment_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 509,
          "character": 0
        },
        "end": {
          "line": 509,
          "character": 91
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_slot_data_get_attachment_name(spine_slot_data slot);"
    },
    {
      "name": "spine_slot_data_set_attachment_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 510,
          "character": 0
        },
        "end": {
          "line": 510,
          "character": 112
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_slot_data_set_attachment_name(spine_slot_data slot, const utf8 *attachmentName);"
    },
    {
      "name": "spine_slot_data_get_blend_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 511,
          "character": 0
        },
        "end": {
          "line": 511,
          "character": 91
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_blend_mode spine_slot_data_get_blend_mode(spine_slot_data slot);"
    },
    {
      "name": "spine_slot_data_set_blend_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 512,
          "character": 0
        },
        "end": {
          "line": 512,
          "character": 107
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_slot_data_set_blend_mode(spine_slot_data slot, spine_blend_mode blendMode);"
    },
    {
      "name": "spine_slot_data_is_visible",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 513,
          "character": 0
        },
        "end": {
          "line": 513,
          "character": 81
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_slot_data_is_visible(spine_slot_data slot);"
    },
    {
      "name": "spine_slot_data_set_visible",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 514,
          "character": 0
        },
        "end": {
          "line": 514,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_slot_data_set_visible(spine_slot_data slot, spine_bool visible);"
    },
    {
      "name": "spine_slot_set_to_setup_pose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 517,
          "character": 0
        },
        "end": {
          "line": 517,
          "character": 72
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_slot_set_to_setup_pose(spine_slot slot);"
    },
    {
      "name": "spine_slot_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 518,
          "character": 0
        },
        "end": {
          "line": 518,
          "character": 74
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_slot_data spine_slot_get_data(spine_slot slot);"
    },
    {
      "name": "spine_slot_get_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 519,
          "character": 0
        },
        "end": {
          "line": 519,
          "character": 69
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone spine_slot_get_bone(spine_slot slot);"
    },
    {
      "name": "spine_slot_get_skeleton",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 520,
          "character": 0
        },
        "end": {
          "line": 520,
          "character": 77
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_skeleton spine_slot_get_skeleton(spine_slot slot);"
    },
    {
      "name": "spine_slot_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 521,
          "character": 0
        },
        "end": {
          "line": 521,
          "character": 71
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_color spine_slot_get_color(spine_slot slot);"
    },
    {
      "name": "spine_slot_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 522,
          "character": 0
        },
        "end": {
          "line": 522,
          "character": 100
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_slot_set_color(spine_slot slot, float r, float g, float b, float a);"
    },
    {
      "name": "spine_slot_get_dark_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 523,
          "character": 0
        },
        "end": {
          "line": 523,
          "character": 76
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_color spine_slot_get_dark_color(spine_slot slot);"
    },
    {
      "name": "spine_slot_set_dark_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 524,
          "character": 0
        },
        "end": {
          "line": 524,
          "character": 105
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_slot_set_dark_color(spine_slot slot, float r, float g, float b, float a);"
    },
    {
      "name": "spine_slot_has_dark_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 525,
          "character": 0
        },
        "end": {
          "line": 525,
          "character": 75
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_slot_has_dark_color(spine_slot slot);"
    },
    {
      "name": "spine_slot_get_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 527,
          "character": 0
        },
        "end": {
          "line": 527,
          "character": 81
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_attachment spine_slot_get_attachment(spine_slot slot);"
    },
    {
      "name": "spine_slot_set_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 528,
          "character": 0
        },
        "end": {
          "line": 528,
          "character": 98
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_slot_set_attachment(spine_slot slot, spine_attachment attachment);"
    },
    {
      "name": "spine_slot_get_sequence_index",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 530,
          "character": 0
        },
        "end": {
          "line": 530,
          "character": 76
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_slot_get_sequence_index(spine_slot slot);"
    },
    {
      "name": "spine_slot_set_sequence_index",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 531,
          "character": 0
        },
        "end": {
          "line": 531,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_slot_set_sequence_index(spine_slot slot, int32_t sequenceIndex);"
    },
    {
      "name": "spine_bone_data_get_index",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 533,
          "character": 0
        },
        "end": {
          "line": 533,
          "character": 77
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_bone_data_get_index(spine_bone_data data);"
    },
    {
      "name": "spine_bone_data_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 534,
          "character": 0
        },
        "end": {
          "line": 534,
          "character": 80
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_bone_data_get_name(spine_bone_data data);"
    },
    {
      "name": "spine_bone_data_get_parent",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 536,
          "character": 0
        },
        "end": {
          "line": 536,
          "character": 86
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone_data spine_bone_data_get_parent(spine_bone_data data);"
    },
    {
      "name": "spine_bone_data_get_length",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 537,
          "character": 0
        },
        "end": {
          "line": 537,
          "character": 76
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_data_get_length(spine_bone_data data);"
    },
    {
      "name": "spine_bone_data_set_length",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 538,
          "character": 0
        },
        "end": {
          "line": 538,
          "character": 89
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_data_set_length(spine_bone_data data, float length);"
    },
    {
      "name": "spine_bone_data_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 539,
          "character": 0
        },
        "end": {
          "line": 539,
          "character": 71
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_data_get_x(spine_bone_data data);"
    },
    {
      "name": "spine_bone_data_set_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 540,
          "character": 0
        },
        "end": {
          "line": 540,
          "character": 79
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_data_set_x(spine_bone_data data, float x);"
    },
    {
      "name": "spine_bone_data_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 541,
          "character": 0
        },
        "end": {
          "line": 541,
          "character": 71
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_data_get_y(spine_bone_data data);"
    },
    {
      "name": "spine_bone_data_set_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 542,
          "character": 0
        },
        "end": {
          "line": 542,
          "character": 79
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_data_set_y(spine_bone_data data, float y);"
    },
    {
      "name": "spine_bone_data_get_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 543,
          "character": 0
        },
        "end": {
          "line": 543,
          "character": 78
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_data_get_rotation(spine_bone_data data);"
    },
    {
      "name": "spine_bone_data_set_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 544,
          "character": 0
        },
        "end": {
          "line": 544,
          "character": 93
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_data_set_rotation(spine_bone_data data, float rotation);"
    },
    {
      "name": "spine_bone_data_get_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 545,
          "character": 0
        },
        "end": {
          "line": 545,
          "character": 77
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_data_get_scale_x(spine_bone_data data);"
    },
    {
      "name": "spine_bone_data_set_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 546,
          "character": 0
        },
        "end": {
          "line": 546,
          "character": 90
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_data_set_scale_x(spine_bone_data data, float scaleX);"
    },
    {
      "name": "spine_bone_data_get_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 547,
          "character": 0
        },
        "end": {
          "line": 547,
          "character": 77
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_data_get_scale_y(spine_bone_data data);"
    },
    {
      "name": "spine_bone_data_set_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 548,
          "character": 0
        },
        "end": {
          "line": 548,
          "character": 90
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_data_set_scale_y(spine_bone_data data, float scaleY);"
    },
    {
      "name": "spine_bone_data_get_shear_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 549,
          "character": 0
        },
        "end": {
          "line": 549,
          "character": 77
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_data_get_shear_x(spine_bone_data data);"
    },
    {
      "name": "spine_bone_data_set_shear_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 550,
          "character": 0
        },
        "end": {
          "line": 550,
          "character": 90
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_data_set_shear_x(spine_bone_data data, float shearx);"
    },
    {
      "name": "spine_bone_data_get_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 551,
          "character": 0
        },
        "end": {
          "line": 551,
          "character": 77
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_data_get_shear_y(spine_bone_data data);"
    },
    {
      "name": "spine_bone_data_set_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 552,
          "character": 0
        },
        "end": {
          "line": 552,
          "character": 90
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_data_set_shear_y(spine_bone_data data, float shearY);"
    },
    {
      "name": "spine_bone_data_get_inherit",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 553,
          "character": 0
        },
        "end": {
          "line": 553,
          "character": 85
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_inherit spine_bone_data_get_inherit(spine_bone_data data);"
    },
    {
      "name": "spine_bone_data_set_inherit",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 554,
          "character": 0
        },
        "end": {
          "line": 554,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_data_set_inherit(spine_bone_data data, spine_inherit inherit);"
    },
    {
      "name": "spine_bone_data_get_is_skin_required",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 555,
          "character": 0
        },
        "end": {
          "line": 555,
          "character": 91
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_bone_data_get_is_skin_required(spine_bone_data data);"
    },
    {
      "name": "spine_bone_data_set_is_skin_required",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 556,
          "character": 0
        },
        "end": {
          "line": 556,
          "character": 112
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_data_set_is_skin_required(spine_bone_data data, spine_bool isSkinRequired);"
    },
    {
      "name": "spine_bone_data_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 557,
          "character": 0
        },
        "end": {
          "line": 557,
          "character": 81
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_color spine_bone_data_get_color(spine_bone_data data);"
    },
    {
      "name": "spine_bone_data_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 558,
          "character": 0
        },
        "end": {
          "line": 558,
          "character": 110
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_data_set_color(spine_bone_data data, float r, float g, float b, float a);"
    },
    {
      "name": "spine_bone_data_is_visible",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 559,
          "character": 0
        },
        "end": {
          "line": 559,
          "character": 81
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_bone_data_is_visible(spine_bone_data data);"
    },
    {
      "name": "spine_bone_data_set_visible",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 560,
          "character": 0
        },
        "end": {
          "line": 560,
          "character": 98
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_data_set_visible(spine_bone_data data, spine_bool isVisible);"
    },
    {
      "name": "spine_bone_set_is_y_down",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 563,
          "character": 0
        },
        "end": {
          "line": 563,
          "character": 69
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_is_y_down(spine_bool yDown);"
    },
    {
      "name": "spine_bone_get_is_y_down",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 564,
          "character": 0
        },
        "end": {
          "line": 564,
          "character": 59
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_bone_get_is_y_down();"
    },
    {
      "name": "spine_bone_update",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 565,
          "character": 0
        },
        "end": {
          "line": 565,
          "character": 61
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_update(spine_bone bone);"
    },
    {
      "name": "spine_bone_update_world_transform",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 566,
          "character": 0
        },
        "end": {
          "line": 566,
          "character": 77
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_update_world_transform(spine_bone bone);"
    },
    {
      "name": "spine_bone_update_world_transform_with",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 567,
          "character": 0
        },
        "end": {
          "line": 567,
          "character": 172
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_update_world_transform_with(spine_bone bone, float x, float y, float rotation, float scaleX, float scaleY, float shearX, float shearY);"
    },
    {
      "name": "spine_bone_update_applied_transform",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 568,
          "character": 0
        },
        "end": {
          "line": 568,
          "character": 79
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_update_applied_transform(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_to_setup_pose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 569,
          "character": 0
        },
        "end": {
          "line": 569,
          "character": 72
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_to_setup_pose(spine_bone bone);"
    },
    {
      "name": "spine_bone_world_to_local",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 570,
          "character": 0
        },
        "end": {
          "line": 570,
          "character": 105
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_vector spine_bone_world_to_local(spine_bone bone, float worldX, float worldY);"
    },
    {
      "name": "spine_bone_world_to_parent",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 571,
          "character": 0
        },
        "end": {
          "line": 571,
          "character": 106
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_vector spine_bone_world_to_parent(spine_bone bone, float worldX, float worldY);"
    },
    {
      "name": "spine_bone_local_to_world",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 572,
          "character": 0
        },
        "end": {
          "line": 572,
          "character": 105
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_vector spine_bone_local_to_world(spine_bone bone, float localX, float localY);"
    },
    {
      "name": "spine_bone_parent_to_world",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 573,
          "character": 0
        },
        "end": {
          "line": 573,
          "character": 106
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_vector spine_bone_parent_to_world(spine_bone bone, float localX, float localY);"
    },
    {
      "name": "spine_bone_world_to_local_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 574,
          "character": 0
        },
        "end": {
          "line": 574,
          "character": 100
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_world_to_local_rotation(spine_bone bone, float worldRotation);"
    },
    {
      "name": "spine_bone_local_to_world_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 575,
          "character": 0
        },
        "end": {
          "line": 575,
          "character": 100
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_local_to_world_rotation(spine_bone bone, float localRotation);"
    },
    {
      "name": "spine_bone_rotate_world",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 576,
          "character": 0
        },
        "end": {
          "line": 576,
          "character": 82
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_rotate_world(spine_bone bone, float degrees);"
    },
    {
      "name": "spine_bone_get_world_to_local_rotation_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 577,
          "character": 0
        },
        "end": {
          "line": 577,
          "character": 85
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_world_to_local_rotation_x(spine_bone bone);"
    },
    {
      "name": "spine_bone_get_world_to_local_rotation_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 578,
          "character": 0
        },
        "end": {
          "line": 578,
          "character": 85
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_world_to_local_rotation_y(spine_bone bone);"
    },
    {
      "name": "spine_bone_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 579,
          "character": 0
        },
        "end": {
          "line": 579,
          "character": 74
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone_data spine_bone_get_data(spine_bone bone);"
    },
    {
      "name": "spine_bone_get_skeleton",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 580,
          "character": 0
        },
        "end": {
          "line": 580,
          "character": 77
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_skeleton spine_bone_get_skeleton(spine_bone bone);"
    },
    {
      "name": "spine_bone_get_parent",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 582,
          "character": 0
        },
        "end": {
          "line": 582,
          "character": 71
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone spine_bone_get_parent(spine_bone bone);"
    },
    {
      "name": "spine_bone_get_num_children",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 583,
          "character": 0
        },
        "end": {
          "line": 583,
          "character": 74
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_bone_get_num_children(spine_bone bone);"
    },
    {
      "name": "spine_bone_get_children",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 584,
          "character": 0
        },
        "end": {
          "line": 584,
          "character": 74
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone *spine_bone_get_children(spine_bone bone);"
    },
    {
      "name": "spine_bone_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 585,
          "character": 0
        },
        "end": {
          "line": 585,
          "character": 61
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_x(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 586,
          "character": 0
        },
        "end": {
          "line": 586,
          "character": 69
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_x(spine_bone bone, float x);"
    },
    {
      "name": "spine_bone_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 587,
          "character": 0
        },
        "end": {
          "line": 587,
          "character": 61
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_y(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 588,
          "character": 0
        },
        "end": {
          "line": 588,
          "character": 69
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_y(spine_bone bone, float y);"
    },
    {
      "name": "spine_bone_get_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 589,
          "character": 0
        },
        "end": {
          "line": 589,
          "character": 68
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_rotation(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 590,
          "character": 0
        },
        "end": {
          "line": 590,
          "character": 83
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_rotation(spine_bone bone, float rotation);"
    },
    {
      "name": "spine_bone_get_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 591,
          "character": 0
        },
        "end": {
          "line": 591,
          "character": 67
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_scale_x(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 592,
          "character": 0
        },
        "end": {
          "line": 592,
          "character": 80
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_scale_x(spine_bone bone, float scaleX);"
    },
    {
      "name": "spine_bone_get_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 593,
          "character": 0
        },
        "end": {
          "line": 593,
          "character": 67
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_scale_y(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 594,
          "character": 0
        },
        "end": {
          "line": 594,
          "character": 80
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_scale_y(spine_bone bone, float scaleY);"
    },
    {
      "name": "spine_bone_get_shear_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 595,
          "character": 0
        },
        "end": {
          "line": 595,
          "character": 67
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_shear_x(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_shear_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 596,
          "character": 0
        },
        "end": {
          "line": 596,
          "character": 80
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_shear_x(spine_bone bone, float shearX);"
    },
    {
      "name": "spine_bone_get_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 597,
          "character": 0
        },
        "end": {
          "line": 597,
          "character": 67
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_shear_y(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 598,
          "character": 0
        },
        "end": {
          "line": 598,
          "character": 80
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_shear_y(spine_bone bone, float shearY);"
    },
    {
      "name": "spine_bone_get_applied_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 599,
          "character": 0
        },
        "end": {
          "line": 599,
          "character": 76
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_applied_rotation(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_applied_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 600,
          "character": 0
        },
        "end": {
          "line": 600,
          "character": 91
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_applied_rotation(spine_bone bone, float rotation);"
    },
    {
      "name": "spine_bone_get_a_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 601,
          "character": 0
        },
        "end": {
          "line": 601,
          "character": 63
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_a_x(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_a_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 602,
          "character": 0
        },
        "end": {
          "line": 602,
          "character": 71
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_a_x(spine_bone bone, float x);"
    },
    {
      "name": "spine_bone_get_a_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 603,
          "character": 0
        },
        "end": {
          "line": 603,
          "character": 63
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_a_y(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_a_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 604,
          "character": 0
        },
        "end": {
          "line": 604,
          "character": 71
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_a_y(spine_bone bone, float y);"
    },
    {
      "name": "spine_bone_get_a_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 605,
          "character": 0
        },
        "end": {
          "line": 605,
          "character": 69
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_a_scale_x(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_a_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 606,
          "character": 0
        },
        "end": {
          "line": 606,
          "character": 82
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_a_scale_x(spine_bone bone, float scaleX);"
    },
    {
      "name": "spine_bone_get_a_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 607,
          "character": 0
        },
        "end": {
          "line": 607,
          "character": 69
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_a_scale_y(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_a_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 608,
          "character": 0
        },
        "end": {
          "line": 608,
          "character": 82
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_a_scale_y(spine_bone bone, float scaleY);"
    },
    {
      "name": "spine_bone_get_a_shear_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 609,
          "character": 0
        },
        "end": {
          "line": 609,
          "character": 69
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_a_shear_x(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_a_shear_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 610,
          "character": 0
        },
        "end": {
          "line": 610,
          "character": 82
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_a_shear_x(spine_bone bone, float shearX);"
    },
    {
      "name": "spine_bone_get_a_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 611,
          "character": 0
        },
        "end": {
          "line": 611,
          "character": 69
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_a_shear_y(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_a_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 612,
          "character": 0
        },
        "end": {
          "line": 612,
          "character": 82
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_a_shear_y(spine_bone bone, float shearY);"
    },
    {
      "name": "spine_bone_get_a",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 613,
          "character": 0
        },
        "end": {
          "line": 613,
          "character": 61
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_a(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_a",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 614,
          "character": 0
        },
        "end": {
          "line": 614,
          "character": 69
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_a(spine_bone bone, float a);"
    },
    {
      "name": "spine_bone_get_b",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 615,
          "character": 0
        },
        "end": {
          "line": 615,
          "character": 61
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_b(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_b",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 616,
          "character": 0
        },
        "end": {
          "line": 616,
          "character": 69
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_b(spine_bone bone, float b);"
    },
    {
      "name": "spine_bone_get_c",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 617,
          "character": 0
        },
        "end": {
          "line": 617,
          "character": 61
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_c(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_c",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 618,
          "character": 0
        },
        "end": {
          "line": 618,
          "character": 69
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_c(spine_bone bone, float c);"
    },
    {
      "name": "spine_bone_get_d",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 619,
          "character": 0
        },
        "end": {
          "line": 619,
          "character": 61
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_d(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_d",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 620,
          "character": 0
        },
        "end": {
          "line": 620,
          "character": 69
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_d(spine_bone bone, float d);"
    },
    {
      "name": "spine_bone_get_world_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 621,
          "character": 0
        },
        "end": {
          "line": 621,
          "character": 67
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_world_x(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_world_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 622,
          "character": 0
        },
        "end": {
          "line": 622,
          "character": 80
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_world_x(spine_bone bone, float worldX);"
    },
    {
      "name": "spine_bone_get_world_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 623,
          "character": 0
        },
        "end": {
          "line": 623,
          "character": 67
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_world_y(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_world_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 624,
          "character": 0
        },
        "end": {
          "line": 624,
          "character": 80
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_world_y(spine_bone bone, float worldY);"
    },
    {
      "name": "spine_bone_get_world_rotation_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 625,
          "character": 0
        },
        "end": {
          "line": 625,
          "character": 76
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_world_rotation_x(spine_bone bone);"
    },
    {
      "name": "spine_bone_get_world_rotation_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 626,
          "character": 0
        },
        "end": {
          "line": 626,
          "character": 76
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_world_rotation_y(spine_bone bone);"
    },
    {
      "name": "spine_bone_get_world_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 627,
          "character": 0
        },
        "end": {
          "line": 627,
          "character": 73
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_world_scale_x(spine_bone bone);"
    },
    {
      "name": "spine_bone_get_world_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 628,
          "character": 0
        },
        "end": {
          "line": 628,
          "character": 73
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_bone_get_world_scale_y(spine_bone bone);"
    },
    {
      "name": "spine_bone_get_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 629,
          "character": 0
        },
        "end": {
          "line": 629,
          "character": 74
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_bone_get_is_active(spine_bone bone);"
    },
    {
      "name": "spine_bone_set_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 630,
          "character": 0
        },
        "end": {
          "line": 630,
          "character": 89
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_is_active(spine_bone bone, spine_bool isActive);"
    },
    {
      "name": "spine_bone_get_inherit",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 631,
          "character": 0
        },
        "end": {
          "line": 631,
          "character": 75
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_inherit spine_bone_get_inherit(spine_bone data);"
    },
    {
      "name": "spine_bone_set_inherit",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 632,
          "character": 0
        },
        "end": {
          "line": 632,
          "character": 89
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bone_set_inherit(spine_bone data, spine_inherit inherit);"
    },
    {
      "name": "spine_attachment_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 634,
          "character": 0
        },
        "end": {
          "line": 634,
          "character": 88
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_attachment_get_name(spine_attachment attachment);"
    },
    {
      "name": "spine_attachment_get_type",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 635,
          "character": 0
        },
        "end": {
          "line": 635,
          "character": 98
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_attachment_type spine_attachment_get_type(spine_attachment attachment);"
    },
    {
      "name": "spine_attachment_copy",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 637,
          "character": 0
        },
        "end": {
          "line": 637,
          "character": 89
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_attachment spine_attachment_copy(spine_attachment attachment);"
    },
    {
      "name": "spine_attachment_cast_to_bounding_box_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 639,
          "character": 0
        },
        "end": {
          "line": 639,
          "character": 129
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bounding_box_attachment spine_attachment_cast_to_bounding_box_attachment(spine_attachment attachment);"
    },
    {
      "name": "spine_attachment_dispose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 640,
          "character": 0
        },
        "end": {
          "line": 640,
          "character": 80
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_attachment_dispose(spine_attachment attachment);"
    },
    {
      "name": "spine_point_attachment_compute_world_position",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 642,
          "character": 0
        },
        "end": {
          "line": 642,
          "character": 132
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_vector spine_point_attachment_compute_world_position(spine_point_attachment attachment, spine_bone bone);"
    },
    {
      "name": "spine_point_attachment_compute_world_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 643,
          "character": 0
        },
        "end": {
          "line": 643,
          "character": 125
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_point_attachment_compute_world_rotation(spine_point_attachment attachment, spine_bone bone);"
    },
    {
      "name": "spine_point_attachment_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 644,
          "character": 0
        },
        "end": {
          "line": 644,
          "character": 91
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_point_attachment_get_x(spine_point_attachment attachment);"
    },
    {
      "name": "spine_point_attachment_set_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 645,
          "character": 0
        },
        "end": {
          "line": 645,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_point_attachment_set_x(spine_point_attachment attachment, float x);"
    },
    {
      "name": "spine_point_attachment_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 646,
          "character": 0
        },
        "end": {
          "line": 646,
          "character": 91
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_point_attachment_get_y(spine_point_attachment attachment);"
    },
    {
      "name": "spine_point_attachment_set_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 647,
          "character": 0
        },
        "end": {
          "line": 647,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_point_attachment_set_y(spine_point_attachment attachment, float y);"
    },
    {
      "name": "spine_point_attachment_get_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 648,
          "character": 0
        },
        "end": {
          "line": 648,
          "character": 98
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_point_attachment_get_rotation(spine_point_attachment attachment);"
    },
    {
      "name": "spine_point_attachment_set_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 649,
          "character": 0
        },
        "end": {
          "line": 649,
          "character": 113
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_point_attachment_set_rotation(spine_point_attachment attachment, float rotation);"
    },
    {
      "name": "spine_point_attachment_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 650,
          "character": 0
        },
        "end": {
          "line": 650,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_color spine_point_attachment_get_color(spine_point_attachment attachment);"
    },
    {
      "name": "spine_point_attachment_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 651,
          "character": 0
        },
        "end": {
          "line": 651,
          "character": 130
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_point_attachment_set_color(spine_point_attachment attachment, float r, float g, float b, float a);"
    },
    {
      "name": "spine_region_attachment_update_region",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 653,
          "character": 0
        },
        "end": {
          "line": 653,
          "character": 100
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_region_attachment_update_region(spine_region_attachment attachment);"
    },
    {
      "name": "spine_region_attachment_compute_world_vertices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 655,
          "character": 0
        },
        "end": {
          "line": 655,
          "character": 148
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_region_attachment_compute_world_vertices(spine_region_attachment attachment, spine_slot slot, float *worldVertices);"
    },
    {
      "name": "spine_region_attachment_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 656,
          "character": 0
        },
        "end": {
          "line": 656,
          "character": 93
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_region_attachment_get_x(spine_region_attachment attachment);"
    },
    {
      "name": "spine_region_attachment_set_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 657,
          "character": 0
        },
        "end": {
          "line": 657,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_region_attachment_set_x(spine_region_attachment attachment, float x);"
    },
    {
      "name": "spine_region_attachment_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 658,
          "character": 0
        },
        "end": {
          "line": 658,
          "character": 93
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_region_attachment_get_y(spine_region_attachment attachment);"
    },
    {
      "name": "spine_region_attachment_set_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 659,
          "character": 0
        },
        "end": {
          "line": 659,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_region_attachment_set_y(spine_region_attachment attachment, float y);"
    },
    {
      "name": "spine_region_attachment_get_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 660,
          "character": 0
        },
        "end": {
          "line": 660,
          "character": 100
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_region_attachment_get_rotation(spine_region_attachment attachment);"
    },
    {
      "name": "spine_region_attachment_set_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 661,
          "character": 0
        },
        "end": {
          "line": 661,
          "character": 115
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_region_attachment_set_rotation(spine_region_attachment attachment, float rotation);"
    },
    {
      "name": "spine_region_attachment_get_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 662,
          "character": 0
        },
        "end": {
          "line": 662,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_region_attachment_get_scale_x(spine_region_attachment attachment);"
    },
    {
      "name": "spine_region_attachment_set_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 663,
          "character": 0
        },
        "end": {
          "line": 663,
          "character": 112
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_region_attachment_set_scale_x(spine_region_attachment attachment, float scaleX);"
    },
    {
      "name": "spine_region_attachment_get_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 664,
          "character": 0
        },
        "end": {
          "line": 664,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_region_attachment_get_scale_y(spine_region_attachment attachment);"
    },
    {
      "name": "spine_region_attachment_set_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 665,
          "character": 0
        },
        "end": {
          "line": 665,
          "character": 112
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_region_attachment_set_scale_y(spine_region_attachment attachment, float scaleY);"
    },
    {
      "name": "spine_region_attachment_get_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 666,
          "character": 0
        },
        "end": {
          "line": 666,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_region_attachment_get_width(spine_region_attachment attachment);"
    },
    {
      "name": "spine_region_attachment_set_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 667,
          "character": 0
        },
        "end": {
          "line": 667,
          "character": 109
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_region_attachment_set_width(spine_region_attachment attachment, float width);"
    },
    {
      "name": "spine_region_attachment_get_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 668,
          "character": 0
        },
        "end": {
          "line": 668,
          "character": 98
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_region_attachment_get_height(spine_region_attachment attachment);"
    },
    {
      "name": "spine_region_attachment_set_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 669,
          "character": 0
        },
        "end": {
          "line": 669,
          "character": 111
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_region_attachment_set_height(spine_region_attachment attachment, float height);"
    },
    {
      "name": "spine_region_attachment_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 670,
          "character": 0
        },
        "end": {
          "line": 670,
          "character": 103
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_color spine_region_attachment_get_color(spine_region_attachment attachment);"
    },
    {
      "name": "spine_region_attachment_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 671,
          "character": 0
        },
        "end": {
          "line": 671,
          "character": 132
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_region_attachment_set_color(spine_region_attachment attachment, float r, float g, float b, float a);"
    },
    {
      "name": "spine_region_attachment_get_path",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 672,
          "character": 0
        },
        "end": {
          "line": 672,
          "character": 102
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_region_attachment_get_path(spine_region_attachment attachment);"
    },
    {
      "name": "spine_region_attachment_get_region",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 675,
          "character": 0
        },
        "end": {
          "line": 675,
          "character": 113
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_texture_region spine_region_attachment_get_region(spine_region_attachment attachment);"
    },
    {
      "name": "spine_region_attachment_get_sequence",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 678,
          "character": 0
        },
        "end": {
          "line": 678,
          "character": 109
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_sequence spine_region_attachment_get_sequence(spine_region_attachment attachment);"
    },
    {
      "name": "spine_region_attachment_get_num_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 680,
          "character": 0
        },
        "end": {
          "line": 680,
          "character": 104
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_region_attachment_get_num_offset(spine_region_attachment attachment);"
    },
    {
      "name": "spine_region_attachment_get_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 681,
          "character": 0
        },
        "end": {
          "line": 681,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float *spine_region_attachment_get_offset(spine_region_attachment attachment);"
    },
    {
      "name": "spine_region_attachment_get_num_uvs",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 682,
          "character": 0
        },
        "end": {
          "line": 682,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_region_attachment_get_num_uvs(spine_region_attachment attachment);"
    },
    {
      "name": "spine_region_attachment_get_uvs",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 683,
          "character": 0
        },
        "end": {
          "line": 683,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float *spine_region_attachment_get_uvs(spine_region_attachment attachment);"
    },
    {
      "name": "spine_vertex_attachment_get_world_vertices_length",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 685,
          "character": 0
        },
        "end": {
          "line": 685,
          "character": 115
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_vertex_attachment_get_world_vertices_length(spine_vertex_attachment attachment);"
    },
    {
      "name": "spine_vertex_attachment_compute_world_vertices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 687,
          "character": 0
        },
        "end": {
          "line": 687,
          "character": 148
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_vertex_attachment_compute_world_vertices(spine_vertex_attachment attachment, spine_slot slot, float *worldVertices);"
    },
    {
      "name": "spine_vertex_attachment_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 689,
          "character": 0
        },
        "end": {
          "line": 689,
          "character": 103
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_vertex_attachment_get_num_bones(spine_vertex_attachment attachment);"
    },
    {
      "name": "spine_vertex_attachment_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 690,
          "character": 0
        },
        "end": {
          "line": 690,
          "character": 100
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t *spine_vertex_attachment_get_bones(spine_vertex_attachment attachment);"
    },
    {
      "name": "spine_vertex_attachment_get_num_vertices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 691,
          "character": 0
        },
        "end": {
          "line": 691,
          "character": 106
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_vertex_attachment_get_num_vertices(spine_vertex_attachment attachment);"
    },
    {
      "name": "spine_vertex_attachment_get_vertices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 692,
          "character": 0
        },
        "end": {
          "line": 692,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float *spine_vertex_attachment_get_vertices(spine_vertex_attachment attachment);"
    },
    {
      "name": "spine_vertex_attachment_get_timeline_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 694,
          "character": 0
        },
        "end": {
          "line": 694,
          "character": 130
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_attachment spine_vertex_attachment_get_timeline_attachment(spine_vertex_attachment timelineAttachment);"
    },
    {
      "name": "spine_vertex_attachment_set_timeline_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 695,
          "character": 0
        },
        "end": {
          "line": 695,
          "character": 147
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_vertex_attachment_set_timeline_attachment(spine_vertex_attachment attachment, spine_attachment timelineAttachment);"
    },
    {
      "name": "spine_mesh_attachment_update_region",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 698,
          "character": 0
        },
        "end": {
          "line": 698,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_mesh_attachment_update_region(spine_mesh_attachment attachment);"
    },
    {
      "name": "spine_mesh_attachment_get_hull_length",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 699,
          "character": 0
        },
        "end": {
          "line": 699,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_mesh_attachment_get_hull_length(spine_mesh_attachment attachment);"
    },
    {
      "name": "spine_mesh_attachment_set_hull_length",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 700,
          "character": 0
        },
        "end": {
          "line": 700,
          "character": 118
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_mesh_attachment_set_hull_length(spine_mesh_attachment attachment, int32_t hullLength);"
    },
    {
      "name": "spine_mesh_attachment_get_num_region_uvs",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 701,
          "character": 0
        },
        "end": {
          "line": 701,
          "character": 104
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_mesh_attachment_get_num_region_uvs(spine_mesh_attachment attachment);"
    },
    {
      "name": "spine_mesh_attachment_get_region_uvs",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 702,
          "character": 0
        },
        "end": {
          "line": 702,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float *spine_mesh_attachment_get_region_uvs(spine_mesh_attachment attachment);"
    },
    {
      "name": "spine_mesh_attachment_get_num_uvs",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 703,
          "character": 0
        },
        "end": {
          "line": 703,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_mesh_attachment_get_num_uvs(spine_mesh_attachment attachment);"
    },
    {
      "name": "spine_mesh_attachment_get_uvs",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 704,
          "character": 0
        },
        "end": {
          "line": 704,
          "character": 92
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float *spine_mesh_attachment_get_uvs(spine_mesh_attachment attachment);"
    },
    {
      "name": "spine_mesh_attachment_get_num_triangles",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 705,
          "character": 0
        },
        "end": {
          "line": 705,
          "character": 103
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_mesh_attachment_get_num_triangles(spine_mesh_attachment attachment);"
    },
    {
      "name": "spine_mesh_attachment_get_triangles",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 706,
          "character": 0
        },
        "end": {
          "line": 706,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT uint16_t *spine_mesh_attachment_get_triangles(spine_mesh_attachment attachment);"
    },
    {
      "name": "spine_mesh_attachment_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 707,
          "character": 0
        },
        "end": {
          "line": 707,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_color spine_mesh_attachment_get_color(spine_mesh_attachment attachment);"
    },
    {
      "name": "spine_mesh_attachment_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 708,
          "character": 0
        },
        "end": {
          "line": 708,
          "character": 128
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_mesh_attachment_set_color(spine_mesh_attachment attachment, float r, float g, float b, float a);"
    },
    {
      "name": "spine_mesh_attachment_get_path",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 709,
          "character": 0
        },
        "end": {
          "line": 709,
          "character": 98
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_mesh_attachment_get_path(spine_mesh_attachment attachment);"
    },
    {
      "name": "spine_mesh_attachment_get_region",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 711,
          "character": 0
        },
        "end": {
          "line": 711,
          "character": 109
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_texture_region spine_mesh_attachment_get_region(spine_mesh_attachment attachment);"
    },
    {
      "name": "spine_mesh_attachment_get_sequence",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 714,
          "character": 0
        },
        "end": {
          "line": 714,
          "character": 105
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_sequence spine_mesh_attachment_get_sequence(spine_mesh_attachment attachment);"
    },
    {
      "name": "spine_mesh_attachment_get_parent_mesh",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 717,
          "character": 0
        },
        "end": {
          "line": 717,
          "character": 115
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_mesh_attachment spine_mesh_attachment_get_parent_mesh(spine_mesh_attachment attachment);"
    },
    {
      "name": "spine_mesh_attachment_set_parent_mesh",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 718,
          "character": 0
        },
        "end": {
          "line": 718,
          "character": 132
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_mesh_attachment_set_parent_mesh(spine_mesh_attachment attachment, spine_mesh_attachment parentMesh);"
    },
    {
      "name": "spine_mesh_attachment_get_num_edges",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 719,
          "character": 0
        },
        "end": {
          "line": 719,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_mesh_attachment_get_num_edges(spine_mesh_attachment attachment);"
    },
    {
      "name": "spine_mesh_attachment_get_edges",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 720,
          "character": 0
        },
        "end": {
          "line": 720,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT uint16_t *spine_mesh_attachment_get_edges(spine_mesh_attachment attachment);"
    },
    {
      "name": "spine_mesh_attachment_get_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 721,
          "character": 0
        },
        "end": {
          "line": 721,
          "character": 93
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_mesh_attachment_get_width(spine_mesh_attachment attachment);"
    },
    {
      "name": "spine_mesh_attachment_set_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 722,
          "character": 0
        },
        "end": {
          "line": 722,
          "character": 105
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_mesh_attachment_set_width(spine_mesh_attachment attachment, float width);"
    },
    {
      "name": "spine_mesh_attachment_get_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 723,
          "character": 0
        },
        "end": {
          "line": 723,
          "character": 94
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_mesh_attachment_get_height(spine_mesh_attachment attachment);"
    },
    {
      "name": "spine_mesh_attachment_set_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 724,
          "character": 0
        },
        "end": {
          "line": 724,
          "character": 107
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_mesh_attachment_set_height(spine_mesh_attachment attachment, float height);"
    },
    {
      "name": "spine_clipping_attachment_get_end_slot",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 728,
          "character": 0
        },
        "end": {
          "line": 728,
          "character": 114
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_slot_data spine_clipping_attachment_get_end_slot(spine_clipping_attachment attachment);"
    },
    {
      "name": "spine_clipping_attachment_set_end_slot",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 729,
          "character": 0
        },
        "end": {
          "line": 729,
          "character": 128
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_clipping_attachment_set_end_slot(spine_clipping_attachment attachment, spine_slot_data endSlot);"
    },
    {
      "name": "spine_clipping_attachment_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 730,
          "character": 0
        },
        "end": {
          "line": 730,
          "character": 107
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_color spine_clipping_attachment_get_color(spine_clipping_attachment attachment);"
    },
    {
      "name": "spine_clipping_attachment_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 731,
          "character": 0
        },
        "end": {
          "line": 731,
          "character": 136
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_clipping_attachment_set_color(spine_clipping_attachment attachment, float r, float g, float b, float a);"
    },
    {
      "name": "spine_bounding_box_attachment_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 733,
          "character": 0
        },
        "end": {
          "line": 733,
          "character": 115
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_color spine_bounding_box_attachment_get_color(spine_bounding_box_attachment attachment);"
    },
    {
      "name": "spine_bounding_box_attachment_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 734,
          "character": 0
        },
        "end": {
          "line": 734,
          "character": 144
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_bounding_box_attachment_set_color(spine_bounding_box_attachment attachment, float r, float g, float b, float a);"
    },
    {
      "name": "spine_path_attachment_get_num_lengths",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 736,
          "character": 0
        },
        "end": {
          "line": 736,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_path_attachment_get_num_lengths(spine_path_attachment attachment);"
    },
    {
      "name": "spine_path_attachment_get_lengths",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 737,
          "character": 0
        },
        "end": {
          "line": 737,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float *spine_path_attachment_get_lengths(spine_path_attachment attachment);"
    },
    {
      "name": "spine_path_attachment_get_is_closed",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 738,
          "character": 0
        },
        "end": {
          "line": 738,
          "character": 102
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_path_attachment_get_is_closed(spine_path_attachment attachment);"
    },
    {
      "name": "spine_path_attachment_set_is_closed",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 739,
          "character": 0
        },
        "end": {
          "line": 739,
          "character": 117
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_attachment_set_is_closed(spine_path_attachment attachment, spine_bool isClosed);"
    },
    {
      "name": "spine_path_attachment_get_is_constant_speed",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 740,
          "character": 0
        },
        "end": {
          "line": 740,
          "character": 110
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_path_attachment_get_is_constant_speed(spine_path_attachment attachment);"
    },
    {
      "name": "spine_path_attachment_set_is_constant_speed",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 741,
          "character": 0
        },
        "end": {
          "line": 741,
          "character": 132
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_attachment_set_is_constant_speed(spine_path_attachment attachment, spine_bool isConstantSpeed);"
    },
    {
      "name": "spine_path_attachment_get_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 742,
          "character": 0
        },
        "end": {
          "line": 742,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_color spine_path_attachment_get_color(spine_path_attachment attachment);"
    },
    {
      "name": "spine_path_attachment_set_color",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 743,
          "character": 0
        },
        "end": {
          "line": 743,
          "character": 128
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_attachment_set_color(spine_path_attachment attachment, float r, float g, float b, float a);"
    },
    {
      "name": "spine_skin_set_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 745,
          "character": 0
        },
        "end": {
          "line": 745,
          "character": 135
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skin_set_attachment(spine_skin skin, int32_t slotIndex, const utf8 *name, spine_attachment attachment);"
    },
    {
      "name": "spine_skin_get_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 747,
          "character": 0
        },
        "end": {
          "line": 747,
          "character": 118
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_attachment spine_skin_get_attachment(spine_skin skin, int32_t slotIndex, const utf8 *name);"
    },
    {
      "name": "spine_skin_remove_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 748,
          "character": 0
        },
        "end": {
          "line": 748,
          "character": 109
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skin_remove_attachment(spine_skin skin, int32_t slotIndex, const utf8 *name);"
    },
    {
      "name": "spine_skin_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 752,
          "character": 0
        },
        "end": {
          "line": 752,
          "character": 70
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_skin_get_name(spine_skin skin);"
    },
    {
      "name": "spine_skin_add_skin",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 753,
          "character": 0
        },
        "end": {
          "line": 753,
          "character": 81
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skin_add_skin(spine_skin skin, spine_skin other);"
    },
    {
      "name": "spine_skin_copy_skin",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 754,
          "character": 0
        },
        "end": {
          "line": 754,
          "character": 82
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skin_copy_skin(spine_skin skin, spine_skin other);"
    },
    {
      "name": "spine_skin_get_entries",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 755,
          "character": 0
        },
        "end": {
          "line": 755,
          "character": 80
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_skin_entries spine_skin_get_entries(spine_skin skin);"
    },
    {
      "name": "spine_skin_entries_get_num_entries",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 756,
          "character": 0
        },
        "end": {
          "line": 756,
          "character": 92
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skin_entries_get_num_entries(spine_skin_entries entries);"
    },
    {
      "name": "spine_skin_entries_get_entry",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 757,
          "character": 0
        },
        "end": {
          "line": 757,
          "character": 110
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_skin_entry spine_skin_entries_get_entry(spine_skin_entries entries, int32_t index);"
    },
    {
      "name": "spine_skin_entries_dispose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 758,
          "character": 0
        },
        "end": {
          "line": 758,
          "character": 81
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skin_entries_dispose(spine_skin_entries entries);"
    },
    {
      "name": "spine_skin_entry_get_slot_index",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 759,
          "character": 0
        },
        "end": {
          "line": 759,
          "character": 85
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skin_entry_get_slot_index(spine_skin_entry entry);"
    },
    {
      "name": "spine_skin_entry_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 760,
          "character": 0
        },
        "end": {
          "line": 760,
          "character": 77
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT utf8 *spine_skin_entry_get_name(spine_skin_entry entry);"
    },
    {
      "name": "spine_skin_entry_get_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 761,
          "character": 0
        },
        "end": {
          "line": 761,
          "character": 94
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_attachment spine_skin_entry_get_attachment(spine_skin_entry entry);"
    },
    {
      "name": "spine_skin_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 762,
          "character": 0
        },
        "end": {
          "line": 762,
          "character": 71
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skin_get_num_bones(spine_skin skin);"
    },
    {
      "name": "spine_skin_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 763,
          "character": 0
        },
        "end": {
          "line": 763,
          "character": 76
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone_data *spine_skin_get_bones(spine_skin skin);"
    },
    {
      "name": "spine_skin_get_num_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 764,
          "character": 0
        },
        "end": {
          "line": 764,
          "character": 77
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skin_get_num_constraints(spine_skin skin);"
    },
    {
      "name": "spine_skin_get_constraints",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 765,
          "character": 0
        },
        "end": {
          "line": 765,
          "character": 88
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_constraint_data *spine_skin_get_constraints(spine_skin skin);"
    },
    {
      "name": "spine_skin_create",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 767,
          "character": 0
        },
        "end": {
          "line": 767,
          "character": 68
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_skin spine_skin_create(const utf8 *name);"
    },
    {
      "name": "spine_skin_dispose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 768,
          "character": 0
        },
        "end": {
          "line": 768,
          "character": 62
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skin_dispose(spine_skin skin);"
    },
    {
      "name": "spine_constraint_data_get_type",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 770,
          "character": 0
        },
        "end": {
          "line": 770,
          "character": 102
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_constraint_type spine_constraint_data_get_type(spine_constraint_data data);"
    },
    {
      "name": "spine_constraint_data_get_name",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 771,
          "character": 0
        },
        "end": {
          "line": 771,
          "character": 92
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_constraint_data_get_name(spine_constraint_data data);"
    },
    {
      "name": "spine_constraint_data_get_order",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 772,
          "character": 0
        },
        "end": {
          "line": 772,
          "character": 90
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT uint64_t spine_constraint_data_get_order(spine_constraint_data data);"
    },
    {
      "name": "spine_constraint_data_set_order",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 773,
          "character": 0
        },
        "end": {
          "line": 773,
          "character": 102
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_constraint_data_set_order(spine_constraint_data data, uint64_t order);"
    },
    {
      "name": "spine_constraint_data_get_is_skin_required",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 774,
          "character": 0
        },
        "end": {
          "line": 774,
          "character": 103
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_constraint_data_get_is_skin_required(spine_constraint_data data);"
    },
    {
      "name": "spine_constraint_data_set_is_skin_required",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 775,
          "character": 0
        },
        "end": {
          "line": 775,
          "character": 124
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_constraint_data_set_is_skin_required(spine_constraint_data data, spine_bool isSkinRequired);"
    },
    {
      "name": "spine_ik_constraint_data_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 777,
          "character": 0
        },
        "end": {
          "line": 777,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_ik_constraint_data_get_num_bones(spine_ik_constraint_data data);"
    },
    {
      "name": "spine_ik_constraint_data_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 778,
          "character": 0
        },
        "end": {
          "line": 778,
          "character": 104
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone_data *spine_ik_constraint_data_get_bones(spine_ik_constraint_data data);"
    },
    {
      "name": "spine_ik_constraint_data_get_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 779,
          "character": 0
        },
        "end": {
          "line": 779,
          "character": 104
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone_data spine_ik_constraint_data_get_target(spine_ik_constraint_data data);"
    },
    {
      "name": "spine_ik_constraint_data_set_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 780,
          "character": 0
        },
        "end": {
          "line": 780,
          "character": 117
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_ik_constraint_data_set_target(spine_ik_constraint_data data, spine_bone_data target);"
    },
    {
      "name": "spine_ik_constraint_data_get_bend_direction",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 781,
          "character": 0
        },
        "end": {
          "line": 781,
          "character": 104
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_ik_constraint_data_get_bend_direction(spine_ik_constraint_data data);"
    },
    {
      "name": "spine_ik_constraint_data_set_bend_direction",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 782,
          "character": 0
        },
        "end": {
          "line": 782,
          "character": 124
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_ik_constraint_data_set_bend_direction(spine_ik_constraint_data data, int32_t bendDirection);"
    },
    {
      "name": "spine_ik_constraint_data_get_compress",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 783,
          "character": 0
        },
        "end": {
          "line": 783,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_ik_constraint_data_get_compress(spine_ik_constraint_data data);"
    },
    {
      "name": "spine_ik_constraint_data_set_compress",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 784,
          "character": 0
        },
        "end": {
          "line": 784,
          "character": 116
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_ik_constraint_data_set_compress(spine_ik_constraint_data data, spine_bool compress);"
    },
    {
      "name": "spine_ik_constraint_data_get_stretch",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 785,
          "character": 0
        },
        "end": {
          "line": 785,
          "character": 100
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_ik_constraint_data_get_stretch(spine_ik_constraint_data data);"
    },
    {
      "name": "spine_ik_constraint_data_set_stretch",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 786,
          "character": 0
        },
        "end": {
          "line": 786,
          "character": 114
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_ik_constraint_data_set_stretch(spine_ik_constraint_data data, spine_bool stretch);"
    },
    {
      "name": "spine_ik_constraint_data_get_uniform",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 787,
          "character": 0
        },
        "end": {
          "line": 787,
          "character": 100
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_ik_constraint_data_get_uniform(spine_ik_constraint_data data);"
    },
    {
      "name": "spine_ik_constraint_data_set_uniform",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 788,
          "character": 0
        },
        "end": {
          "line": 788,
          "character": 114
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_ik_constraint_data_set_uniform(spine_ik_constraint_data data, spine_bool uniform);"
    },
    {
      "name": "spine_ik_constraint_data_get_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 789,
          "character": 0
        },
        "end": {
          "line": 789,
          "character": 91
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_ik_constraint_data_get_mix(spine_ik_constraint_data data);"
    },
    {
      "name": "spine_ik_constraint_data_set_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 790,
          "character": 0
        },
        "end": {
          "line": 790,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_ik_constraint_data_set_mix(spine_ik_constraint_data data, float mix);"
    },
    {
      "name": "spine_ik_constraint_data_get_softness",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 791,
          "character": 0
        },
        "end": {
          "line": 791,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_ik_constraint_data_get_softness(spine_ik_constraint_data data);"
    },
    {
      "name": "spine_ik_constraint_data_set_softness",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 792,
          "character": 0
        },
        "end": {
          "line": 792,
          "character": 111
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_ik_constraint_data_set_softness(spine_ik_constraint_data data, float softness);"
    },
    {
      "name": "spine_ik_constraint_update",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 794,
          "character": 0
        },
        "end": {
          "line": 794,
          "character": 85
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_ik_constraint_update(spine_ik_constraint constraint);"
    },
    {
      "name": "spine_ik_constraint_get_order",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 795,
          "character": 0
        },
        "end": {
          "line": 795,
          "character": 91
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_ik_constraint_get_order(spine_ik_constraint constraint);"
    },
    {
      "name": "spine_ik_constraint_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 796,
          "character": 0
        },
        "end": {
          "line": 796,
          "character": 107
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_ik_constraint_data spine_ik_constraint_get_data(spine_ik_constraint constraint);"
    },
    {
      "name": "spine_ik_constraint_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 797,
          "character": 0
        },
        "end": {
          "line": 797,
          "character": 95
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_ik_constraint_get_num_bones(spine_ik_constraint constraint);"
    },
    {
      "name": "spine_ik_constraint_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 798,
          "character": 0
        },
        "end": {
          "line": 798,
          "character": 95
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone *spine_ik_constraint_get_bones(spine_ik_constraint constraint);"
    },
    {
      "name": "spine_ik_constraint_get_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 799,
          "character": 0
        },
        "end": {
          "line": 799,
          "character": 95
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone spine_ik_constraint_get_target(spine_ik_constraint constraint);"
    },
    {
      "name": "spine_ik_constraint_set_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 800,
          "character": 0
        },
        "end": {
          "line": 800,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_ik_constraint_set_target(spine_ik_constraint constraint, spine_bone target);"
    },
    {
      "name": "spine_ik_constraint_get_bend_direction",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 801,
          "character": 0
        },
        "end": {
          "line": 801,
          "character": 100
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_ik_constraint_get_bend_direction(spine_ik_constraint constraint);"
    },
    {
      "name": "spine_ik_constraint_set_bend_direction",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 802,
          "character": 0
        },
        "end": {
          "line": 802,
          "character": 120
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_ik_constraint_set_bend_direction(spine_ik_constraint constraint, int32_t bendDirection);"
    },
    {
      "name": "spine_ik_constraint_get_compress",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 803,
          "character": 0
        },
        "end": {
          "line": 803,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_ik_constraint_get_compress(spine_ik_constraint constraint);"
    },
    {
      "name": "spine_ik_constraint_set_compress",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 804,
          "character": 0
        },
        "end": {
          "line": 804,
          "character": 112
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_ik_constraint_set_compress(spine_ik_constraint constraint, spine_bool compress);"
    },
    {
      "name": "spine_ik_constraint_get_stretch",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 805,
          "character": 0
        },
        "end": {
          "line": 805,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_ik_constraint_get_stretch(spine_ik_constraint constraint);"
    },
    {
      "name": "spine_ik_constraint_set_stretch",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 806,
          "character": 0
        },
        "end": {
          "line": 806,
          "character": 110
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_ik_constraint_set_stretch(spine_ik_constraint constraint, spine_bool stretch);"
    },
    {
      "name": "spine_ik_constraint_get_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 807,
          "character": 0
        },
        "end": {
          "line": 807,
          "character": 87
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_ik_constraint_get_mix(spine_ik_constraint constraint);"
    },
    {
      "name": "spine_ik_constraint_set_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 808,
          "character": 0
        },
        "end": {
          "line": 808,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_ik_constraint_set_mix(spine_ik_constraint constraint, float mix);"
    },
    {
      "name": "spine_ik_constraint_get_softness",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 809,
          "character": 0
        },
        "end": {
          "line": 809,
          "character": 92
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_ik_constraint_get_softness(spine_ik_constraint constraint);"
    },
    {
      "name": "spine_ik_constraint_set_softness",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 810,
          "character": 0
        },
        "end": {
          "line": 810,
          "character": 107
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_ik_constraint_set_softness(spine_ik_constraint constraint, float softness);"
    },
    {
      "name": "spine_ik_constraint_get_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 811,
          "character": 0
        },
        "end": {
          "line": 811,
          "character": 98
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_ik_constraint_get_is_active(spine_ik_constraint constraint);"
    },
    {
      "name": "spine_ik_constraint_set_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 812,
          "character": 0
        },
        "end": {
          "line": 812,
          "character": 113
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_ik_constraint_set_is_active(spine_ik_constraint constraint, spine_bool isActive);"
    },
    {
      "name": "spine_transform_constraint_data_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 815,
          "character": 0
        },
        "end": {
          "line": 815,
          "character": 113
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_transform_constraint_data_get_num_bones(spine_transform_constraint_data data);"
    },
    {
      "name": "spine_transform_constraint_data_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 816,
          "character": 0
        },
        "end": {
          "line": 816,
          "character": 118
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone_data *spine_transform_constraint_data_get_bones(spine_transform_constraint_data data);"
    },
    {
      "name": "spine_transform_constraint_data_get_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 817,
          "character": 0
        },
        "end": {
          "line": 817,
          "character": 118
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone_data spine_transform_constraint_data_get_target(spine_transform_constraint_data data);"
    },
    {
      "name": "spine_transform_constraint_data_set_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 818,
          "character": 0
        },
        "end": {
          "line": 818,
          "character": 131
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_data_set_target(spine_transform_constraint_data data, spine_bone_data target);"
    },
    {
      "name": "spine_transform_constraint_data_get_mix_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 819,
          "character": 0
        },
        "end": {
          "line": 819,
          "character": 112
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_data_get_mix_rotate(spine_transform_constraint_data data);"
    },
    {
      "name": "spine_transform_constraint_data_set_mix_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 820,
          "character": 0
        },
        "end": {
          "line": 820,
          "character": 128
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_data_set_mix_rotate(spine_transform_constraint_data data, float mixRotate);"
    },
    {
      "name": "spine_transform_constraint_data_get_mix_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 821,
          "character": 0
        },
        "end": {
          "line": 821,
          "character": 107
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_data_get_mix_x(spine_transform_constraint_data data);"
    },
    {
      "name": "spine_transform_constraint_data_set_mix_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 822,
          "character": 0
        },
        "end": {
          "line": 822,
          "character": 118
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_data_set_mix_x(spine_transform_constraint_data data, float mixX);"
    },
    {
      "name": "spine_transform_constraint_data_get_mix_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 823,
          "character": 0
        },
        "end": {
          "line": 823,
          "character": 107
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_data_get_mix_y(spine_transform_constraint_data data);"
    },
    {
      "name": "spine_transform_constraint_data_set_mix_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 824,
          "character": 0
        },
        "end": {
          "line": 824,
          "character": 118
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_data_set_mix_y(spine_transform_constraint_data data, float mixY);"
    },
    {
      "name": "spine_transform_constraint_data_get_mix_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 825,
          "character": 0
        },
        "end": {
          "line": 825,
          "character": 113
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_data_get_mix_scale_x(spine_transform_constraint_data data);"
    },
    {
      "name": "spine_transform_constraint_data_set_mix_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 826,
          "character": 0
        },
        "end": {
          "line": 826,
          "character": 129
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_data_set_mix_scale_x(spine_transform_constraint_data data, float mixScaleX);"
    },
    {
      "name": "spine_transform_constraint_data_get_mix_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 827,
          "character": 0
        },
        "end": {
          "line": 827,
          "character": 113
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_data_get_mix_scale_y(spine_transform_constraint_data data);"
    },
    {
      "name": "spine_transform_constraint_data_set_mix_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 828,
          "character": 0
        },
        "end": {
          "line": 828,
          "character": 129
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_data_set_mix_scale_y(spine_transform_constraint_data data, float mixScaleY);"
    },
    {
      "name": "spine_transform_constraint_data_get_mix_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 829,
          "character": 0
        },
        "end": {
          "line": 829,
          "character": 113
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_data_get_mix_shear_y(spine_transform_constraint_data data);"
    },
    {
      "name": "spine_transform_constraint_data_set_mix_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 830,
          "character": 0
        },
        "end": {
          "line": 830,
          "character": 129
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_data_set_mix_shear_y(spine_transform_constraint_data data, float mixShearY);"
    },
    {
      "name": "spine_transform_constraint_data_get_offset_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 831,
          "character": 0
        },
        "end": {
          "line": 831,
          "character": 117
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_data_get_offset_rotation(spine_transform_constraint_data data);"
    },
    {
      "name": "spine_transform_constraint_data_set_offset_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 832,
          "character": 0
        },
        "end": {
          "line": 832,
          "character": 138
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_data_set_offset_rotation(spine_transform_constraint_data data, float offsetRotation);"
    },
    {
      "name": "spine_transform_constraint_data_get_offset_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 833,
          "character": 0
        },
        "end": {
          "line": 833,
          "character": 110
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_data_get_offset_x(spine_transform_constraint_data data);"
    },
    {
      "name": "spine_transform_constraint_data_set_offset_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 834,
          "character": 0
        },
        "end": {
          "line": 834,
          "character": 124
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_data_set_offset_x(spine_transform_constraint_data data, float offsetX);"
    },
    {
      "name": "spine_transform_constraint_data_get_offset_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 835,
          "character": 0
        },
        "end": {
          "line": 835,
          "character": 110
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_data_get_offset_y(spine_transform_constraint_data data);"
    },
    {
      "name": "spine_transform_constraint_data_set_offset_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 836,
          "character": 0
        },
        "end": {
          "line": 836,
          "character": 124
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_data_set_offset_y(spine_transform_constraint_data data, float offsetY);"
    },
    {
      "name": "spine_transform_constraint_data_get_offset_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 837,
          "character": 0
        },
        "end": {
          "line": 837,
          "character": 116
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_data_get_offset_scale_x(spine_transform_constraint_data data);"
    },
    {
      "name": "spine_transform_constraint_data_set_offset_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 838,
          "character": 0
        },
        "end": {
          "line": 838,
          "character": 135
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_data_set_offset_scale_x(spine_transform_constraint_data data, float offsetScaleX);"
    },
    {
      "name": "spine_transform_constraint_data_get_offset_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 839,
          "character": 0
        },
        "end": {
          "line": 839,
          "character": 116
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_data_get_offset_scale_y(spine_transform_constraint_data data);"
    },
    {
      "name": "spine_transform_constraint_data_set_offset_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 840,
          "character": 0
        },
        "end": {
          "line": 840,
          "character": 135
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_data_set_offset_scale_y(spine_transform_constraint_data data, float offsetScaleY);"
    },
    {
      "name": "spine_transform_constraint_data_get_offset_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 841,
          "character": 0
        },
        "end": {
          "line": 841,
          "character": 116
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_data_get_offset_shear_y(spine_transform_constraint_data data);"
    },
    {
      "name": "spine_transform_constraint_data_set_offset_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 842,
          "character": 0
        },
        "end": {
          "line": 842,
          "character": 135
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_data_set_offset_shear_y(spine_transform_constraint_data data, float offsetShearY);"
    },
    {
      "name": "spine_transform_constraint_data_get_is_relative",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 843,
          "character": 0
        },
        "end": {
          "line": 843,
          "character": 118
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_transform_constraint_data_get_is_relative(spine_transform_constraint_data data);"
    },
    {
      "name": "spine_transform_constraint_data_set_is_relative",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 844,
          "character": 0
        },
        "end": {
          "line": 844,
          "character": 135
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_data_set_is_relative(spine_transform_constraint_data data, spine_bool isRelative);"
    },
    {
      "name": "spine_transform_constraint_data_get_is_local",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 845,
          "character": 0
        },
        "end": {
          "line": 845,
          "character": 115
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_transform_constraint_data_get_is_local(spine_transform_constraint_data data);"
    },
    {
      "name": "spine_transform_constraint_data_set_is_local",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 846,
          "character": 0
        },
        "end": {
          "line": 846,
          "character": 129
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_data_set_is_local(spine_transform_constraint_data data, spine_bool isLocal);"
    },
    {
      "name": "spine_transform_constraint_update",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 848,
          "character": 0
        },
        "end": {
          "line": 848,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_update(spine_transform_constraint constraint);"
    },
    {
      "name": "spine_transform_constraint_get_order",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 849,
          "character": 0
        },
        "end": {
          "line": 849,
          "character": 105
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_transform_constraint_get_order(spine_transform_constraint constraint);"
    },
    {
      "name": "spine_transform_constraint_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 850,
          "character": 0
        },
        "end": {
          "line": 850,
          "character": 128
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_transform_constraint_data spine_transform_constraint_get_data(spine_transform_constraint constraint);"
    },
    {
      "name": "spine_transform_constraint_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 851,
          "character": 0
        },
        "end": {
          "line": 851,
          "character": 109
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_transform_constraint_get_num_bones(spine_transform_constraint constraint);"
    },
    {
      "name": "spine_transform_constraint_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 852,
          "character": 0
        },
        "end": {
          "line": 852,
          "character": 109
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone *spine_transform_constraint_get_bones(spine_transform_constraint constraint);"
    },
    {
      "name": "spine_transform_constraint_get_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 853,
          "character": 0
        },
        "end": {
          "line": 853,
          "character": 109
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone spine_transform_constraint_get_target(spine_transform_constraint constraint);"
    },
    {
      "name": "spine_transform_constraint_set_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 854,
          "character": 0
        },
        "end": {
          "line": 854,
          "character": 122
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_set_target(spine_transform_constraint constraint, spine_bone target);"
    },
    {
      "name": "spine_transform_constraint_get_mix_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 855,
          "character": 0
        },
        "end": {
          "line": 855,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_get_mix_rotate(spine_transform_constraint constraint);"
    },
    {
      "name": "spine_transform_constraint_set_mix_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 856,
          "character": 0
        },
        "end": {
          "line": 856,
          "character": 124
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_set_mix_rotate(spine_transform_constraint constraint, float mixRotate);"
    },
    {
      "name": "spine_transform_constraint_get_mix_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 857,
          "character": 0
        },
        "end": {
          "line": 857,
          "character": 103
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_get_mix_x(spine_transform_constraint constraint);"
    },
    {
      "name": "spine_transform_constraint_set_mix_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 858,
          "character": 0
        },
        "end": {
          "line": 858,
          "character": 114
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_set_mix_x(spine_transform_constraint constraint, float mixX);"
    },
    {
      "name": "spine_transform_constraint_get_mix_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 859,
          "character": 0
        },
        "end": {
          "line": 859,
          "character": 103
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_get_mix_y(spine_transform_constraint constraint);"
    },
    {
      "name": "spine_transform_constraint_set_mix_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 860,
          "character": 0
        },
        "end": {
          "line": 860,
          "character": 114
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_set_mix_y(spine_transform_constraint constraint, float mixY);"
    },
    {
      "name": "spine_transform_constraint_get_mix_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 861,
          "character": 0
        },
        "end": {
          "line": 861,
          "character": 109
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_get_mix_scale_x(spine_transform_constraint constraint);"
    },
    {
      "name": "spine_transform_constraint_set_mix_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 862,
          "character": 0
        },
        "end": {
          "line": 862,
          "character": 125
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_set_mix_scale_x(spine_transform_constraint constraint, float mixScaleX);"
    },
    {
      "name": "spine_transform_constraint_get_mix_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 863,
          "character": 0
        },
        "end": {
          "line": 863,
          "character": 109
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_get_mix_scale_y(spine_transform_constraint constraint);"
    },
    {
      "name": "spine_transform_constraint_set_mix_scale_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 864,
          "character": 0
        },
        "end": {
          "line": 864,
          "character": 125
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_set_mix_scale_y(spine_transform_constraint constraint, float mixScaleY);"
    },
    {
      "name": "spine_transform_constraint_get_mix_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 865,
          "character": 0
        },
        "end": {
          "line": 865,
          "character": 109
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_transform_constraint_get_mix_shear_y(spine_transform_constraint constraint);"
    },
    {
      "name": "spine_transform_constraint_set_mix_shear_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 866,
          "character": 0
        },
        "end": {
          "line": 866,
          "character": 125
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_set_mix_shear_y(spine_transform_constraint constraint, float mixShearY);"
    },
    {
      "name": "spine_transform_constraint_get_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 867,
          "character": 0
        },
        "end": {
          "line": 867,
          "character": 112
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_transform_constraint_get_is_active(spine_transform_constraint constraint);"
    },
    {
      "name": "spine_transform_constraint_set_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 868,
          "character": 0
        },
        "end": {
          "line": 868,
          "character": 127
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_transform_constraint_set_is_active(spine_transform_constraint constraint, spine_bool isActive);"
    },
    {
      "name": "spine_path_constraint_data_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 872,
          "character": 0
        },
        "end": {
          "line": 872,
          "character": 103
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_path_constraint_data_get_num_bones(spine_path_constraint_data data);"
    },
    {
      "name": "spine_path_constraint_data_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 873,
          "character": 0
        },
        "end": {
          "line": 873,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone_data *spine_path_constraint_data_get_bones(spine_path_constraint_data data);"
    },
    {
      "name": "spine_path_constraint_data_get_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 874,
          "character": 0
        },
        "end": {
          "line": 874,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_slot_data spine_path_constraint_data_get_target(spine_path_constraint_data data);"
    },
    {
      "name": "spine_path_constraint_data_set_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 875,
          "character": 0
        },
        "end": {
          "line": 875,
          "character": 121
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_data_set_target(spine_path_constraint_data data, spine_slot_data target);"
    },
    {
      "name": "spine_path_constraint_data_get_position_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 876,
          "character": 0
        },
        "end": {
          "line": 876,
          "character": 119
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_position_mode spine_path_constraint_data_get_position_mode(spine_path_constraint_data data);"
    },
    {
      "name": "spine_path_constraint_data_set_position_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 877,
          "character": 0
        },
        "end": {
          "line": 877,
          "character": 138
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_data_set_position_mode(spine_path_constraint_data data, spine_position_mode positionMode);"
    },
    {
      "name": "spine_path_constraint_data_get_spacing_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 878,
          "character": 0
        },
        "end": {
          "line": 878,
          "character": 117
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_spacing_mode spine_path_constraint_data_get_spacing_mode(spine_path_constraint_data data);"
    },
    {
      "name": "spine_path_constraint_data_set_spacing_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 879,
          "character": 0
        },
        "end": {
          "line": 879,
          "character": 135
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_data_set_spacing_mode(spine_path_constraint_data data, spine_spacing_mode spacingMode);"
    },
    {
      "name": "spine_path_constraint_data_get_rotate_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 880,
          "character": 0
        },
        "end": {
          "line": 880,
          "character": 115
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_rotate_mode spine_path_constraint_data_get_rotate_mode(spine_path_constraint_data data);"
    },
    {
      "name": "spine_path_constraint_data_set_rotate_mode",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 881,
          "character": 0
        },
        "end": {
          "line": 881,
          "character": 132
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_data_set_rotate_mode(spine_path_constraint_data data, spine_rotate_mode rotateMode);"
    },
    {
      "name": "spine_path_constraint_data_get_offset_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 882,
          "character": 0
        },
        "end": {
          "line": 882,
          "character": 107
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_path_constraint_data_get_offset_rotation(spine_path_constraint_data data);"
    },
    {
      "name": "spine_path_constraint_data_set_offset_rotation",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 883,
          "character": 0
        },
        "end": {
          "line": 883,
          "character": 128
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_data_set_offset_rotation(spine_path_constraint_data data, float offsetRotation);"
    },
    {
      "name": "spine_path_constraint_data_get_position",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 884,
          "character": 0
        },
        "end": {
          "line": 884,
          "character": 100
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_path_constraint_data_get_position(spine_path_constraint_data data);"
    },
    {
      "name": "spine_path_constraint_data_set_position",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 885,
          "character": 0
        },
        "end": {
          "line": 885,
          "character": 115
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_data_set_position(spine_path_constraint_data data, float position);"
    },
    {
      "name": "spine_path_constraint_data_get_spacing",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 886,
          "character": 0
        },
        "end": {
          "line": 886,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_path_constraint_data_get_spacing(spine_path_constraint_data data);"
    },
    {
      "name": "spine_path_constraint_data_set_spacing",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 887,
          "character": 0
        },
        "end": {
          "line": 887,
          "character": 113
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_data_set_spacing(spine_path_constraint_data data, float spacing);"
    },
    {
      "name": "spine_path_constraint_data_get_mix_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 888,
          "character": 0
        },
        "end": {
          "line": 888,
          "character": 102
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_path_constraint_data_get_mix_rotate(spine_path_constraint_data data);"
    },
    {
      "name": "spine_path_constraint_data_set_mix_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 889,
          "character": 0
        },
        "end": {
          "line": 889,
          "character": 118
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_data_set_mix_rotate(spine_path_constraint_data data, float mixRotate);"
    },
    {
      "name": "spine_path_constraint_data_get_mix_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 890,
          "character": 0
        },
        "end": {
          "line": 890,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_path_constraint_data_get_mix_x(spine_path_constraint_data data);"
    },
    {
      "name": "spine_path_constraint_data_set_mix_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 891,
          "character": 0
        },
        "end": {
          "line": 891,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_data_set_mix_x(spine_path_constraint_data data, float mixX);"
    },
    {
      "name": "spine_path_constraint_data_get_mix_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 892,
          "character": 0
        },
        "end": {
          "line": 892,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_path_constraint_data_get_mix_y(spine_path_constraint_data data);"
    },
    {
      "name": "spine_path_constraint_data_set_mix_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 893,
          "character": 0
        },
        "end": {
          "line": 893,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_data_set_mix_y(spine_path_constraint_data data, float mixY);"
    },
    {
      "name": "spine_path_constraint_update",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 895,
          "character": 0
        },
        "end": {
          "line": 895,
          "character": 89
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_update(spine_path_constraint constraint);"
    },
    {
      "name": "spine_path_constraint_get_order",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 896,
          "character": 0
        },
        "end": {
          "line": 896,
          "character": 95
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_path_constraint_get_order(spine_path_constraint constraint);"
    },
    {
      "name": "spine_path_constraint_get_data",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 897,
          "character": 0
        },
        "end": {
          "line": 897,
          "character": 113
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_path_constraint_data spine_path_constraint_get_data(spine_path_constraint constraint);"
    },
    {
      "name": "spine_path_constraint_get_num_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 898,
          "character": 0
        },
        "end": {
          "line": 898,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_path_constraint_get_num_bones(spine_path_constraint constraint);"
    },
    {
      "name": "spine_path_constraint_get_bones",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 899,
          "character": 0
        },
        "end": {
          "line": 899,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone *spine_path_constraint_get_bones(spine_path_constraint constraint);"
    },
    {
      "name": "spine_path_constraint_get_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 900,
          "character": 0
        },
        "end": {
          "line": 900,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_slot spine_path_constraint_get_target(spine_path_constraint constraint);"
    },
    {
      "name": "spine_path_constraint_set_target",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 901,
          "character": 0
        },
        "end": {
          "line": 901,
          "character": 112
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_set_target(spine_path_constraint constraint, spine_slot target);"
    },
    {
      "name": "spine_path_constraint_get_position",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 902,
          "character": 0
        },
        "end": {
          "line": 902,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_path_constraint_get_position(spine_path_constraint constraint);"
    },
    {
      "name": "spine_path_constraint_set_position",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 903,
          "character": 0
        },
        "end": {
          "line": 903,
          "character": 111
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_set_position(spine_path_constraint constraint, float position);"
    },
    {
      "name": "spine_path_constraint_get_spacing",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 904,
          "character": 0
        },
        "end": {
          "line": 904,
          "character": 95
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_path_constraint_get_spacing(spine_path_constraint constraint);"
    },
    {
      "name": "spine_path_constraint_set_spacing",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 905,
          "character": 0
        },
        "end": {
          "line": 905,
          "character": 109
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_set_spacing(spine_path_constraint constraint, float spacing);"
    },
    {
      "name": "spine_path_constraint_get_mix_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 906,
          "character": 0
        },
        "end": {
          "line": 906,
          "character": 98
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_path_constraint_get_mix_rotate(spine_path_constraint constraint);"
    },
    {
      "name": "spine_path_constraint_set_mix_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 907,
          "character": 0
        },
        "end": {
          "line": 907,
          "character": 114
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_set_mix_rotate(spine_path_constraint constraint, float mixRotate);"
    },
    {
      "name": "spine_path_constraint_get_mix_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 908,
          "character": 0
        },
        "end": {
          "line": 908,
          "character": 93
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_path_constraint_get_mix_x(spine_path_constraint constraint);"
    },
    {
      "name": "spine_path_constraint_set_mix_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 909,
          "character": 0
        },
        "end": {
          "line": 909,
          "character": 104
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_set_mix_x(spine_path_constraint constraint, float mixX);"
    },
    {
      "name": "spine_path_constraint_get_mix_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 910,
          "character": 0
        },
        "end": {
          "line": 910,
          "character": 93
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_path_constraint_get_mix_y(spine_path_constraint constraint);"
    },
    {
      "name": "spine_path_constraint_set_mix_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 911,
          "character": 0
        },
        "end": {
          "line": 911,
          "character": 104
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_set_mix_y(spine_path_constraint constraint, float mixY);"
    },
    {
      "name": "spine_path_constraint_get_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 912,
          "character": 0
        },
        "end": {
          "line": 912,
          "character": 102
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_path_constraint_get_is_active(spine_path_constraint constraint);"
    },
    {
      "name": "spine_path_constraint_set_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 913,
          "character": 0
        },
        "end": {
          "line": 913,
          "character": 117
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_path_constraint_set_is_active(spine_path_constraint constraint, spine_bool isActive);"
    },
    {
      "name": "spine_physics_constraint_data_set_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 916,
          "character": 0
        },
        "end": {
          "line": 916,
          "character": 123
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_bone(spine_physics_constraint_data data, spine_bone_data bone);"
    },
    {
      "name": "spine_physics_constraint_data_get_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 917,
          "character": 0
        },
        "end": {
          "line": 917,
          "character": 112
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone_data spine_physics_constraint_data_get_bone(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 918,
          "character": 0
        },
        "end": {
          "line": 918,
          "character": 107
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_x(spine_physics_constraint_data data, float x);"
    },
    {
      "name": "spine_physics_constraint_data_get_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 919,
          "character": 0
        },
        "end": {
          "line": 919,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_data_get_x(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 920,
          "character": 0
        },
        "end": {
          "line": 920,
          "character": 107
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_y(spine_physics_constraint_data data, float y);"
    },
    {
      "name": "spine_physics_constraint_data_get_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 921,
          "character": 0
        },
        "end": {
          "line": 921,
          "character": 99
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_data_get_y(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 922,
          "character": 0
        },
        "end": {
          "line": 922,
          "character": 117
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_rotate(spine_physics_constraint_data data, float rotate);"
    },
    {
      "name": "spine_physics_constraint_data_get_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 923,
          "character": 0
        },
        "end": {
          "line": 923,
          "character": 104
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_data_get_rotate(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 924,
          "character": 0
        },
        "end": {
          "line": 924,
          "character": 118
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_scale_x(spine_physics_constraint_data data, float scaleX);"
    },
    {
      "name": "spine_physics_constraint_data_get_scale_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 925,
          "character": 0
        },
        "end": {
          "line": 925,
          "character": 105
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_data_get_scale_x(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_shear_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 926,
          "character": 0
        },
        "end": {
          "line": 926,
          "character": 118
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_shear_x(spine_physics_constraint_data data, float shearX);"
    },
    {
      "name": "spine_physics_constraint_data_get_shear_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 927,
          "character": 0
        },
        "end": {
          "line": 927,
          "character": 105
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_data_get_shear_x(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_limit",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 928,
          "character": 0
        },
        "end": {
          "line": 928,
          "character": 115
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_limit(spine_physics_constraint_data data, float limit);"
    },
    {
      "name": "spine_physics_constraint_data_get_limit",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 929,
          "character": 0
        },
        "end": {
          "line": 929,
          "character": 103
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_data_get_limit(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_step",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 930,
          "character": 0
        },
        "end": {
          "line": 930,
          "character": 113
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_step(spine_physics_constraint_data data, float step);"
    },
    {
      "name": "spine_physics_constraint_data_get_step",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 931,
          "character": 0
        },
        "end": {
          "line": 931,
          "character": 102
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_data_get_step(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_inertia",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 932,
          "character": 0
        },
        "end": {
          "line": 932,
          "character": 119
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_inertia(spine_physics_constraint_data data, float inertia);"
    },
    {
      "name": "spine_physics_constraint_data_get_inertia",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 933,
          "character": 0
        },
        "end": {
          "line": 933,
          "character": 105
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_data_get_inertia(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_strength",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 934,
          "character": 0
        },
        "end": {
          "line": 934,
          "character": 121
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_strength(spine_physics_constraint_data data, float strength);"
    },
    {
      "name": "spine_physics_constraint_data_get_strength",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 935,
          "character": 0
        },
        "end": {
          "line": 935,
          "character": 106
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_data_get_strength(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_damping",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 936,
          "character": 0
        },
        "end": {
          "line": 936,
          "character": 119
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_damping(spine_physics_constraint_data data, float damping);"
    },
    {
      "name": "spine_physics_constraint_data_get_damping",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 937,
          "character": 0
        },
        "end": {
          "line": 937,
          "character": 105
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_data_get_damping(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_mass_inverse",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 938,
          "character": 0
        },
        "end": {
          "line": 938,
          "character": 128
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_mass_inverse(spine_physics_constraint_data data, float massInverse);"
    },
    {
      "name": "spine_physics_constraint_data_get_mass_inverse",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 939,
          "character": 0
        },
        "end": {
          "line": 939,
          "character": 110
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_data_get_mass_inverse(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_wind",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 940,
          "character": 0
        },
        "end": {
          "line": 940,
          "character": 113
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_wind(spine_physics_constraint_data data, float wind);"
    },
    {
      "name": "spine_physics_constraint_data_get_wind",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 941,
          "character": 0
        },
        "end": {
          "line": 941,
          "character": 102
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_data_get_wind(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_gravity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 942,
          "character": 0
        },
        "end": {
          "line": 942,
          "character": 119
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_gravity(spine_physics_constraint_data data, float gravity);"
    },
    {
      "name": "spine_physics_constraint_data_get_gravity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 943,
          "character": 0
        },
        "end": {
          "line": 943,
          "character": 105
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_data_get_gravity(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 944,
          "character": 0
        },
        "end": {
          "line": 944,
          "character": 111
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_mix(spine_physics_constraint_data data, float mix);"
    },
    {
      "name": "spine_physics_constraint_data_get_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 945,
          "character": 0
        },
        "end": {
          "line": 945,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_data_get_mix(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_inertia_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 946,
          "character": 0
        },
        "end": {
          "line": 946,
          "character": 137
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_inertia_global(spine_physics_constraint_data data, spine_bool inertiaGlobal);"
    },
    {
      "name": "spine_physics_constraint_data_is_inertia_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 947,
          "character": 0
        },
        "end": {
          "line": 947,
          "character": 116
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_physics_constraint_data_is_inertia_global(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_strength_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 948,
          "character": 0
        },
        "end": {
          "line": 948,
          "character": 139
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_strength_global(spine_physics_constraint_data data, spine_bool strengthGlobal);"
    },
    {
      "name": "spine_physics_constraint_data_is_strength_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 949,
          "character": 0
        },
        "end": {
          "line": 949,
          "character": 117
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_physics_constraint_data_is_strength_global(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_damping_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 950,
          "character": 0
        },
        "end": {
          "line": 950,
          "character": 137
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_damping_global(spine_physics_constraint_data data, spine_bool dampingGlobal);"
    },
    {
      "name": "spine_physics_constraint_data_is_damping_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 951,
          "character": 0
        },
        "end": {
          "line": 951,
          "character": 116
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_physics_constraint_data_is_damping_global(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_mass_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 952,
          "character": 0
        },
        "end": {
          "line": 952,
          "character": 131
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_mass_global(spine_physics_constraint_data data, spine_bool massGlobal);"
    },
    {
      "name": "spine_physics_constraint_data_is_mass_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 953,
          "character": 0
        },
        "end": {
          "line": 953,
          "character": 113
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_physics_constraint_data_is_mass_global(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_wind_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 954,
          "character": 0
        },
        "end": {
          "line": 954,
          "character": 131
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_wind_global(spine_physics_constraint_data data, spine_bool windGlobal);"
    },
    {
      "name": "spine_physics_constraint_data_is_wind_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 955,
          "character": 0
        },
        "end": {
          "line": 955,
          "character": 113
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_physics_constraint_data_is_wind_global(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_gravity_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 956,
          "character": 0
        },
        "end": {
          "line": 956,
          "character": 137
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_gravity_global(spine_physics_constraint_data data, spine_bool gravityGlobal);"
    },
    {
      "name": "spine_physics_constraint_data_is_gravity_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 957,
          "character": 0
        },
        "end": {
          "line": 957,
          "character": 116
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_physics_constraint_data_is_gravity_global(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_data_set_mix_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 958,
          "character": 0
        },
        "end": {
          "line": 958,
          "character": 129
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_data_set_mix_global(spine_physics_constraint_data data, spine_bool mixGlobal);"
    },
    {
      "name": "spine_physics_constraint_data_is_mix_global",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 959,
          "character": 0
        },
        "end": {
          "line": 959,
          "character": 112
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_physics_constraint_data_is_mix_global(spine_physics_constraint_data data);"
    },
    {
      "name": "spine_physics_constraint_set_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 961,
          "character": 0
        },
        "end": {
          "line": 961,
          "character": 114
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_bone(spine_physics_constraint constraint, spine_bone bone);"
    },
    {
      "name": "spine_physics_constraint_get_bone",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 962,
          "character": 0
        },
        "end": {
          "line": 962,
          "character": 103
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bone spine_physics_constraint_get_bone(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_inertia",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 963,
          "character": 0
        },
        "end": {
          "line": 963,
          "character": 113
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_inertia(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_inertia",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 964,
          "character": 0
        },
        "end": {
          "line": 964,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_inertia(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_strength",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 965,
          "character": 0
        },
        "end": {
          "line": 965,
          "character": 114
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_strength(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_strength",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 966,
          "character": 0
        },
        "end": {
          "line": 966,
          "character": 102
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_strength(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_damping",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 967,
          "character": 0
        },
        "end": {
          "line": 967,
          "character": 113
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_damping(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_damping",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 968,
          "character": 0
        },
        "end": {
          "line": 968,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_damping(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_mass_inverse",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 969,
          "character": 0
        },
        "end": {
          "line": 969,
          "character": 118
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_mass_inverse(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_mass_inverse",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 970,
          "character": 0
        },
        "end": {
          "line": 970,
          "character": 106
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_mass_inverse(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_wind",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 971,
          "character": 0
        },
        "end": {
          "line": 971,
          "character": 110
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_wind(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_wind",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 972,
          "character": 0
        },
        "end": {
          "line": 972,
          "character": 98
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_wind(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_gravity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 973,
          "character": 0
        },
        "end": {
          "line": 973,
          "character": 113
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_gravity(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_gravity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 974,
          "character": 0
        },
        "end": {
          "line": 974,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_gravity(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 975,
          "character": 0
        },
        "end": {
          "line": 975,
          "character": 109
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_mix(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_mix",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 976,
          "character": 0
        },
        "end": {
          "line": 976,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_mix(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_reset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 977,
          "character": 0
        },
        "end": {
          "line": 977,
          "character": 116
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_reset(spine_physics_constraint constraint, spine_bool value);"
    },
    {
      "name": "spine_physics_constraint_get_reset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 978,
          "character": 0
        },
        "end": {
          "line": 978,
          "character": 104
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_physics_constraint_get_reset(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_ux",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 979,
          "character": 0
        },
        "end": {
          "line": 979,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_ux(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_ux",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 980,
          "character": 0
        },
        "end": {
          "line": 980,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_ux(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_uy",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 981,
          "character": 0
        },
        "end": {
          "line": 981,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_uy(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_uy",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 982,
          "character": 0
        },
        "end": {
          "line": 982,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_uy(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_cx",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 983,
          "character": 0
        },
        "end": {
          "line": 983,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_cx(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_cx",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 984,
          "character": 0
        },
        "end": {
          "line": 984,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_cx(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_cy",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 985,
          "character": 0
        },
        "end": {
          "line": 985,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_cy(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_cy",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 986,
          "character": 0
        },
        "end": {
          "line": 986,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_cy(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_tx",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 987,
          "character": 0
        },
        "end": {
          "line": 987,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_tx(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_tx",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 988,
          "character": 0
        },
        "end": {
          "line": 988,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_tx(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_ty",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 989,
          "character": 0
        },
        "end": {
          "line": 989,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_ty(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_ty",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 990,
          "character": 0
        },
        "end": {
          "line": 990,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_ty(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_x_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 991,
          "character": 0
        },
        "end": {
          "line": 991,
          "character": 114
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_x_offset(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_x_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 992,
          "character": 0
        },
        "end": {
          "line": 992,
          "character": 102
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_x_offset(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_x_velocity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 993,
          "character": 0
        },
        "end": {
          "line": 993,
          "character": 116
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_x_velocity(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_x_velocity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 994,
          "character": 0
        },
        "end": {
          "line": 994,
          "character": 104
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_x_velocity(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_y_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 995,
          "character": 0
        },
        "end": {
          "line": 995,
          "character": 114
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_y_offset(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_y_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 996,
          "character": 0
        },
        "end": {
          "line": 996,
          "character": 102
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_y_offset(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_y_velocity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 997,
          "character": 0
        },
        "end": {
          "line": 997,
          "character": 116
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_y_velocity(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_y_velocity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 998,
          "character": 0
        },
        "end": {
          "line": 998,
          "character": 104
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_y_velocity(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_rotate_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 999,
          "character": 0
        },
        "end": {
          "line": 999,
          "character": 119
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_rotate_offset(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_rotate_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1000,
          "character": 0
        },
        "end": {
          "line": 1000,
          "character": 107
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_rotate_offset(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_rotate_velocity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1001,
          "character": 0
        },
        "end": {
          "line": 1001,
          "character": 121
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_rotate_velocity(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_rotate_velocity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1002,
          "character": 0
        },
        "end": {
          "line": 1002,
          "character": 109
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_rotate_velocity(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_scale_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1003,
          "character": 0
        },
        "end": {
          "line": 1003,
          "character": 118
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_scale_offset(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_scale_offset",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1004,
          "character": 0
        },
        "end": {
          "line": 1004,
          "character": 106
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_scale_offset(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_scale_velocity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1005,
          "character": 0
        },
        "end": {
          "line": 1005,
          "character": 120
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_scale_velocity(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_scale_velocity",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1006,
          "character": 0
        },
        "end": {
          "line": 1006,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_scale_velocity(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1007,
          "character": 0
        },
        "end": {
          "line": 1007,
          "character": 117
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_active(spine_physics_constraint constraint, spine_bool value);"
    },
    {
      "name": "spine_physics_constraint_is_active",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1008,
          "character": 0
        },
        "end": {
          "line": 1008,
          "character": 104
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_physics_constraint_is_active(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_remaining",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1009,
          "character": 0
        },
        "end": {
          "line": 1009,
          "character": 115
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_remaining(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_remaining",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1010,
          "character": 0
        },
        "end": {
          "line": 1010,
          "character": 103
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_remaining(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_set_last_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1011,
          "character": 0
        },
        "end": {
          "line": 1011,
          "character": 115
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_set_last_time(spine_physics_constraint constraint, float value);"
    },
    {
      "name": "spine_physics_constraint_get_last_time",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1012,
          "character": 0
        },
        "end": {
          "line": 1012,
          "character": 103
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_physics_constraint_get_last_time(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_reset_fully",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1013,
          "character": 0
        },
        "end": {
          "line": 1013,
          "character": 100
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_reset_fully(spine_physics_constraint constraint);"
    },
    {
      "name": "spine_physics_constraint_update",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1015,
          "character": 0
        },
        "end": {
          "line": 1015,
          "character": 112
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_update(spine_physics_constraint data, spine_physics physics);"
    },
    {
      "name": "spine_physics_constraint_translate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1016,
          "character": 0
        },
        "end": {
          "line": 1016,
          "character": 110
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_translate(spine_physics_constraint data, float x, float y);"
    },
    {
      "name": "spine_physics_constraint_rotate",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1017,
          "character": 0
        },
        "end": {
          "line": 1017,
          "character": 122
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_physics_constraint_rotate(spine_physics_constraint data, float x, float y, float degrees);"
    },
    {
      "name": "spine_sequence_apply",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1021,
          "character": 0
        },
        "end": {
          "line": 1021,
          "character": 118
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_sequence_apply(spine_sequence sequence, spine_slot slot, spine_attachment attachment);"
    },
    {
      "name": "spine_sequence_get_path",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1022,
          "character": 0
        },
        "end": {
          "line": 1022,
          "character": 119
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT const utf8 *spine_sequence_get_path(spine_sequence sequence, const utf8 *basePath, int32_t index);"
    },
    {
      "name": "spine_sequence_get_id",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1023,
          "character": 0
        },
        "end": {
          "line": 1023,
          "character": 76
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_sequence_get_id(spine_sequence sequence);"
    },
    {
      "name": "spine_sequence_set_id",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1024,
          "character": 0
        },
        "end": {
          "line": 1024,
          "character": 85
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_sequence_set_id(spine_sequence sequence, int32_t id);"
    },
    {
      "name": "spine_sequence_get_start",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1025,
          "character": 0
        },
        "end": {
          "line": 1025,
          "character": 79
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_sequence_get_start(spine_sequence sequence);"
    },
    {
      "name": "spine_sequence_set_start",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1026,
          "character": 0
        },
        "end": {
          "line": 1026,
          "character": 91
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_sequence_set_start(spine_sequence sequence, int32_t start);"
    },
    {
      "name": "spine_sequence_get_digits",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1027,
          "character": 0
        },
        "end": {
          "line": 1027,
          "character": 80
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_sequence_get_digits(spine_sequence sequence);"
    },
    {
      "name": "spine_sequence_set_digits",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1028,
          "character": 0
        },
        "end": {
          "line": 1028,
          "character": 93
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_sequence_set_digits(spine_sequence sequence, int32_t digits);"
    },
    {
      "name": "spine_sequence_get_setup_index",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1029,
          "character": 0
        },
        "end": {
          "line": 1029,
          "character": 85
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_sequence_get_setup_index(spine_sequence sequence);"
    },
    {
      "name": "spine_sequence_set_setup_index",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1030,
          "character": 0
        },
        "end": {
          "line": 1030,
          "character": 102
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_sequence_set_setup_index(spine_sequence sequence, int32_t setupIndex);"
    },
    {
      "name": "spine_sequence_get_num_regions",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1031,
          "character": 0
        },
        "end": {
          "line": 1031,
          "character": 85
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_sequence_get_num_regions(spine_sequence sequence);"
    },
    {
      "name": "spine_sequence_get_regions",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1032,
          "character": 0
        },
        "end": {
          "line": 1032,
          "character": 95
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_texture_region *spine_sequence_get_regions(spine_sequence sequence);"
    },
    {
      "name": "spine_texture_region_get_texture",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1034,
          "character": 0
        },
        "end": {
          "line": 1034,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void *spine_texture_region_get_texture(spine_texture_region textureRegion);"
    },
    {
      "name": "spine_texture_region_set_texture",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1035,
          "character": 0
        },
        "end": {
          "line": 1035,
          "character": 110
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_texture_region_set_texture(spine_texture_region textureRegion, void *texture);"
    },
    {
      "name": "spine_texture_region_get_u",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1036,
          "character": 0
        },
        "end": {
          "line": 1036,
          "character": 90
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_texture_region_get_u(spine_texture_region textureRegion);"
    },
    {
      "name": "spine_texture_region_set_u",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1037,
          "character": 0
        },
        "end": {
          "line": 1037,
          "character": 98
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_texture_region_set_u(spine_texture_region textureRegion, float u);"
    },
    {
      "name": "spine_texture_region_get_v",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1038,
          "character": 0
        },
        "end": {
          "line": 1038,
          "character": 90
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_texture_region_get_v(spine_texture_region textureRegion);"
    },
    {
      "name": "spine_texture_region_set_v",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1039,
          "character": 0
        },
        "end": {
          "line": 1039,
          "character": 98
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_texture_region_set_v(spine_texture_region textureRegion, float v);"
    },
    {
      "name": "spine_texture_region_get_u2",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1040,
          "character": 0
        },
        "end": {
          "line": 1040,
          "character": 91
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_texture_region_get_u2(spine_texture_region textureRegion);"
    },
    {
      "name": "spine_texture_region_set_u2",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1041,
          "character": 0
        },
        "end": {
          "line": 1041,
          "character": 100
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_texture_region_set_u2(spine_texture_region textureRegion, float u2);"
    },
    {
      "name": "spine_texture_region_get_v2",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1042,
          "character": 0
        },
        "end": {
          "line": 1042,
          "character": 91
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_texture_region_get_v2(spine_texture_region textureRegion);"
    },
    {
      "name": "spine_texture_region_set_v2",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1043,
          "character": 0
        },
        "end": {
          "line": 1043,
          "character": 100
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_texture_region_set_v2(spine_texture_region textureRegion, float v2);"
    },
    {
      "name": "spine_texture_region_get_degrees",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1044,
          "character": 0
        },
        "end": {
          "line": 1044,
          "character": 98
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_texture_region_get_degrees(spine_texture_region textureRegion);"
    },
    {
      "name": "spine_texture_region_set_degrees",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1045,
          "character": 0
        },
        "end": {
          "line": 1045,
          "character": 112
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_texture_region_set_degrees(spine_texture_region textureRegion, int32_t degrees);"
    },
    {
      "name": "spine_texture_region_get_offset_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1046,
          "character": 0
        },
        "end": {
          "line": 1046,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_texture_region_get_offset_x(spine_texture_region textureRegion);"
    },
    {
      "name": "spine_texture_region_set_offset_x",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1047,
          "character": 0
        },
        "end": {
          "line": 1047,
          "character": 111
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_texture_region_set_offset_x(spine_texture_region textureRegion, float offsetX);"
    },
    {
      "name": "spine_texture_region_get_offset_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1048,
          "character": 0
        },
        "end": {
          "line": 1048,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_texture_region_get_offset_y(spine_texture_region textureRegion);"
    },
    {
      "name": "spine_texture_region_set_offset_y",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1049,
          "character": 0
        },
        "end": {
          "line": 1049,
          "character": 111
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_texture_region_set_offset_y(spine_texture_region textureRegion, float offsetY);"
    },
    {
      "name": "spine_texture_region_get_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1050,
          "character": 0
        },
        "end": {
          "line": 1050,
          "character": 96
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_texture_region_get_width(spine_texture_region textureRegion);"
    },
    {
      "name": "spine_texture_region_set_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1051,
          "character": 0
        },
        "end": {
          "line": 1051,
          "character": 108
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_texture_region_set_width(spine_texture_region textureRegion, int32_t width);"
    },
    {
      "name": "spine_texture_region_get_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1052,
          "character": 0
        },
        "end": {
          "line": 1052,
          "character": 97
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_texture_region_get_height(spine_texture_region textureRegion);"
    },
    {
      "name": "spine_texture_region_set_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1053,
          "character": 0
        },
        "end": {
          "line": 1053,
          "character": 110
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_texture_region_set_height(spine_texture_region textureRegion, int32_t height);"
    },
    {
      "name": "spine_texture_region_get_original_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1054,
          "character": 0
        },
        "end": {
          "line": 1054,
          "character": 105
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_texture_region_get_original_width(spine_texture_region textureRegion);"
    },
    {
      "name": "spine_texture_region_set_original_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1055,
          "character": 0
        },
        "end": {
          "line": 1055,
          "character": 125
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_texture_region_set_original_width(spine_texture_region textureRegion, int32_t originalWidth);"
    },
    {
      "name": "spine_texture_region_get_original_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1056,
          "character": 0
        },
        "end": {
          "line": 1056,
          "character": 106
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_texture_region_get_original_height(spine_texture_region textureRegion);"
    },
    {
      "name": "spine_texture_region_set_original_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1057,
          "character": 0
        },
        "end": {
          "line": 1057,
          "character": 127
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_texture_region_set_original_height(spine_texture_region textureRegion, int32_t originalHeight);"
    },
    {
      "name": "spine_skeleton_bounds_create",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1060,
          "character": 0
        },
        "end": {
          "line": 1060,
          "character": 74
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_skeleton_bounds spine_skeleton_bounds_create();"
    },
    {
      "name": "spine_skeleton_bounds_dispose",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1061,
          "character": 0
        },
        "end": {
          "line": 1061,
          "character": 86
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_bounds_dispose(spine_skeleton_bounds bounds);"
    },
    {
      "name": "spine_skeleton_bounds_update",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1062,
          "character": 0
        },
        "end": {
          "line": 1062,
          "character": 133
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT void spine_skeleton_bounds_update(spine_skeleton_bounds bounds, spine_skeleton skeleton, spine_bool updateAabb);"
    },
    {
      "name": "spine_skeleton_bounds_aabb_contains_point",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1063,
          "character": 0
        },
        "end": {
          "line": 1063,
          "character": 122
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_skeleton_bounds_aabb_contains_point(spine_skeleton_bounds bounds, float x, float y);"
    },
    {
      "name": "spine_skeleton_bounds_aabb_intersects_segment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1064,
          "character": 0
        },
        "end": {
          "line": 1064,
          "character": 148
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_skeleton_bounds_aabb_intersects_segment(spine_skeleton_bounds bounds, float x1, float y1, float x2, float y2);"
    },
    {
      "name": "spine_skeleton_bounds_aabb_intersects_skeleton",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1065,
          "character": 0
        },
        "end": {
          "line": 1065,
          "character": 144
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_skeleton_bounds_aabb_intersects_skeleton(spine_skeleton_bounds bounds, spine_skeleton_bounds otherBounds);"
    },
    {
      "name": "spine_skeleton_bounds_contains_point",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1066,
          "character": 0
        },
        "end": {
          "line": 1066,
          "character": 140
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_skeleton_bounds_contains_point(spine_skeleton_bounds bounds, spine_polygon polygon, float x, float y);"
    },
    {
      "name": "spine_skeleton_bounds_contains_point_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1067,
          "character": 0
        },
        "end": {
          "line": 1067,
          "character": 147
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bounding_box_attachment spine_skeleton_bounds_contains_point_attachment(spine_skeleton_bounds bounds, float x, float y);"
    },
    {
      "name": "spine_skeleton_bounds_intersects_segment_attachment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1068,
          "character": 0
        },
        "end": {
          "line": 1068,
          "character": 173
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bounding_box_attachment spine_skeleton_bounds_intersects_segment_attachment(spine_skeleton_bounds bounds, float x1, float y1, float x2, float y2);"
    },
    {
      "name": "spine_skeleton_bounds_intersects_segment",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1069,
          "character": 0
        },
        "end": {
          "line": 1069,
          "character": 166
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bool spine_skeleton_bounds_intersects_segment(spine_skeleton_bounds bounds, spine_polygon polygon, float x1, float y1, float x2, float y2);"
    },
    {
      "name": "spine_skeleton_bounds_get_polygon",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1070,
          "character": 0
        },
        "end": {
          "line": 1070,
          "character": 141
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_polygon spine_skeleton_bounds_get_polygon(spine_skeleton_bounds bounds, spine_bounding_box_attachment attachment);"
    },
    {
      "name": "spine_skeleton_bounds_get_bounding_box",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1071,
          "character": 0
        },
        "end": {
          "line": 1071,
          "character": 143
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bounding_box_attachment spine_skeleton_bounds_get_bounding_box(spine_skeleton_bounds bounds, spine_polygon polygon);"
    },
    {
      "name": "spine_skeleton_bounds_get_num_polygons",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1072,
          "character": 0
        },
        "end": {
          "line": 1072,
          "character": 98
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_bounds_get_num_polygons(spine_skeleton_bounds bounds);"
    },
    {
      "name": "spine_skeleton_bounds_get_polygons",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1073,
          "character": 0
        },
        "end": {
          "line": 1073,
          "character": 101
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_polygon *spine_skeleton_bounds_get_polygons(spine_skeleton_bounds bounds);"
    },
    {
      "name": "spine_skeleton_bounds_get_num_bounding_boxes",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1074,
          "character": 0
        },
        "end": {
          "line": 1074,
          "character": 104
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_skeleton_bounds_get_num_bounding_boxes(spine_skeleton_bounds bounds);"
    },
    {
      "name": "spine_skeleton_bounds_get_bounding_boxes",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1075,
          "character": 0
        },
        "end": {
          "line": 1075,
          "character": 123
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT spine_bounding_box_attachment *spine_skeleton_bounds_get_bounding_boxes(spine_skeleton_bounds bounds);"
    },
    {
      "name": "spine_skeleton_bounds_get_width",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1076,
          "character": 0
        },
        "end": {
          "line": 1076,
          "character": 89
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_skeleton_bounds_get_width(spine_skeleton_bounds bounds);"
    },
    {
      "name": "spine_skeleton_bounds_get_height",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1077,
          "character": 0
        },
        "end": {
          "line": 1077,
          "character": 90
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float spine_skeleton_bounds_get_height(spine_skeleton_bounds bounds);"
    },
    {
      "name": "spine_polygon_get_num_vertices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1079,
          "character": 0
        },
        "end": {
          "line": 1079,
          "character": 83
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT int32_t spine_polygon_get_num_vertices(spine_polygon polygon);"
    },
    {
      "name": "spine_polygon_get_vertices",
      "kind": "function",
      "file": "/Users/badlogic/workspaces/spine-runtimes/spine-cpp/spine-cpp-lite/spine-cpp-lite.h",
      "range": {
        "start": {
          "line": 1080,
          "character": 0
        },
        "end": {
          "line": 1080,
          "character": 78
        }
      },
      "preview": "SPINE_CPP_LITE_EXPORT float *spine_polygon_get_vertices(spine_polygon polygon);"
    }
  ]
}